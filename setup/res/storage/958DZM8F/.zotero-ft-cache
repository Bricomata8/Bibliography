2017 IEEE International Symposium on Parallel and Distributed Processing with Applications and 2017 IEEE International Conference on Ubiquitous Computing and Communications (ISPA/IUCC)
Detecting Inﬂuential Nodes Incrementally and Evolutionarily in Online Social Networks
Jingjing Wang∗, Wenjun Jiang∗§, Kenli Li∗ and Keqin Li∗ ∗College of Computer Science and Electronic Engineering, Hunan University, Changsha, Hunan, 410082, China
Email: wjj @hnu.edu.cn, jiangwenjun@hnu.edu.cn §Corresponding Author

Abstract—Detecting inﬂuential nodes and understanding their evolution patterns are very important for information diffusion in online social networks. Although some work has been done in literature, it is still not clear that: (1) how to measure the inﬂuential degree of nodes for information diffusion, and (2) how inﬂuential nodes evolve during the diffusion process. To address the two challenges, we identify an incremental approach to measuring users’ inﬂuential degrees, detecting local and global inﬂuential nodes, and analyzing their evolution patterns, for which we propose three methods to partition time window. The three methods are the uniform time window, the non-uniform time window, and the uniform retweets number window, respectively. We apply our model on real data set in Sina weibo and conduct extensive analyses, from which we gain several interesting ﬁndings. We also validate the effects of our method, by comparing the inﬂuence spread with our detected inﬂuential nodes as seeds, to other seed selection algorithms, which shows that our work has better performance.
Index Terms—Evolution patterns, information diffusion, inﬂuential nodes, microblogging, online social networks
I. INTRODUCTION
Online social network (OSN) is becoming a popular tool in daily life. Examples include Facebook, Twitter, Sina Weibo and WeChat. There is large amount of information and information diffusion in OSNs. To better understand and even control the diffusion process, it is very necessary to identify inﬂuential nodes and understand their evolution patterns. Inﬂuential node detection has a directive and practical importance to several applications, including online advertising services [1], recommendation systems [2, 3], inﬂuence maximization [4, 5] and so on [6–9].
Although it has attracted many attentions [10–12], two challenges are still open. (1) There is a lack of commonly accepted deﬁnition and measurement of the inﬂuential degree of nodes. Existing work mainly uses static or quasi-static information, such as the network structure to measure the inﬂuential degree (or inﬂuence) [13, 14]. (2) It is not clear how inﬂuential nodes evolve in the information diffusion process. Some nodes may be inﬂuential in some period and be not inﬂuential in other periods (we call those local inﬂuential nodes). Meanwhile, some nodes may be always inﬂuential during all the diffusion process (we call those global inﬂuential nodes).
Our work aims to address the two challenges above. Keeping the dynamic characteristic of OSNs in mind, we identify an incremental approach to measuring users’ inﬂuential degree, detecting local and global inﬂuential nodes, and analyzing their evolution patterns. Particularly, we propose three time window partition methods to test their effects. Our contributions are fourfold:
1. We identify an incremental approach to better measuring the inﬂuential degree of nodes in dynamic OSNs. To be specific, we provide the exact deﬁnitions of local inﬂuential nodes,

global inﬂuential nodes, and incremental inﬂuential degree; and we propose an Incremental Inﬂuential Nodes Detection (IIND) algorithm according to user behavior in information diffusion.
2. We propose three methods to partition time window in diffusion, so as to explore the evolution patterns of inﬂuential nodes. They are the uniform time window, the non-uniform time window, and the uniform retweets number window, respectively.
3. We conduct extensive experiments on real data set in Sina Weibo, from which we ﬁnd the evolution patterns of inﬂuential nodes and we gain some interesting ﬁndings.
4. We validate the effects of the proposed IIND algorithm by implementing the independent cascade diffusion model on real data set. Experimental results show that the inﬂuential nodes detected by our IIND algorithm leads to a larger inﬂuence spread.
The remainder of the paper is organized as follows. Section II introduces related work. Section III states problem deﬁnition and solution overview. Time window and the Incremental Inﬂuential Nodes Detection (IIND) algorithm are introduced in Section IV in detail. Analysis of experimental results and evaluation are detailed in Section V. Finally, Section VI concludes the paper with future work and directions.
II. RELATED WORK
The study about information diffusion in OSNs is a vital issue, which helps us to control the outbreak of epidemics, understand the dynamics of diffusion, conduct advertisements for e-commercial products and supervise and control of public opinion, and so on. The earliest research on the information diffusion can be traced back to the study of the spread of the disease [15]. With the growing popularity of online social networks, a lot of real data make it easy to study information diffusion. Both academic and industrial have conducted a lot of research and they have made considerable achievements [16– 20].
About the study of inﬂuential nodes in information diffusion, the researchers make a lot efforts. From the middle of the last century, sociologists have put forward the theory of secondary communication [21], the strength of weak ties [22], the strength of strong ties [23], the structural hole theory [24] and other theories to analyze social inﬂuence from different angles. Scientists and academic researchers build models based on these theories to detect the inﬂuential nodes of information diffusion [25].
A lot of popular algorithms are mostly based on network topology. The Maximum Degree Heuristic [26] calculates degree of each node in the networks,and chooses the K nodes with the highest degree as the key points, in which the degree of a node is the number of edges incident upon it.

0-7695-6329-5/17/31.00 ©2017 IEEE

182

DOI 10.1109/ISPA/IUCC.2017.00035

High Clustering Coefﬁcient Heuristic [26] calculates clustering coefﬁcients of the nodes in the networks, and chooses the K nodes with the highest clustering coefﬁcient as the key points, where the clustering coefﬁcient of a node is the ratio of the number of its neighbor nodes connected to each other to the number of its neighbors. Kitsak et al. [27] argued that the location of a node is more signiﬁcant than its immediate neighbors in evaluating its spreading inﬂuence. So, they proposed coreness as a better indicator for a nodes spreading inﬂuence, which can be obtained by using the k-core (also called k-shell) decomposition [28] in networks. In addition, the HITs algorithm and the PageRank algorithm are based on iterative reﬁnement centralities of network. These algorithms can detect inﬂuential nodes in static or quasi-static network. But they do not consider the user behavior, so they are not applicable dynamic social networks.
Another methods are greedy algorithms. In the references [29, 30], the authors show that the optimization problem of selecting the most inﬂuential node is NP-hard. They propose a greedy algorithm, which can get a large inﬂuence spread. Till far, there exists a huge number of extensions of the original greedy algorithm by considering the variants of the spreading dynamics [31], by making use of the structural properties of the target networks [32], and so on. However, they are not applicable large social networks, because of their high complexity.
The above algorithms combined with network topology structure, are suitable to the complex networks. However, they are most static or quasi-static, without considering user behavior, and not suitable for this fast-changing online social networks [33]. So, we still lack a dynamic inﬂuential nodes detection algorithm based on user behavior and data partition in information diffusion.
From the dynamic angle, the inﬂuential nodes are changing in the process of information diffusion. There are evolution patterns of inﬂuential nodes. Some nodes are inﬂuential in some period and not inﬂuential in other periods. But how does the inﬂuential nodes change in different time windows and what is the evolution patterns of inﬂuential nodes? While these questions has not been studied.
In order to detect well the inﬂuential nodes of information diffusion, we give an exact deﬁnition of inﬂuential nodes, including local inﬂuential nodes and global inﬂuential nodes. And an Incremental Inﬂuential Nodes Detection (IIND) algorithm based on time windows is proposed. Afterwards, numerous experiments are conducted on real Sina Weibo data. We ﬁnd some interesting ﬁndings and evolution patterns about inﬂuential nodes from experimental results. Through simulation the diffusion process of information on real Sina Weibo data sets, we demonstrate that the IIND algorithm have good accuracy and performance.
III. PROBLEM DEFINITION AND SOLUTION OVERVIEW
In this section, we state the problems, and some related deﬁnitions. Then, an overview of our solution to solve these problems is introduced.
A. Problem Statement
The tasks of this paper are to detect inﬂuential nodes and understand their evolution patterns, which is important for information diffusion in OSNs. There are two major challenges to solve the problem above:

Fig. 1. Examples of propagation tree
(1) How to measure the inﬂuential degree of nodes for information diffusion? Some existing methods are based on the network topology [34]. They use the degree or centrality of nodes to measure the inﬂuence of nodes. However, these are static and general methods, without user behaviors and not suitable for the fast-changing OSNs.
(2) How inﬂuential nodes evolve during the diffusion process? Understanding evolution patterns of inﬂuential nodes is necessary for information diffusion trend. But, it has rarely been studied.
B. Related Deﬁnitions
Now, we introduce three basic concepts. They are inﬂuential nodes, propagation tree, and inﬂuential degree.
Deﬁnition 1. Inﬂuential nodes. In information diffusion, the user who has the potential to spread the information faster and vaster is more inﬂuential.
Deﬁnition 2. Propagation tree. A propagation tree T = V, E is ordered and directed, which contains |V | vertices and |E| edges. V = {0, 1, ..., n} is the set of vertices, in which each vi ∈ V represents a user. There is only one distinguished node vr ∈ V as the root node. E = { vi, vj | vi, vj ∈ V, vi = vj} is the set of edges among vertices. Each edge vi, vj ∈ E is directed, which means vj retweeted a message from vi.
It is worth noting that, the propagation tree can well reﬂect the cascade feature of information diffusion. And it is ordered. The retweet interval of user nodes increases with the increase of height in propagation tree. The children’s retweet interval of each node are in a single chronological order from left to right in the propagation tree. Fig. 1 shows the propagation trees of four messages. We take Fig. 1(d) for example: the users 2, 3, 4 retweeted this message from user 1, and users 5, 6 also retweeted this message from user 2 , and so on. In particular, user 2 retweeted earlier than user 3, 4, and user 3 retweeted earlier than user 4 at the same height in the propagation tree.
Deﬁnition 3. Inﬂuential degree Inﬂuential degree is a measure of inﬂuence of user. Speciﬁcally, there are centrality degree index, clustering coefﬁcient and so on [11].
C. Solution Overview
In this paper, we propose an Incremental Inﬂuential Nodes Detection (IIND) algorithm to detect inﬂuential nodes; we also propose three time window partition methods to mine evolution patterns of inﬂuential nodes.
There are two steps in IIND algorithm: 1) Detecting local inﬂuential nodes all windows from the propagation tree. 2) Detecting global inﬂuential nodes for information diffusion. To be more speciﬁc, the IIND algorithm is based on window partition. The user behaviors in information diffusion are also considered in IIND. Combining users’ retweeting behaviors, comment behaviors, and like/dislike behaviors, we propose a

183

Fig. 2. Process of Incremental Inﬂuential Nodes Detection(IIND) algorithm based on window partition in the propagation tree of a microblogging

Symbol T
V, E R, Ri
n w t, ti Δ, Δj
η

TABLE I SYMBOLS TABLE
Implication propagation tree nodes and edges set of propagation tree T the retweeted records set in windows, the retweeted records set in ith window the retweeted number of a microblogging the windows number of a microblogging the time stamp, the retweeting time stamp of node i the size of time window, the size of jth time
window the size of retweets number for partition window

measurement of inﬂuential nodes, that is, incremental inﬂuential degree. IIND detects the local inﬂuential nodes and global inﬂuential nodes based on incremental inﬂuential degree. Time window partition methods proposed by this paper can be divided into three categories: the uniform time window, the non-uniform time window, and the uniform retweets number window.
The whole process of IIND based on time window in propagation tree is showed in Fig. 2. Our goal is to detect the inﬂuential nodes by changing the propagation tree from the left to the right. In Fig. 2, the propagation tree is divided into three time windows by two red solid lines. Nodes 0, 1, 2, 3 are newly retweeting nodes in the ﬁrst time window, nodes 4, 5, 6, 7 are newly retweeting nodes in the second time window, and nodes 8, 9, 10 are newly retweeting nodes in the third time window. We distinguish every window with different colors. By computing the incremental inﬂuential degree of all nodes in the propagation tree in a time window, we can select the local inﬂuential nodes in this time window. In Fig. 2, the dark nodes 0, 2, 8 are local inﬂuential nodes of the 1th, 2th, and 3th time windows respectively.
We will describe the time windows partition methods and the IIND algorithm in detail in Section IV. Besides, the symbols and their implication in this article are shown in Table I.
IV. TIME WINDOW AND INCREMENTAL INFLUENTIAL NODES DETECTION (IIND) ALGORITHM
In this section, three kinds of time window partition methods and the IIND algorithm are be introduced in deteail. In the end, the time complexity analysis of IIND is explained.
A. Time Window
The information diffusion dynamics changes with time and retweeting dynamics in OSNs. We partition time windows from the perspective of time and the number of retweeted respectively. To be speciﬁc, we propose three time windows partition methods: the uniform time window, the non-uniform time window, and the uniform retweets number window.

Fig. 3. the retweeting dynamic distribution of information over time

1) Method 1: the uniform time window: The uniform time window means that the size of time window used to divide the data is ﬁxed.
Therefore, Method 1 can be described as follows. For an original information with n retweeted records, we sort its retweeted records in chronological order. According to the given time window size Δ, (w + 1) time points {p0, p1, ..., pi, ... pw} are generated to split the information data, in which p0 indicates the original information release time, and the points satisfy the following constraints:

p0 = 0,

p0 < p1 < ... < pi < ... < pw, pi+1 − pi = Δ(0 ≤ i ≤ w),

(1)

w = (tn − t0)/Δ ,

where (tn − t0) is the retweeting interval of the nth retweeted record. Suppose the records set in the ith time window is Ri, then, the interval of every retweeted record in Ri is between pi and pi+1. Finally, records sets in all time windows, R0, R1,...,Ri,...,Rw, can be obtained.
2) Method 2: the non-uniform time window: Considering that the diffusion of information is non-uniformly distributed in time, it is challenging to set a proper size of the time window in Method 1. If Δ is too small, the diffusion process will be divided into too many slices, and there may be fewer retweets in some later time windows. This make it difﬁcult to discover the evolution patterns of inﬂuential nodes. Conversely, if Δ is too large, the number of time windows will be quite small. The discovery of inﬂuential nodes evolution patterns may be skewed. Therefore, we propose two the non-uniform time window methods. The speciﬁc process is as follows.
Method 2.1: the non-uniform time window based on data statistics: We conduct intensive data analysis and statistics, and we ﬁnd that generally, there is a turning time point (denoted as ts) where the retweets number of a piece of information drops rapidly. Fig. 3 shows the change of retweets numbers with time, for four messages m1, m2, m3 and m4. The information retweeting dynamics is divided into two part by ts. Therefore, we can set two sizes of time windows, denoted as Δ1, Δ2, respectively. The size of the time windows before ts is Δ1, and that after ts is Δ2. Generally, we have Δ1<Δ2. Finally, we apply Method 1 for each part and the time window partition can be completed.
Method 2.2: the non-uniform time window based on arithmetic sequence: Because the retweets number of information declines over time, we propose Method 2.2, the non-uniform

184

time window based on arithmetic sequence. Given the original information release time p0 = 0, and tolerance of the arithmetic sequence d, we can generate (w + 1) time points, {p0, p1, ..., pi, ..., pw}, to split the information data, where

pi+1 − pi = Δi (0 ≤ i ≤ w − 1),

Δ0 < Δ1 < Δ2 < . . . < Δ(w−1),

(2)

Δ(i+1) − Δi = d (0 ≤ i < w − 2).

Suppose the records set in the ith time window is Ri, then, the retweeting interval of every retweeted record in Ri is between pi and pi+1.
3) Method 3: the uniform retweets number window: The previous window partition methods are proposed based on
time. Now we propose a window partition method based on
the number of retweets.
Given the size of retweets number η, the retweeted records of a piece of information can be divided into w sets. |Ri| (0 ≤ i ≤ w − 1) is the records number in the set Ri (0 ≤ i ≤ (w − 1)), then

|R0| = |R1| = |R2| = ... = |Rw−2| = η,

w = n/η ,

(3)

|Rw−1| ≤ η.

B. Incremental Inﬂuential Nodes Detection Algorithm

Firstly, we deﬁne the local and global inﬂuential nodes. Secondly, according to user behaviors, we model incremental inﬂuential degree, an inﬂuential measurement method. Finally, the IIND algorithm is introduced in detail. The goal of IIND algorithm is to ﬁnd inﬂuential nodes of information using incremental inﬂuential degree, including local inﬂuential nodes and global inﬂuential nodes.
Deﬁnition 4. Local inﬂuential nodes. Local inﬂuential nodes are users that trigger a large number of diffusion behaviors in a time window.
Deﬁnition 5. Global inﬂuential nodes. In the set of local inﬂuential nodes, some users occur in most windows as local inﬂuential nodes, so we call them global inﬂuential nodes.
Deﬁnition 6. Incremental inﬂuential degree. Incremental inﬂuential degree of user in a time window refers to its incremental contributions to the information diffusion in this time window.
In OSNs, the inﬂuences of users are associated with their attributes and behaviors. For example, the user with certiﬁcation has a greater inﬂuence than other without certiﬁcation. the user mentioned more time (including being retweeted, being commented and being liked) has a greater inﬂuence than other. Based on this fact, we model the Incremental inﬂuential degree.
Supposing that, in a propagation tree, the number of new incremental nodes is ri from ith window to (i + 1)th window, and a node v have rvi new children from ith window to i + 1th window, the incremental inﬂuential degree fvi of user v in ith time window is as follow:

fvi = αRatioiretweeted(v) + βRatioicommented(v)+ γRatioiliked(v) + g(v),

(4)

where α, β, and γ are the weight of each component,
which are given in the experimental section. These functions Ratioiretweeted(v), Ratioicommonted(v) and Ratioiliked(v) are the ratio of the number of retweeting, comment, liking inspired
by user v in ith time window to total number of retweeting,

comment, liking in ith time window, respectively. And the function g(v) expresses the certiﬁcation status of user v and other users retweeting his information. Finally, their concrete calculating methods are as follows.

Ratioiretweeted

=

rvi ri

;

(5)

Ratioicommented =

rvi j=1
ri j=1

cj cj

;

(6)

Ratioiliked =

rvi j=1
ri j=1

lj lj

.

(7)

Equation (5),(6) and (7) explain the contribution of user v in i time window in the aspects of the retweeting behaviors, comment behaviors and liking behaviors. In Equation (6), cj is the number of comments generated by the jth retweeting user. In Equation (7), lj is the number of liking generated by the jth retweeting user. In addition, Equation (8) and (9) explains the impact of user attributes on inﬂuence. Intuitively, h(v) constrains the model to bias towards the representative nodes with certiﬁcation. More specially, a representative node must has certiﬁcation. g(v) has a maximum of 1, and a minimum of 0. The value of g(v) is depend on certiﬁcation status of user v and his retweering users, and it effectively avoids prejudice. If user v is certiﬁed, and all his retweeting users with certiﬁcations, the g(v) is 1. If user v is not certiﬁed, or all his retweeting users without certiﬁcations, the g(v) is 0.

g(v) = h(v) ×

rvi j=1

h(j)

rvi j=1

1

(8)

h(v) =

1, user v with certif ication 0, other

(9)

Now, the IIND algorithm is introduced In detail. The IIND algorithm have two steps: local inﬂuential nodes detection and global nodes detection. The results of detection local inﬂuential nodes are the candidate nodes of global inﬂuential nodes. We describe these two steps in the following.
The process of detection local inﬂuential nodes in all windows from the propagation tree is shown in Algorithm 1. First, the propagation tree T is partitioned by window partition method M , and local inﬂuential nodes set L is empty(step 1). Next, this algorithm do the following for each time window i (step 3 to step 9): (i) for every node in propagation tree, calculating its incremental inﬂuential degree in ith time window (step 4, 5); (ii) selecting the top k nodes with maximum incremental inﬂuential degree, and adding these nodes to set Li as local inﬂuential nodes of ith window (step 6 to step 8). (iv) merging set Li into set L (step 9). Finally, this algorithm return the local inﬂuential nodes set L.
We select global inﬂuential nodes from the candidate local inﬂuential nodes. The number of global inﬂuential nodes depends on the information. That is important, because the number of global inﬂuential nodes directly affects the propagation characteristics, which are described in detail later.
Algorithm 2 is to detect global inﬂuential nodes from the candidate local inﬂuential nodes. Firstly, the global inﬂuential nodes set G is initialized empty, which indicates the fact that each candidate node is not added to G (step 1). Next, this algorithm do the following for each node l in the L (step 3 to

185

Algorithm 1 Local inﬂuential nodes detection

Input:

T : the propagation tree for a given information;

M : a window partition method to partition the propagation

tree;

k: the number of local inﬂuential nodes in per time

window.

Output:

L: the set of local inﬂuential nodes all windows.

1: partition the propagation tree T to w windows by the

method M ;

2: L ← ∅;

3: for i = 1 to w do

4: for user node v in the propagation tree T do

5: calculate the incremental inﬂuential degree v.d of v

in the ith window;

6: for j = 1 to k do

7: select node with the jth maximum incremental inﬂu-

ential degree in propagation tree, denoted a.

8:

add node a to the local inﬂuential nodes set Li;

9: L ← L ∪ Li;

10: return L

Algorithm 2 Global inﬂuential nodes detection

Input:

L: the local inﬂuential nodes set in all time windows;

w: the number of windows;

λ: a threshold parameter.

Output:

G: global inﬂuential nodes set.

1: G ← ∅;

2: for each local inﬂuential node l ∈ L do

3: calculate the number of l occurrences as local inﬂuential

node all windows ln;

4: lf ← ln/w;

5: if lf ≥ λ then

6:

G ← G l;

7: return G

step 6): (i) calculating the number ln of l occurrences as local inﬂuential nodes all windows; (ii) calculating the frequency of l as local inﬂuential nodes lf ; (iii) examining whether the lf greater than or equal to λ. If the lf satisﬁes this condition, then the user node l is added to G. The end conditions of this algorithm is that all user nodes in L are visited and returns a global inﬂuential nodes set G.
C. Time Complexity Analysis
The computational complexity of IIND can be analyzed from the section A. Suppose that there are N nodes in the propagation tree T , the number of time windows w and the number of local inﬂuential nodes k. In the process of local inﬂuential nodes detection, the computational complexities of calculating the incremental inﬂuential degree of nodes, and determining the klocal inﬂuential nodes are O(w × N ) and O(k × N ). In general, the number of time windows is larger than the number of local inﬂuential nodes in a time window. Hence, the computational complexity of local inﬂuential nodes detection is O(max{w×N, k×N }) = O(w×N ). In the global inﬂuential nodes detection, the computational complexity of counting the occurrences of every local inﬂuential node in

TABLE II SUMMARY DATA INFORMATION OF THE THREE TOPICS EVENTS

Hot topics

Days Original tweets

Yang Jiang

13

event

Baidu event

49

H hotel event 12

40860
21408 6035

Retweeted records 1035785
205606 547102

Follower networks
40860
21408 6035

all time windows is O((k × w)2). To sum up, the overall computational complexity of IIND is O(max w × N (k × w)2) It should be noted that the parameters k and w much less than N in large-scale networks.
V. EXPERIMENTAL RESULTS AND EVALUATION
In this section, we carry out experiments on real data set. By analyzing experiment results, we discover the evolution patterns of inﬂuential nodes. Finally, we evaluate the efﬁciency of IIND algorithm with simulation the diffusion process on information networks.
A. Experimental Setup
1) Data Set: To track information diffusion in online social networks, we crawl data from Sina Weibo, the most mainstream and the most popular microblogging platform in China. We selected three the most popular topics in 2016 ,the death of Yang Jiang, Baidu event and H hotel event. To capture tweets related to these three topics, we ﬁrst identiﬁed the set of keywords describing the topics by consulting news web sites and informed individuals. Then we grabbed relevant original tweets by searching for the keywords on Sina Weibo platform. The time period of each topic begin with the moment the event occurrence, until there is no relevant microblogging about this topic in Sina Weibo platform. Afterwards, for each original microblogging, we grabbed its retweeted records and relationships network. Because there were network constraints, interruptions, repetition and other phenomenons in this process, we carry out a data cleansing process to improve the data quality. Finally, the detailed information of data set is shown in Table II.
In data preprocessing phase, we ﬁlter out the microbloggings with less than 500 retweeted records. In addition, for each microblogging in data set, we create a propagation tree T with its retweeted records set R.
2) Parameters set: During the experiments, the parameters in three window partition methods were set as follows:
Method 1: (uniform time window) by analysis this microblogging data, we ﬁnd that after 48 hours the retweets numbers of microbloggings are quite small till the end. In this article, we set the size of time window Δ=1 hour.
Method 2.1: ( the non-uniform time window based on data statistics) as shown in Fig. 2, the retweets number of microbloggings drop rapidly near 2th hour. So, we set ts=2th hour, Δ1 = 1/6 hour and Δ2 =1 hour in the method based on data statistics.
Method 2.2:(the non-uniform time window based on arithmetic sequence) in the method based on arithmetic squence, the tolerance is set d = 1/6 hour.
Method 3: (uniform retweets number window) in experiments, we set the size of window η = 100, 500 successively to partition microblogging data. In addition, through the statistical analysis, we set α = 0.7, β = 0.2 and γ = 0.1 in incremental inﬂuential degree model.

186

(a) Method 1: uniform time window

(b) Method 2.1: the non-uniform time window

(c) Method 2.2: the non-uniform time window

(d) Method 3: the uniform retweets number window

Fig. 4. The distribution of the average incremental inﬂuential degree of inﬂuential nodes based on different time windows

B. Experimental Results
After window partition, we detect the local inﬂuential nodes and global inﬂuential nodes. For every window, the average incremental inﬂuential degree of top κ local inﬂuential nodes was counted. Then we create a line graph for all windows.
Fig. 4 shows the distribution of the average incremental inﬂuential degree of inﬂuential nodes detected by the IIND algorithm based on different methods over corresponding time windows. The Fig. 4(a)-(d) are Method 1, Method 2.1, Method 2.2 and Method 3, respectively.
From Fig. 4(a), we ﬁnd that the average incremental inﬂuential degree distribution of local inﬂuential nodes is a power law distribution, which has a long tail. Further more, this distribution agrees with the microblogging diffusion distribution over time in Fig. 3. In other words, the local inﬂuential nodes based on Method 1 have a good predictive ability for microblogging diffusion.
Fig. 4(b) and (c) show the distribution about local inﬂuential nodes in non-uniform time windows based on Mehtod 2.1 and Method 2.2 respectively. We ﬁnd that these distribution are quite different from Fig. 4(a). Speciﬁcally, every microblogging has two peaks in the distribution in Fig. 4(b). The window is divided into two parts by the ts. And peaks occur in the beginning of each part. It is said that no mater which part, the diffusion of information decrease with time. While, in Fig. 4(c), the peaks occur in early time windows, through the sizes of later time windows are on the increase.
Fig. 4(d) corresponds the IIND algorithm experiment based on Method 3. The size of uniform retweets number window is η = 500, and the number of local inﬂuential nodes is in every window κ = 3. It is obvious that the average incremental degrees of local inﬂuential nodes are equal in every window, which ﬂuctuates around a ﬁxed value 160. So the sum of

incremental inﬂuential degree sum of 3 local inﬂuential nodes in every window is about 480, accounting for 96% of the total retweets number in every window. There is a similar phenomenon in other experiment with η = 100, and κ = 2. It shows clearly that the inﬂuential nodes play leading roles in the microblogging diffusion process.
By comparison, we ﬁnd that the numbers of windows partitioned by different methods are different. For example, for the microblogging m2, the green lines in Fig. 4, it has 27 time windows based on Method 2.1 in Fig. 4(b), while it only has 17 time windows based on Mehtod 3 in Fig. 4(d). So, inﬂuential nodes detected by IIND based on different methods are different. The performance of IIND based on the three methods will be evaluated later.
C. Evolution Patterns Analysis
For analyzing the evolution of the inﬂuential nodes detected by IIND algorithm, we mainly extract six features of inﬂuential nodes. They are certiﬁcation, certiﬁcation reasons, the number ratio of followers to followees, status, city and retweet interval respectively.
Certiﬁcation: Sina Weibo celebrity certiﬁcation system is introduced to protect the interests of celebrities, so this is a sign used to distinguish ordinary people. Certiﬁcation reasons: we can determine the user identity according to microblogging certiﬁcation reasons. Twitters: Twitters of user u is his/her microblogging number so far. Twitters of users can be used to measure their activity and interaction frequency with other users in microblogging platform. City: the city of inﬂuential nodes can reﬂect the effect of different economic condition on people social entertainment. Retweeted interval: it is time interval between retweeted time stamp and publishing time stamp. The number ratio of followers to followees: only

187

TABLE III FEATURE ANALYSIS OF INFLUENTIAL NODES

Inﬂuential nodes Certiﬁcation ratio

Certiﬁcation reasons

#fowllowers/#followees

global inﬂuential nodes

1

news media, actor

56936.5

local inﬂuential nodes1

17/20

actor, and humorous etc well-known bloger

7789.02

local inﬂuential nodes2

1/3

local TV station, ofﬁcial

768

microblogging of organizations

Twitters 27850.6 21441
13764

City

Retweeted interval

BJ,SH,GD

0.40h

most BJ,SH,GD

3.46h

countrywide

11.93h

a large number of followers can not explain that the range of the user is large. Maybe its followees number is larger.
TABLE III shows the features of inﬂuential nodes. The inﬂuential nodes are divided into 3 groups, global inﬂuential nodes, local inﬂuential nodes 1, local inﬂuential nodes 2 respectively. The local inﬂuential nodes 1 are in the ﬁrst half of windows, while local inﬂuential nodes2 are in the second half windows.
There are some evolution patterns from TABLE III. We describe these patterns in the following.
1) The global inﬂuential nodes have greater inﬂuence spread than local inﬂuential nodes, and they are more active to update microblogging. In TABLE III, all of global inﬂuential nodes are certiﬁed, and these users are celebrities, including new media and actor. The average number ratio of followers to followees and the average status of global inﬂuential nodes is the highest of the three groups.
2) From the comparison data in TABLE III, we ﬁnd that the inﬂuential nodes are changed from new media to famous bloggers to ofﬁcial microblogging of organizations. It claims that news media has signiﬁcant inﬂuence in information diffusion in OSNs, which is similar to the ideas in reference [35].
3) The inﬂuential nodes change from the large cities to the countryside in information diffusion. All of global inﬂuential nodes are in Beijing, Shanghai, Guangdong, three cities with the strongest economic strength in China. And, early local inﬂuential nodes are most in these cities, and then local inﬂuential nodes evolve to countrywide. Maybe the people in the economically developed cities are sensitive to hot topics.
4) The certiﬁcation ratio of the inﬂuential nodes gradually decreased from 1 in information diffusion. And, early inﬂuential nodes trigger large number of users to retweet microlbogging. In other words, the smaller the retweet interval of the inﬂuential nodes are, the larger the retweets number triggered by them.
At last, we discuss the relations between the number of global inﬂuential nodes and the retweets number of microbogging. From Fig. 5, we see that the number of global inﬂuential nodes is positively associated with the retweets number of microblogging. In other words, for a microblogging, the more global inﬂuential nodes it has, the larger retweets number it will trigger.
D. Effectiveness Evaluation
The evaluation experiment measures the efﬁciency of IIND algorithm. The independent cascade model [29] with weights is employed as the information diffusion model to simulate the information diffusion process . We demonstrate the performance of IIND algorithm on Sina WeiBo data sets in comparison with two popular heuristic algorithms [26]: MDH and HCH, which are introduced in related work.
The process of diffusion in this model is described as: in directed microblogging network graph G(V, E), the edge from

Fig. 5. Retweets number versus the number of global inﬂuential nodes of microbloggings
Fig. 6. Inﬂuence spreads of an initial seed set selected by the IIND algorithm based on three window partition methods and baselines
u to v has weight wuv = 1/Idv, where the Idv is in-degree of user v, denoting the followee number of user v. It starts with an seed set of active nodes. In step t, every newly activated node i only has single change to activate each currently inactive neighbor j with probability wij, which is independent of the history thus far. If j has multiple newly activated neighbors, their attempts are sequenced in an arbitrary order. If i succeeds, then j will become active in step (t + 1); but whether or not i succeeds, it cannot make any further attempts to activate j in subsequent rounds. Again, the process runs until no more activations are possible.
We initialize seed set with inﬂuential nodes by IIND and baselines algorithms (MDH and HCH) respectively. Through the simulation procedure of information diffusion and many iterations, we compare the expected number of ﬁnal active nodes (inﬂuence spread) to evaluate efﬁciency of algorithms [36]. As reported in Fig. 6, the seed set selected by IIND has larger inﬂuence spread than MDH and HCH algorithms, no matter what window partition method the IIND algorithm based on. Further more, inﬂuential nodes detected by IIND based on M3 have a little larger inﬂuence spread.

188

VI. CONCLUSION
This paper focuses on information diffusion in OSNs in a ﬁne-grained way. To be speciﬁc, we focus on measuring the inﬂuential degree of nodes and studying the evolution patterns of inﬂuential nodes. Keeping the dynamic features of OSNs in mind, we propose an Incremental Inﬂuential Nodes Detection (IIND) algorithm, and three time window partition methods. We conduct extensive experiments on real data set in Sina Weibo and gain several interesting ﬁndings on the evolution patterns of inﬂuential nodes. We also validate the effects of the proposed algorithm, which shows its advantage. In future work, we are interested in applying the inﬂuential nodes to intervene information diffusion in OSNs.
ACKNOWLEDGEMENT
This work is supported by NSFC grants 61502161 and 61632009, the Chinese Fundamental Research Funds for the Central Universities 531107040845, ISTCP grant 2013DFB10070.
REFERENCES
[1] E. Bakshy, D. Eckles, R. Yan, and I. Rosenn, “Social inﬂuence in social advertising: evidence from ﬁeld experiments,” in Proceedings of the 13th ACM Conference on Electronic Commerce. ACM, 2012, pp. 146–161.
[2] W. Jiang, J. Wu, G. Wang, and H. Zheng, “Fluidrating: A timeevolving rating scheme in trust-based recommendation systems using ﬂuid dynamics,” Proc. IEEE INFOCOM, pp. 1707–1715, 2014.
[3] W. Jiang, J. Wu, and G. Wang, “On selecting recommenders for trust evaluation in online social networks.” ACM Trans. Internet Techn., vol. 15, no. 4, pp. 14–1, 2015.
[4] F. Morone and H. A. Makse, “Inﬂuence maximization in complex networks through optimal percolation,” Nature, vol. 524, no. 7563, pp. 65–68, 2015.
[5] S. Li, Y. Zhu, D. Li, and D. Kim, “Inﬂuence maximization in social networks with user attitude modiﬁcation,” in IEEE International Conference on Communications, 2014.
[6] W. Jiang, G. Wang, M. Z. A. Bhuiyan, and J. Wu, “Understanding graph-based trust evaluation in online social networks: Methodologies and challenges,” ACM Comput. Surv., vol. 49, no. 1, pp. 10:1–10:35, May 2016.
[7] W. Jiang, J. Wu, F. Li, G. Wang, and H. Zheng, “Trust evaluation in online social networks using generalized ﬂow,” IEEE Transactions on Computers (TC), vol. 65(3), pp. 952–963, 2016.
[8] W. Jiang and J. Wu, “Active opinion-formation in online social networks,” Proc. IEEE INFOCOM, pp. 1440–1448, 2017.
[9] W. Jiang, G. Wang, and J. Wu, “Generating trusted graphs for trust evaluation in online social networks,” Future Generation Computer Systems, vol. 31, pp. 48–58, 2014.
[10] L. Lu¨, D. Chen, X.-L. Ren, Q.-M. Zhang, Y.-C. Zhang, and T. Zhou, “Vital nodes identiﬁcation in complex networks,” Physics Reports, vol. 650, pp. 1–63, 2016.
[11] J. Sun and J. Tang, “A survey of models and algorithms for social inﬂuence analysis,” Social network data analytics, pp. 177–214, 2011.
[12] A. Guille, H. Hacid, C. Favre, and D. A. Zighed, “Information diffusion in online social networks: a survey,” ACM SIGMOD Record, vol. 42, no. 2, pp. 17–28, 2013.
[13] L. L, T. Zhou, Q. M. Zhang, and H. E. Stanley, “The h-index of a network node and its relation to degree and coreness,” Nature Communications, vol. 7, p. 10168, 2016.
[14] S. Carmi, S. Havlin, S. Kirkpatrick, Y. Shavitt, and E. Shir, “A model of internet topology using k-shell decomposition,” Proceedings of the National Academy of Sciences, vol. 104, no. 27, pp. 11 150–11 154, 2007.
[15] H. E. Tillett, Infectious Diseases of Humans; Dynamics and Control. Cambridge University Press, 1991.
[16] S. Gao, H. Pang, P. Gallinari, J. Guo, and N. Kato, “A novel embedding method for information diffusion prediction in social

network big data,” IEEE Transactions on Industrial Informatics, 2017. [17] S. Dhamal, K. J. Prabuchandran, and Y. Narahari, “Information diffusion in social networks in two phases,” IEEE Transactions on Network Science and Engineering, vol. PP, no. 99, pp. 1–1, 2017. [18] S. Mahdizadehaghdam, H. Wang, H. Krim, and L. Dai, “Information diffusion of topic propagation in social media,” IEEE Transactions on Signal and Information Processing Over Networks, vol. 2, no. 4, pp. 569–581, 2016. [19] D. Li, S. Zhang, X. Sun, H. Zhou, S. Li, and X. Li, “Modeling information diffusion over social networks for temporal dynamic prediction,” IEEE Transactions on Knowledge and Data Engineering, 2017. [20] K. Dedecius and P. M. Djuric´, “Sequential estimation and diffusion of information over networks: A bayesian approach with exponential family of distributions,” IEEE Transactions on Signal Processing, vol. 65, no. 7, pp. 1795–1809, 2017. [21] P. F. Lazarsfeld, B. Berelson, and H. Gaudet, “The peoples choice: how the voter makes up his mind in a presidential campaign.” 1968. [22] M. S. Granovetter, “The strength of weak ties,” American journal of sociology, vol. 78, no. 6, pp. 1360–1380, 1973. [23] D. Krackhardt, N. Nohria, and B. Eccles, “The strength of strong ties,” Networks in the knowledge economy, p. 82, 2003. [24] R. S. Burt, “The social structure of competition,” Explorations in economic sociology, vol. 65, p. 103, 1993. [25] T. Lou and J. Tang, “Mining structural hole spanners through information diffusion in social networks,” in Proceedings of the 22nd international conference on World Wide Web. ACM, 2013, pp. 825–836. [26] R. Narayanam and Y. Narahari, “A shapley value-based approach to discover inﬂuential nodes in social networks,” IEEE Transactions on Automation Science and Engineering, vol. 8, no. 1, pp. 130–147, 2011. [27] M. Kitsak, L. K. Gallos, S. Havlin, F. Liljeros, L. Muchnik, H. E. Stanley, and H. A. Makse, “Identiﬁcation of inﬂuential spreaders in complex networks,” Nature Physics, vol. 6, no. 11, pp. 888–893, 2010. [28] S. N. Dorogovtsev, A. V. Goltsev, and J. F. Mendes, “k-core organization of complex networks,” Physical Review Letters, vol. 96, p. 040601, 2006. [29] D. Kempe, J. Kleinberg, and E´ . Tardos, “Maximizing the spread of inﬂuence through a social network,” in Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 2003, pp. 137–146. [30] D. Kempe, J. Kleinberg, and E. Tardos, “Inﬂuential nodes in a diffusion model for social networks,” in International Colloquium on Automata, Languages, and Programming. Springer, 2005, pp. 1127–1138. [31] M. Kimura and K. Saito, “Tractable models for information diffusion in social networks,” in Knowledge Discovery in Databases: Pkdd 2006, European Conference on Principles and Practice of Knowledge Discovery in Databases, Berlin, Germany, September 18-22, 2006, Proceedings, 2006, pp. 259–271. [32] Y. Wang, G. Cong, G. Song, and K. Xie, “Community-based greedy algorithm for mining top-k inﬂuential nodes in mobile social networks,” in ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, 2010, pp. 1039–1048. [33] W. Jiang, J. Wu, G. Wang, and H. Zheng, “Forming opinions via trusted friends: Time-evolving rating prediction using ﬂuid dynamics,” IEEE Transactions on Computers (TC), vol. 65(4), pp. 1211–1224, 2016. [34] S. Wasserman and K. Faust, Social network analysis: Methods and applications. Cambridge university press, 1994, vol. 8. [35] L. Changhyun, K. Haewoon, P. Hosung, and M. Sue, “Finding inﬂuentials based on the temporal order of information adoption in twitter,” in Proceedings of the 19th international conference on World wide web. ACM, 2010, pp. 1137–1138. [36] C. Wang, W. Chen, and Y. Wang, “Scalable inﬂuence maximization for independent cascade model in large-scale social networks,” Data Mining and Knowledge Discovery, vol. 25, no. 3, p. 545, 2012.

189

