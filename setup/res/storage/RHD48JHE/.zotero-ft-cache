Original article
A general map matching algorithm for transport telematics applications
Mohammed A. Quddus Æ Washington Yotto Ochieng Æ Lin Zhao Æ Robert B. Noland

Abstract This paper describes a map-matching algorithm designed to support the navigational functions of a real-time vehicle performance and emissions monitoring system currently under development, and other transport telematics applications. The algorithm is used together with the outputs of an extended Kalman ﬁlter formulation for the integration of GPS and dead reckoning data, and a spatial digital database of the road network, to provide continuous, accurate and reliable vehicle location on a given road segment. This is irrespective of the constraints of the operational environment, thus alleviating outage and accuracy problems associated with the use of stand-alone location sensors. The map-matching algorithm has been tested using real ﬁeld data and has been found to be superior to existing algorithms, particularly in how it performs at road intersections.
Keywords GPS Æ Map-matching Æ Land vehicle navigation Æ Optimal estimation Æ Transport telematics
Introduction
Systems for monitoring and tracking vehicle movement offer many opportunities for the management of transport systems. The data collected from such systems also have the potential to provide a fuller understanding of the behaviour of travellers and the consequences of that behaviour both on the transport system and external effects, such as emissions of pollutants. This paper reports
Received: 4 June 2003 / Accepted: 21 August 2003 Published online: 19 September 2003 ª Springer-Verlag 2003
M.A. Quddus Æ W.Y. Ochieng (&) Æ L. Zhao Æ R.B. Noland Head of Engineering Geomatics Group, Department of Civil and Environmental Engineering, Imperial College, London SW7 2BU, UK E-mail: w.ochieng@ic.ac.uk Tel.: +44-207-5946104 Fax: +44-207-5946102

on a research and development project to create and demonstrate the capabilities of an accurate, reliable and cost-effective real time-data collection device, the vehicle performance and emissions monitoring system (VPEMS). The VPEMS will be ﬁtted on vehicles to monitor vehicle and driver performance and the level of emissions and pollutant concentrations. The navigation function of the VPEMS is responsible for the derivation of all spatial, temporal and spatio-temporal data of the vehicle including location in three-dimensional space, time, slope, speed and acceleration. The required navigation performance (RNP) that needs to be achieved in built-up areas, where the impact of pollution from trafﬁc is most serious, means that the navigation function cannot be supported by the global positioning system (GPS) alone. One possible solution is the integrated use of data from GPS with dead reckoning (DR) and map matching (MM). An extended Kalman ﬁlter (EKF) has been developed for the integration of GPS with dead reckoning sensor data (Zhao et al. 2002). This paper reports on the linking of the EKF with a new map matching algorithm to accurately locate a vehicle on a given road segment. Positioning sensors such as GPS using the basic navigation observable (pseudorange) or even the integrated GPS/DR system employing EKF algorithms do not always provide the location of a vehicle on a given road segment with the required level of accuracy. This is due to geometric constraints and/or error sources such as the atmosphere (Zhao et al. 2002). The availability of higher accuracy digital spatial road network data should make it possible to account for this and enable the actual vehicle position on a given road to be estimated with a higher level of accuracy. This technique is known as map matching (MM). A formal deﬁnition of MM can be found in Bernstein and Kornhauser (1996), White et al. (2000) and Greenfeld (2002). The most complex algorithm is the general MM algorithm that does not assume any knowledge or any other information regarding the expected location of the vehicle. The objective of this paper is to describe the limitations of existing MM algorithms and describe a general algorithm, which is essential for the VPEMS project and other telematics applications. The proposed MM algorithm uses the output of the GPS/DR EKF algorithm. Its performance has been validated using data from a representative built-up environment (the Greater London area).

DOI 10.1007/s10291-003-0069-z

GPS Solutions (2003) 7:157–167 157

Original article

Existing literature

Bernstein and Kornhauser (1996) describe several algo-

on map matching

rithms (or parts of algorithms) for matching an estimated position to a network representation of the street system.

Two things are apparent from this study. First, it is clear

Map-matching (MM) procedures vary from those using that this is a complex and fairly difﬁcult task. Point-tosimple search techniques (Kim et al. 1996), to those using point and curve-to-point matching are unlikely to work

more complex mathematical techniques such as Kalman very well, especially when there are errors in the position ﬁlters (Tanaka et al. 1990). A number of different algo- and/or errors in the network representation. Hence, other,

rithms have been proposed for MM for different applica- more complicated algorithms must often be used. Second,

tions, each of which has advantages and disadvantages (Table 1). Some of these are reviewed below.

though a number of different algorithms can be used, it seems clear that it is both important to perform some kind

Table 1 Summary of literature

Author (s), year

Algorithm

Procedures

Comments/disadvantages

Bernstein and Kornhauser (1996) Kim et al. (1996) White et al. (2000)
Bernstein and Kornhauser (1996) White et al. (2000) Taylor et al. (2001) White et al. (2000)
Bernstein and Kornhauser (1996) White et al. (2000) Taylor et al. (2001)
Bernstein and Kornhauser (1996) White et al. (2000)
Bernstein and Kornhauser (1996) White et al. (2000) Krakiwsky et al. (1988) Scott and Drane (1994) Jo et al. (1996)
Greenfeld (2002)

Map matching as a search problem or point-to-point matching
Point-to-curve matching
Point-to-curve matching with heading
Curve-to-curve matching
Improving point-to-curve matching Improving curve-to-curve matching Map matching as a statistical estimation
Similarity criteria by weighting system

Map the GPS tick to the ’closest’ node or shape point in the network
Map the GPS tick to the ’closest’ arc in the network (minimum distance from the point to the curve)
Same as point-to-curve matching algorithm except that it makes use of the heading information. If heading of the current GPS tick is not comparable to the heading of the arc, then the arc is dis carded. Match arcs deﬁned by a series of GPS point positions with arcs deﬁned by a set of points that deﬁne partial road center-lines. One method used for matching two curves (arcs) is to use the distance between them. Given a known initial point, the topology of the network makes it possible to reduce the set of likely arcs dramatically
Topological information of the network is used with curve-tocurve matching
In this approach, one considers a sequence of points and attempts to ﬁt a curve to them. This curve is constrained to lie on the network
Topological analysis of road network

(a) Only geometric information (b) Never makes use of
’historical’ information (c) Very sensitive to the way in
which the network was digitized. That is, other things being equal, arcs with more shape points are more likely to be properly matched (a) Only geometric information (b) Lack of the use of historical information and hence sometimes assigns the incorrect link (c) Quite unstable (a) Better algorithm than pointto-curve matching (b) GPS heading is sometimes very inaccurate especially when the vehicle speed is zero or very low. Therefore, incorrect matching can occur (a) Geometric information (b) Quite sensitive to outliers (c) Sometimes yield unexpected and undesirable results
Both geometric and topological information are used. But quite sensitive to the threshold that is used. One bad match can lead to a sequence of bad matches Very complex to implement and a real world experiment does not consistently out perform other algorithms It is particularly elegant when the model describing the ‘physics of motion’ is simple, e.g. movement is only possible along a straight line. Unfortunately, in most practical applications, the physics of motion is deﬁned by the network. This makes it quite difﬁcult to model (a) Much more likely to be
simple and correct (b) But sometimes assigns
incorrect links especially at intersections (c) Determination of vehicle position is not robust

158 GPS Solutions (2003) 7:157–167

Original article

of curve-to-curve matching and to incorporate topological information in the algorithm. Bernstein and Kornhauser conclude that the more attention that is given to the topological information, the better the algorithm performs. White et al. (2000) describe several algorithms (or parts of algorithms) for matching an estimated position to a network representation of the street system and attempt to evaluate four of them. Because most route changes occur at intersections, their study suggests that particular attention needs to be paid to the problems that arise at intersections. The discussion focuses on urban routes because most algorithms appear to work well on highways. However, they recommend that the algorithms need to be evaluated on a wider array of routes, especially in urban areas. The limited number and variety of routes considered in their study preclude general conclusions from being made. Taylor et al. (2001) propose a novel method of map matching using differential GPS and height aiding, referred to as the road reduction ﬁlter (RRF) algorithm. The general approach used is to improve the accuracy of the computed position of a vehicle via differential corrections and height aiding. The simple procedure used allows identiﬁcation of all possible candidates for the correct road while systematically removing the wrong ones. The RRF algorithm is improved using road centre-line network connectivity. The method was developed to deal with errors introduced by GPS selective availability (S/A), which was subsequently turned off in May 2000 (Ochieng and Sauer 2001). Its beneﬁts are still to be assessed in the S/A-free environment. Greenfeld (2002) reviews several approaches for solving the map matching problem and proposes a weighted topological algorithm. The algorithm is based on assessing the similarity between the characteristics of the street network and the positioning pattern of the user. The algorithm seems to work well even with relatively inferior or bouncy GPS data. Tests show that the procedure computes correct matches virtually everywhere. However, their study suggests that additional research is required to verify the accurate performance of the algorithm and to make an accurate position determination on a given road segment. It is clear from the existing literature that a key component of any MM algorithm is to identify the correct link among the candidate links because one bad match can lead to a sequence of bad matches. The literature review has also revealed that particular attention has to be paid to topological aspects of the road network, matching processes at intersections and algorithm validation in complex route structure environments, such as in built-up urban areas.
Some limitations of existing
map-matching algorithms
Most of the limitations of the existing algorithms have been explained in White et al (2000) and Greenfeld (2002). However, other additional limitations that should be addressed can be easily identiﬁed. Examples of these are illustrated in Figs. 1 and 2.

Fig. 1 Incorrect match without the vehicle heading information at junction
Fig. 2 Random GPS/DR points when the vehicle is stationary
In Fig. 1, the points P1 to P20 represent the GPS/DR positions of a vehicle travelling on a sample network. It is relatively easy in this case to determine that the vehicle path is represented by the links 1–2–3–4. Applying the Greenfeld (2002) algorithm, or any other algorithm explained in the above section, it is found that these points correctly match on the link until P10. However, at point P11, it selects link-5 as a correct link because the orientation of the GPS line between P11 and P12 is similar to link5. The reason why the algorithm assigns an incorrect link is that it has not taken into account any heading information of the vehicle at P11. There are many cases similar to this example. GPS/DR headings are fairly accurate and could be used to provide additional information in facilitating a correct identiﬁcation of the link. It is also possible to obtain GPS/DR positions as shown in Fig. 2. Between points P9 and P27, the vehicle is stationary for about 18 s. The various points in between P9 and P27 reﬂect the error in GPS position determination. It is obvious that it would not be possible to identify the correct link either using the algorithm proposed by Greenfeld (2002) or any of the other map-matching procedures described in the literature review section. One way to overcome this problem is to consider speed information from GPS/DR and assume a single position ﬁx when the vehicle is stationary (i.e. zero speed).

GPS Solutions (2003) 7:157–167 159

Original article

Another limitation of existing MM algorithms is associated assumed to be a node. Each line and node is associated

with the determination of the actual vehicle position on with a set of identifying attributes. The attributes of the

the selected link. Most algorithms adopt a simple per- node are the x- and y-coordinates that identify the spatial

pendicular projection of the position, as established by the location of the node. A node with the same x- and

positioning sensor, onto the selected link, and ignore the y-coordinates has the same identiﬁcation number. The

numerous errors associated with the positioning sensors attributes of each link are determined from the nodes

and the spatial road network mapping data. Scott and within the link (i.e. start node and end node). Therefore,

Drane (1994) looked at this issue and used an optimal map connectivity information of links within a given network is

estimate method rather than perpendicular mapping,

derived for input to the MM algorithm. The output of the

which is also referred to as the nearest point (NP)

GPS/DR EKF algorithm used as an input to the MM pro-

estimator (see Table 1 for limitations).

cess includes information on coordinates (eastings and

To overcome these limitations, a general MM algorithm is northings), speed, heading and the corresponding covari-

proposed in this paper and described in the next section. ances. The MM process is described in detail below.

Description of the map-matching algorithm

Map-matching process The MM process is shown diagrammatically in Fig. 3. The three data sources described above are the link and node

data and the positioning data. The process is initiated with

The MM algorithm analysed in this paper seeks to correct nodal matching to identify a correct link (among all the

for some of the deﬁciencies of other methods as previously links connected with the closest node to the GPS/DR

described. The basic characteristics of the algorithm in- point) and the determinations of the physical location of

clude the use of output from the GPS/DR EKF algorithm the GPS/DR point on that link. The next step analyses

developed by Zhao et al. (2002), including position,

whether the next GPS/DR point can be matched to the link

velocity and time. Information on the vehicle trajectory is identiﬁed at the previous step and then determines its

used to avoid sudden switching of mapped locations be- physical location on the link. It is vital to carry out the ﬁrst

tween unconnected road links. The topological aspects of step carefully and reliably, as there could potentially be

the road network and GPS/DR heading and speed infor- many candidate links.

mation allow improvements in performance of the algo-

rithm, especially at intersections. In addition, the physical

Selecting the correct link among candidate links

location of the vehicle on the selected link is determined The most difﬁcult task of any MM algorithm is to select the

from the weighted averages of the two-state determina- correct link among the candidate links. This will occur at

tions. The weighting factors are determined empirically, as

described further below. Finally, the errors associated with

the bearing of the link (due to the map resolution and

curvature of the link) and positioning sensors are con-

sidered to determine the physical location of the vehicle on

the link. The details of the algorithm are described below

by ﬁrst describing and deﬁning the data inputs, followed

by a description of the map-matching process, and a

procedure for identifying data outliers.

Definition of data inputs
There are several ways to represent digital spatial road network data. The planar model is currently one of the most commonly accepted models because of its high efﬁciency and low complexity. In the planar model, as described by White et al (2000) and Greenfeld (2002), network representation (N) of a street system (N") consists of a set of curves in R2, each of which is called an arc. Each arc A, which is a single representation of the road, can be completely described by a ﬁxed series of points A0, A1, ..., AnA, each of which is in R2. Those points are divided into nodes and shape points. The endpoints (i.e. A0 and AnA) of the arc A are referred to as nodes whereas the other points (i.e. A1, A2, ..., AnA)1) are referred to as shape points. Arcs without shape points are referred to as lines and arcs with shape points are referred to as polylines. Each polyline consists of a series of lines depending on the number of shape points within the arc. Each line is assumed to be piece-wise linear. For simplicity, each shape point is

Fig. 3 Diagrammatic representation of map-matching algorithm

160 GPS Solutions (2003) 7:157–167

Original article

junctions in a network. Based on the various similarity criteria between the derived GPS/DR point and the network topology at a junction, a weighting system can be used to select the correct arc as proposed by Greenfeld (2002). The criteria used in the Greenfeld algorithm are the similarity in orientation (i.e. the degree of parallelism between the line formed by two consecutive GPS points and the street network arc), proximity of the point to the street arc and the size of the intersecting angle between the GPS-derived line and the street arc. The weighting scheme evaluates several candidate arcs for a correct match by computing a likelihood score based on these criteria. Greenfeld (2002) determined that similarity in orientation is more important than proximity, but this can be adjusted based upon the weights assigned to each criterion. This same procedure is used in the algorithm derived here. To improve the performance of the algorithm, the calibrated DR heading is used instead of the GPS-derived line as an input. In addition, the position of the GPS/DR point relative to its closest network node is considered and vehicle speed information is also taken into account. Different weighting factors are used to control for the importance of each of these criterion in determining the best map-matching procedure. Each procedure is described in turn in the following sections.

WSH ¼ AH cos ðDb0Þ

ð1Þ

where:

Db=b)b¢ Db¢=Db, if )180° £ Db £ 180° Db¢=360°)Db, if Db>180° Db¢=360°+Db, if Db<)180°

WSH is the weighting score for vehicle heading and orientation of the link, AH (>0) is the weighting parameter for WSH and its value can be obtained from Eq. (7), described below.
The lower the value of Db’ the higher the probability of the
candidate link being the correct link, i.e. as the value of Db’
increases the value of WSH decreases, as deﬁned by the use of the cosine function. Moreover, the cosine function
allows negative weights if Db’ is greater than 90°.

Weighting for proximity of a point to a link
Two types of weighting scores are used for the proximity test. The ﬁrst is based on the perpendicular distance from the GPS/DR point to the link. Suppose P(x3, y3) is the GPS/DR point and AB is a link (see Fig. 5), then the perpendicular distance from this point to the link is

Weighting for vehicle heading and bearing of the link Suppose the algorithm selected the vehicle position for GPS/DR points P1, P2 and P3 on link 1 (see Fig. 4). Now the problem is to identify the next link using information from point P4. Because the current position of the vehicle is on link 1, candidate links for point P4 are links 2, 3 and 4. To select the correct link, a weighting scheme is applied. The angle b, provided by GPS/DR, is the heading of the vehicle at point P4 measured relative to a northerly direction. This information provides a good indicator of the probable direction of the vehicle at this point. The heading of the link (b’) is then determined from the spatial map data (in this case, 90° for link 4, 0° for link 2 and 180° for link 3). The difference between the GPS/DR derived heading (b) and the spatially derived heading (b¢) is Db and is used to formulate the weighting scheme as given below.

D ¼ x3ðy1 À qy2ÞﬃﬃﬃÀﬃﬃﬃﬃﬃyﬃﬃ3ﬃﬃðﬃﬃxﬃﬃ1ﬃﬃﬃÀﬃﬃﬃﬃﬃxﬃﬃ2ﬃﬃÞﬃﬃﬃþﬃﬃﬃﬃﬃðﬃxﬃﬃﬃ1ﬃﬃyﬃﬃ2ﬃ À x2y1Þ

ð2Þ

ðx1 À x2Þ2 þ ðy1 À y2Þ2

As perpendicular distance (D) decreases, proximity increases, therefore, the weighting score for perpendicular distance is deﬁned as,

WSPD ¼ AP=D

ð3Þ

where WSPD is the score for proximity of the point to the street segment, D (>0) is the perpendicular distance from
the GPS/DR point to the road segment, and AP (>0) is the weighting parameter that controls the value of WSPD. Any value of AP can be taken to determine WSPD. The smaller the perpendicular distance the higher the
score, i.e. if the point P is close to the link i, then there is a
greater probability that the link is the correct link.
Proximity can also be determined by whether the line
between two consecutive GPS/DR points [i.e. P(xi)1, yi)1)and P(xi, yi)] and link i physically intersect. The proximity between these two lines is measured by their

Fig. 4 Similarity in vehicle heading and bearing of the link

Fig. 5 Perpendicular distance

GPS Solutions (2003) 7:157–167 161

Original article

Fig. 6 Location of the point relative to the link

intersecting angle, h (acute angle). Smaller intersecting angles lead to closer proximity. If these two lines do not physically intersect, then the score is taken as zero. The weighting score for this proximity is

WSPI ¼ AP cos ðhÞ

ð4Þ

where WSPI is the score for an intersection if an intersection exists, AP is as previously deﬁned.

Weighting score for the position of the point
relative to the link
In Fig. 6, P(xi, yi) is a GPS/DR position and the variables a1, a2, a3 and a4 deﬁne the relative location of this point to links 1, 2, 3 and 4, respectively. Because this point can easily map onto either link 2 or 3, the weighting score must be higher for those links than the other links, i.e. the larger the angle, the lower the probability that the link is a correct match. This may not be the case under conditions with multiple paths such as an intersection approach. However, the algorithm also uses weights for the vehicle-heading information, which would provide the information to deal with these cases. Therefore, the following weighting score of,

Fig. 7 A speciﬁc geometric conﬁguration with GPS/DR position ﬁxes

than that of proximity (WSPD+WSPI). Therefore, the fol-

lowing formulation is proposed to select the value of the

weighting parameters.

'

AH ¼ aAP ARP ¼ bAP

ð7Þ

where a and b are the weighting factors and b>a>1. The magnitude of a and b depends on the a priori knowledge of the statistical performance of the sensors and the topology of the network. Some preliminary applications of the algorithm with real ﬁeld GPS/DR positioning data on a representative built-up environment is also necessary to ﬁx the value of a and b. After ﬁxing the value of a and b, any positive value of AP will provide good results. The value of TWS is then calculated for all the candidate links. The link that provides the highest score is taken as the correct link for that GPS/DR point.

WSRP ¼ ARP cos ðaÞ

ð5Þ

where WSRP is the weighting score for the position of GPS/ DR relative to link, a ( £ 180) is the angle between the
candidate link and the line through the nearest node and
point and ARP (>0) is the weighting parameter for WSRP and its value can be obtained from Eq. (7).

Total weighting scores (TWS) The total weighting score can then be obtained by summing up the individual scores. Therefore, the total weighting score (TWS) is deﬁned as follows:

TWS ¼ WSH þ ðWSPD þ WSPI Þ þ WSRP

ð6Þ

By selecting different values for the weighting parameters, the weight assigned can be carefully controlled. Detailed examinations of ﬁeld data suggest that the weighting score for heading (WSH) should be given more importance than that of relative position (WSRP). One of the reasons is that the heading information used in this study is quite stable as a result of the use of integrated GPS/DR system with an EKF algorithm. Furthermore, the weighting score for relative position (WSRP) should be given more importance

Weighting results with a typical geometric configuration
The weighting scheme has been tested using a geometric conﬁguration that could potentially provide an incorrect result. Figure 7 displays a simple geometric conﬁguration with data for a vehicle moving from link 1 to link 3. As can be seen, there is one data point on link 2 that could indicate that the path followed is from link 1 to link 2. The values along the arrow symbols indicate the vehicle heading at each position. The identiﬁcation of the actual link for the points P1 and P2 using the weighting scheme is very straightforward and it is determined as link 1. The next step is to identify the link for the point P3 which falls on link 2. One could assume that the weighting scheme gives link 2 the highest TWS for this point since it is exactly on that link. Using the parameters values a=5, AP=10, b=2 and the weighting scores derived for each link, Table 2 shows that link 3 has the highest TWS conﬁrming the robustness of the approach. For further comparison, we also applied the weighting scheme as described in Greenfeld (2002) to the above conﬁguration. Using the same parameters as Greenfeld of CAZ=10, nAZ=5, CD=10, a=0.1, nD=1.2, Cl=10 and nAZ=10, the total score (W) is calculated as:

162 GPS Solutions (2003) 7:157–167

Original article

Table 2 Calculation of TWS for the point P3 using proposed algorithm

Link

Variables

TWS

1

Db¢1=10°, D1=40,

47.74

h1=nil, a1=95°

2

Db¢2=75°,

D2=1,

45.53

h2=75° a2=0°

3

Db¢3=10°, D3=40,

51.23

h3=nil, a2=85°

Fig. 8

4

Db¢4=100°, D4=2,

)23.60

Determination of vehicle position

h4=nil, a4=175°

Table 3 Calculation of W for the point P3 using Greenfeld’s algorithm

Link

Variables

W

1

DAZ=25°, D1=40

7.745 (Cl[0)

2

DAZ=60°, D2=0

10.131

3

DAZ=25°, D3=40

7.745 (Cl[0)

4

DAZ=155°, D4=2

3.655 (Cl[0)

W ¼ CAZ: cosnAZ ðDAZÞ þ ðCD À a:DnD Þ þ CI: cosnI ðDAZÞ

Results are shown in Table 3. The highest weight is given to link 2 with an indeterminate selection between links 1 and 3, demonstrating the advantages of the method developed here in these types of situations.

Determination of the physical position

of the vehicle on the selected link

The bearing of the link and the vehicle speed (m) from the

integrated GPS/DR unit can be used to calculate the vehicle position on a link. Suppose Pt and Pt+1 represent the

vehicle position on a link at time t and t+1, respectively

(Fig. 8). The initial easting and northing of the vehicle at point Pt is known. From the bearing of the link (i.e. h) and speed of the vehicle at Pt+1, the increment in easting and

northing can be obtained as follows:

'

DEi ¼ ðv Ã 1Þ sin h DNi ¼ ðv Ã 1Þ cos h

ð8Þ

Therefore, the position of the vehicle at point Pt+1 can be

calculated as follows:

'

Eiþ1 ¼ Ei þ DEi Niþ1 ¼ Ni þ DNi

ð9Þ

The other method for determining position is from

the GPS/DR positioning sensor (Fig. 8). Suppose the GPS/DR unit locates the vehicle at point PS with easting,

ES and northing, NS. The projected easting (PES)

and northing (PNS) on the link can be obtained as

follows:

9

PE ¼ = ðx2Àx1Þ½ESðx2Àx1ÞþNSðy2Ày1Þþðy2Ày1Þðx1y2Àx2y1Þ

S

ðx2 Àx1 Þ2 þðy2 Ày1 Þ2

PN ¼ ; ðy2Ày1Þ½ESðx2Àx1ÞþNSðy2Ày1ÞÀðx2Àx1Þðx1y2Àx2y1Þ

S

ðx2 Àx1 Þ2 þðy2 Ày1 Þ2

ð10Þ

Now the two measurements Pmap (Emap, Nmap) from the digital map and CP (PES, PNS) from sensors are independent (Fig. 9). Therefore, the optimal estimation of the vehicle

location on the link can be determined as a weighted

average of these two measurements as given below.

E^ N^

¼ ¼

    r2ES E þ PE r2ESþr2map     r2NS N þ PN r2NSþr2map

map map

r2map

r2ES þr2map

S

r2map

r2NS þr2map

S

9 = ;

ð11Þ

where E^ is the estimated vehicle position (easting) on the selected link, N^ is the estimated vehicle position (northing) on the selected link, rmap2 is the variance of errors associated with Emap,, and rE2S is the variance of errors associated with ES, rNS2 is the variance of errors associated with NS.As can be seen from Eq. (9), the error sources associated with the measurement of Emap are those associated with the speed of the vehicle from the GPS/DR unit and
the bearing of the link (due to the digital map resolution and
curvature of the link). All the variances associated with these errors need to be considered to compute rmap2. However, rS2can be obtained directly from the GPS/DR unit.

Examining whether the vehicle is still on the current link After assigning the vehicle position for the ﬁrst two GPS/DR points on a correct link, the algorithm will examine whether the vehicle is still on the link. Therefore, two conditions have been introduced to test this criterion. They are:
– The difference between the bearings of the two con-
secutive GPS/DR lines [i.e. lines between P(xi, yi)and P(xi+1, yi+1) and P(xi+2, yi+2)] that is greater than 45°.
– The difference between the heading of the two consec-
utive GPS/DR points is greater than 45° and the alpha (a) is greater than 90°.
If any of the above conditions are true, then the algorithm assumes that the vehicle is approaching an intersection

Fig. 9 Optimal estimate of vehicle position on the link

GPS Solutions (2003) 7:157–167 163

Original article

and initializes the map-matching process. Otherwise, the vehicle is still on the previous link and the new location is

Algorithm testing

calculated using Eq. (11).

To test the performance of the MM algorithm, a com-

Outlier identification
With the integrated GPS/DR sensor, a signiﬁcant number of outliers can be eliminated using well-known quality indicators. However, there is still the possibility of obtaining some outliers or spikes. This could happen at a node or any other position. The point P(xi+1, yi+1) in Fig. 10, is identiﬁed as an outlier if Dd<45° (i.e. if there is a sudden change in two consecutive GPS/DR line bearings). This outlier may cause matching errors especially if Dd is bigger and closer to arc DF. To avoid such matching errors, an outlier is ﬁnalized only after the next points have been observed and analysed. A detailed description on ﬁltering outliers can be found in Greenfeld (2002).

prehensive ﬁeld test was carried out in Central London in January 2002. A test vehicle was equipped with a navigation platform consisting of a 12-channel single frequency GPS receiver, a low-cost MEMS rate gyroscope and the interfaces required to connect to the vehicle speed sensor (odometer) and back-up indicator. The route in London was chosen carefully to have a good mix of important spatial urban characteristics including open spaces, urban canyons, tall buildings, tunnels, bridges and potential sources of electromagnetic interference. Data capture to sample the temporal variation in the geometry of the GPS satellite constellation were also considered. The positioning results from the output of the integrated

Algorithm step by step The detailed description of the map-matching algorithm can be found in Fig. 11. The algorithm uses the following steps to assign the vehicle on the correct link and to determine its position on that link.

(GPS/DR) system based on the EKF algorithm for a sample of the experimental route in Central London are shown in Figs. 12 and 13. Each of the dots represents the vehicle position. Note that, in most cases, the points deviated from the actual route taken due to positioning errors in the integrated system (although 100% of all

1. Find the closest node from the ﬁrst GPS/DR point (i.e. position ﬁxes were within 50 m of the road centre-line).

initial point).

The spatial network data used as reference had a reso-

2. Check whether the next point is an outlier. If not, then lution of 1.25 m. The arrow symbols in the ﬁgures show

select all the road segments that pass through the

the path followed by the vehicle on the network. As

closest node, otherwise take this point as the initial already mentioned, the purpose of the MM algorithm

point and go to step 1.

developed here is twofold; ﬁrst, to match each of the

3. Using the weighting formula [Eq. (6)], choose the cor- vehicle positions to a link (road segment) and, second, to

rect link. These two points (i.e. initial point and its next determine the vehicle location on that link.

point) should be matched to this link.

Figures 14 and 15 illustrate the results of the MM algo-

4. Determine the vehicle position on the correct link for rithm for the sample routes shown in Figs. 12 and 13,

each of the two points using Eq. (11).

respectively. Equation (6) was used to select the actual link

5. Check whether the next point is an outlier. If yes, then among a number of candidate links. After some ground-

go to step-1 and take it as the initial point. If not, check work application of the algorithm with real ﬁeld data, the

whether Db¢<45° and a £ 90°. If yes, map this point on values of the weighting factors a and b are taken as 5 and 2,

the same link and determine its position [by Eq. (11)] respectively, whereas the value of the weighting parameter

and continue this process until the above conditions are AP is taken as 10. However, any positive value for AP (with

true, otherwise go to step 1.

a=5 and b=2) was found to provide very good results. The

6. Repeat step 5 until all points have been matched.

corresponding values of the weighting parameters AH and

ARP are 50 and 20, respectively [see Eq. (7)].

Figure 14 shows what appears to be an aberration in the

algorithm in the upper left corner. This was actually a test

of the MM algorithm where an intentional U-turn was

made. It was found that the algorithm was able to correctly

identify the link in this test as well.

In these two cases, almost 100% correct link identiﬁcation

was achieved. However, it was found that the weighting

scheme to identify actual links is sensitive to the weighting

factors (a and b). More research, therefore, is needed to

obtain optimal values for the weighting parameters.

Equation (11) was then used to determine the actual

position of the vehicle on the selected link. A weighted

average (optimal estimation) of the two-state determina-

tion of the vehicle position was used, resulting in robust

physical location of the vehicle. Careful observation of the

Fig. 10

results found that there are sudden losses of data just after

Outlier treatment

some intersections in Fig. 15. The sensitivity of the

164 GPS Solutions (2003) 7:157–167

Original article

Fig. 11 Flow chart for map matching algorithm
weighting factors, as discussed above, and the very short length of the link (e.g. some are below 20 m) might be responsible for such clusterings of vehicle locations. Research is on going to look at this issue particularly with

smaller links in urban networks. Future work will also test the algorithm against the vehicle position as determined from a higher accuracy GPS observable, the carrier phase. The errors associated with map resolution, assumption of linearity of the link, speed of the vehicle and positioning sensors were all taken into account to estimate vehicle position on the link.

GPS Solutions (2003) 7:157–167 165

Original article

Fig. 12 The position measurement from output of GPS/DR EKF algorithm

external sensors to determine the actual location on a link. The method has been found to be very efﬁcient, particularly in difﬁcult operational environments such as junctions and intersections. Because the errors associated with the bearing (azimuth) of the link (due to map resolution and the assumption that ’each arc is piece-wise linear’) and positioning sensors are taken into account, the estimation of the vehicle position on the selected link is found to be quite robust.

References

Fig. 13 The position measurement from output of GPS/DR EKF algorithm
Conclusions
An integrated system employing GPS and low cost dead reckoning devices, using an extended Kalman ﬁlter, has been developed. The resulting vehicle position accuracy is such that map matching is required to accurately locate a vehicle on a given road segment (or link). In this paper, an algorithm based on the topological analysis of the road network, utilizing heading and speed information from the EKF algorithm, has been developed. The approach adopts a weighted average of two state determinations of the vehicle position based on topological information and

Bernstein D, Kornhauser A (1996) An introduction to map matching for personal navigation assistants. New Jersey TIDE Center (http://www.njtude.org/reports/mapmatchintro.pdf)
Greenfeld JS (2002) Matching GPS observations to locations on a digital map. Proceedings of the 81th Annual Meeting of the Transportation Research Board, Washington, DC
Jo T, Haseyamai M, Kitajima H (1996) A map matching method with the innovation of the Kalman ﬁltering. IEICE Trans Fund Electron Comm Computer Sci E79-A:1853–1855
Kim JS, Lee JH, Kang TH, Lee WY, Kim YG (1996) Node based map matching algorithm for car navigation system. Proceedings of the 29th ISATA Symposium, Florence, vol 10, pp 121–126
Krakiwsky EJ, Harris CB, Wong RVC (1988) A Kalman ﬁlter for integrating dead reckoning, map matching and GPS positioning. Proceedings of IEEE Position Location and Navigation Symposium, pp 39–46
Ochieng WY, Sauer K (2001) Urban road transport navigation requirements: performance of the global positioning system after selective availability. Transport Res C 10:171–187
Scott CA, Drane CR (1994) Increased accuracy of motor vehicle position estimation by utilizing map data, vehicle dynamics and other information sources. Proceedings of the Vehicle Navigation and Information Systems Conferences, pp 585–590
Tanaka J, Hirano K, Itoh T, Nobuta H, Tsunoda S (1990) Navigation system with map-matching method. Proceeding of the SAE International Congress and Exposition, pp 40–50

166 GPS Solutions (2003) 7:157–167

Original article

Fig. 14 Map matching results corresponding to Fig. 12

Fig. 15 Map matching results corresponding to Fig. 13

Taylor G, Blewitt G, Steup D, Corbett S, Car A (2001) Road reduction ﬁltering for GPS-GIS navigation. Proceedings of 3rd AGILE Conference on Geographic Information Science, Helsinki, pp 114–120
White CE, Bernstein D, Kornhauser AL (2000) Some map matching algorithms for personal navigation assistants. Transport Res C 8:91–108

Zhao L, Ochieng WY, Quddus MA, Noland RB (2002) An extended Kalman ﬁlter algorithm for Integrating GPS and lowcost dead reckoning system data for vehicle performance and emissions monitoring. J Navig 56:257–275

GPS Solutions (2003) 7:157–167 167

