530

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 15, NO. 2, APRIL 2014

Modular Design of Urban Trafﬁc-Light Control Systems Based on Synchronized Timed Petri Nets
Yi-Sheng Huang, Senior Member, IEEE, Yi-Shun Weng, and MengChu Zhou, Fellow, IEEE

Abstract—Timed Petri nets (TPNs) have been utilized as visual formalism for the modeling of complex discrete-event dynamic systems. They illuminate the features in describing the properties of causality and concurrency. Moreover, it is well known that a synchronized TPN (STPN) allows us to present all of the concurrent states in a complex TPN. In this paper, we propose a new methodology to design and analyze an urban trafﬁc network control system by using the STPN. In addition, the applications of the STPN to eight-phase, six-phase, and two-phase trafﬁc-light control systems are modularized. The advantage of the proposed approach is the clear presentation of the behaviors of trafﬁc lights in terms of the conditions and events that cause phase alternations. Moreover, the size of the urban trafﬁc network control system can be easily extended with our proposed modular technique. An analysis of the control models is performed via a reachability graph method to demonstrate how the models enforce the transitions of the trafﬁc lights.
Index Terms—Modular, Petri net (PN), trafﬁc control systems, trafﬁc network.
I. INTRODUCTION
W ITH the growing number of vehicles, trafﬁc congestion and transportation delay in urban arterial roads are increasing worldwide; hence, it is imperative to improve the safety and efﬁciency of transportation. Subsequently, several research teams focus their attention on the area of intelligent transport systems [14], [20]. In addition, they apply advanced communication, information, and electronics technology to solve transportation problems such as trafﬁc congestion, and to improve transportation safety and efﬁciency [5]. Trafﬁc light control systems regulate, warn, and guide transportation for the purpose of improving the safety and efﬁciency of pedestrians and vehicles. Much work has been done to develop various strategies [19], which are classiﬁed into two categories: ﬁxed-
Manuscript received March 28, 2013; revised July 3, 2013; accepted September 2, 2013. Date of publication November 12, 2013; date of current version March 28, 2014. This work was supported in part by the National Science Council of Taiwan under Grant NSC 102-2221-E-197-022-MY2 and National Natural Science Foundation of China, under Grant 61374148. The Associate Editor for this paper was Z. Li.
Y.-S. Huang is with the Department of Electrical Engineering, National Ilan University, Ilan 260, Taiwan (e-mail: yshuang@niu.edu.tw).
Y.-S. Weng is with the Department of Electronic Engineering, Army Academy Republic of China, Zhongli 32093, Taiwan (e-mail: wys@aaroc. edu.com).
M. Zhou is with the Key Laboratory of Embedded System and Service Computing, Ministry of Education, Tongji University, Shanghai 201804, China and also with the Department of Electrical and Computer Engineering, Newark College of Engineering, New Jersey Institute of Technology, Newark, NJ 07102-1982 USA (e-mail: zhou@njit.edu).
Color versions of one or more of the ﬁgures in this paper are available online at http://ieeexplore.ieee.org.
Digital Object Identiﬁer 10.1109/TITS.2013.2283034

time and trafﬁc-response. Nowadays, most industrialized countries are using the former for urban trafﬁc control. In addition, the topics of trafﬁc signal control can be separated into two classes [15]: determining which signal indication sequence optimizes the overall system performance and ascertaining how to implement the signal control logic.
However, several fundamental problems remain open, among which are the modeling methodologies. This paper concentrates on the second class, with a predetermined trafﬁc signal timing plan. In other words, trafﬁc signals are used to manage conﬂicting requirements for the use of road space, which are often at road junctions, by allocating the right-of-way to different sets of mutually compatible trafﬁc movements during distinct time intervals. There is only one type of phase transition discussed in an urban net [15]. The variation of a vehicle’s direction at a four-way intersection has two phases [22], four phases [24], or eight phases [15]. Febbraro et al. [6] proposed an urban trafﬁc controller including four-phase and three-phase transitions. However, they failed to address the complicated movement direction of the trafﬁc ﬂow at intersections. For example, a trafﬁc light not only has red, yellow, and green lights, but it also has a left-turn arrow on green, a right-turn arrow on green, and a straight arrow on green. As a result, it is possible to have both a right-turn arrow on green and a red signal turned on in an eastbound trafﬁc light, and a green signal turned on in the northbound trafﬁc light. In some countries, there may be additional lights, i.e., usually a green arrow to authorize turns (called a lead light in the U.S. because it usually leads to the main green light). Trafﬁc light control systems regulate, warn, and guide transportation for the purpose of improving the safety and efﬁciency of pedestrians and vehicles. Obviously, an unsuitable modeling tool could make it difﬁcult to evaluate the performance indexes of trafﬁc control systems, such as the number of vehicles that are stopped by red signals and the subsequent time loss due to them.
Petri nets (PNs) have been proven to be a powerful modeling tool for various kinds of discrete-event systems [7], [17], and their formalism provides a clear means for presenting simulation and control logic. Hence, they are suitably used in trafﬁc control systems. However, conventional PNs cannot determine the exact time of transition ﬁring. To enhance their capability, timed PNs (TPNs) are proposed. Recently, they have been successfully used to model railway level crossing [3], [9], [18] and urban trafﬁc network control systems [10]–[12], [23]. Moreover, timed colored PNs (TCPNs) are utilized as visual formalism for the modeling of complex systems. Our prior work used a TCPN to model an intelligent urban trafﬁc-light control system [8], [12]. In summary, there are several modeling

1524-9050 © 2013 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission. See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

HUANG et al.: MODULAR DESIGN OF URBAN TRAFFIC-LIGHT CONTROL SYSTEMS BASED ON STPNs

531

tools applied in the trafﬁc-light control ﬁeld. However, they hardly present the alternation of the trafﬁc-light phases in a clear manner. Therefore, this paper focuses on the use of a synchronized TPN (STPN) to model an urban trafﬁc-light control system that may have eight-phase, six-phase, and/or twophase trafﬁc lights. The advantage of the new approach is that the behavior of the trafﬁc lights in terms of the conditions and events that cause phase alternations can be presented clearly. Reachability graphs are adopted to analyze the proposed STPN models. More signiﬁcantly, we propose a new method of modular design. It subdivides a system into smaller parts that can be independently created and then used in different systems to drive multiple functionalities. Its advantages include the ease of change to achieve technology transparency and the use of industry standards to design key interfaces.
Earlier contributions focused on ﬁnding optimal control strategies [2], [15]. A variety of mathematical programming methodologies [2], [4] and artiﬁcial intelligence techniques [1], [16] to model the trafﬁc ﬂow and the control logic are proposed. Nevertheless, they need to translate their control logic to computer codes. Unfortunately, previous work did not address the issue of how to implement signal control logic [15]. The proposed STPN can overcome this drawback.
The rest of this paper is organized as follows. Section II gives a brief description of STPN. Section III provides the description of an urban trafﬁc network system. Section IV presents our STPN-based modular design technique. Section V depicts how to model and analyze it with STPN. Conclusions are given in Section VI.
II. BASICS OF STPNS
A classical PN is a particular kind of bipartite directed graphs populated by three types of objects [25]–[27]. They are the places, transitions, and directed arcs that connect places to transitions and transitions to places. Because the classical PN is not capable of handling quantitative time, a timing concept is introduced to its transitions, thereby leading to TPNs [25]. A transition ﬁres by removing tokens from its input places, and after a certain period (time delay), it deposits the tokens to its output places. In a synchronized PN, an event is associated with each transition, and the ﬁring of this transition will occur, i.e., if the transition is enabled when the associated event occurs [21]. Therefore, synchronized PNs are well suited for the modeling of the systems that are synchronized with external events at a hierarchical level. In this paper, we combine the TPN and synchronized PN models, resulting in STPN. STPN allows two types of transitions: the immediate transition, which is represented by a thin bar and is also called a slave transition, whose ﬁring takes no time, and the deterministic transition, which is represented by an empty bar and is also called a master transition, whose ﬁring takes a constant delay time. In a master module, an event is associated with a master transition. Therefore, once an external event happens, its corresponding slave transition ﬁres in the slave modules.
Formally, STPN can be deﬁned as
STPN = (P, T, I, O, M0, τ, E, H)

Fig. 1. STPN with an external event and an inhibitor arc.

where

P = {p1, p2, . . . , pm} T = {t1, t2, . . . , tn}

a ﬁnite set of places;
a ﬁnite set of transitions, which are partitioned into two disjoint sets T 0 and T + that represent the immediate

and deterministic transitions, respec-

tively. P ∪ T = φ, and P ∩ T = φ;

I :P ×T →N

input function that deﬁnes the directed

arcs from places to transitions, where

N is a set of nonnegative integers;

O:P ×T →N

output function that deﬁnes the di-

rected arcs from transitions to places;

M0 : P → N τ : T → R+

initial marking; ﬁring time function, where R+ is the

set of nonnegative real numbers;

E = {E1, E2, . . . , Ei} set of events associated with the transitions;

H ⊆P ×T

set of inhibitor arcs from p to t.

Enabling Rule: A transition t is enabled at marking M if

∀ p ∈ P , M (p) ≥ I(p, t) and M (p) = 0 if (p, t) ∈ H.

Firing Rule: First, an enabled transition t may or may not

ﬁre depending on the additional interpretation. Second, ﬁring

t removes I(p, t) tokens from each input place p and deposits

O(p, t) tokens to each output place p of t. Finally, a transition

in the slave can ﬁre if and only if the corresponding external

event occurs, and each of its preset contains sufﬁcient tokens.

The liveness of a PN means that, for each marking M ∈

R(M0) that is reachable from M0, it is ﬁnally possible to ﬁre t ∀t ∈ T through some ﬁring sequence. Note that R(M0) is the set of all reachable markings from M0. A marking M is reachable from M0 if there is a ﬁreable transition sequence that converts M0 into M . A PN is said to be reversible if, for each marking M ∈ R(M0), M0 is reachable from M . Thus, in a reversible net, it is always possible to go back to the initial

marking (state) M0. An STPN with an inhibitor arc is shown in Fig. 1. In the

presence of an inhibitor arc, a transition is regarded as enabled

if input place p1, which is connected to the transition by a normal arc (an arc that is terminated with an arrow), contains

at least the number of tokens equal to the weight of the arc and

if no tokens are present in input place p2, which is connected to the transition by the inhibitor arc. Moreover, transition t/E1 ﬁres by removing a token from p1, and it deposits the token to p3 after a certain period τ . Event E1 is associated with t1 if t1 ﬁres and E1 occurs simultaneously. In the slave side, t2 is an immediate transition and is receptive to the same external event

E1. When E1 occurs, t2 ﬁres by moving a token from p4 to p5 immediately.

532

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 15, NO. 2, APRIL 2014

Fig. 2. Trafﬁc network with nine intersections.

Fig. 4. Eight-phase transition and the phase alternating order.
6) Select one of the most complex modules (i.e., the eightphase transition) as the master controller of the trafﬁclight control system.
7) Construct the trafﬁc-light control system STPN model. 8) Analyze the control system STPN model. 9) Implement the trafﬁc-light control system.

A. Phase Transition Models

Fig. 3. (a) Five-light signal. (b) Three-light signal.
III. SYSTEM DESCRIPTION AND METHODOLOGY DEVELOPMENT
The intersections are divided into three categories: main road, minor road, and tertiary road, which are called A, B, and C, respectively. In Fig. 2, only one intersection belongs to the main road intersection, four (B1–B4) belong to the minor one, and four (C1–C4) belong to the tertiary one. Here, two types of trafﬁc lights are employed. The ﬁrst type consists of ﬁve signal lights as shown in Fig. 3(a), i.e., a left-turn arrow on green (GL), a right-turn arrow on green (GR), a straight arrow on green (GS), a yellow light signal (Y ), and a red light signal (R). There is either an eight-phase or six-phase transition available in this kind of trafﬁc lights. The second type, as shown in Fig. 3(b), consists of three signal lights, i.e., G, Y , and R. Only two-phase transitions are needed. Considering the trafﬁc ﬂow, we assume that a trafﬁc light has an eight-phase transition at A, a six-phase one at B, and a two-phase one at C.
This work proposes the following design procedure based on the idea of a modular design.
• Inputs: A trafﬁc network with trafﬁc-light requirements. • Outputs: The modular design and implementation of a
trafﬁc-light control system.
1) Calculate how many trafﬁc lights are needed in the trafﬁc network system.
2) Identify the phase transition (i.e., two- phase, six-phase, and eight-phase transitions) for each trafﬁc light.
3) Deﬁne the phase transition models for each phase transition.
4) Construct the STPN model for each phase transition. 5) Design the master–slave module for each phase
transition.

Fig. 2 shows an urban trafﬁc network with nine intersections that is taken from [13]. Consider the trafﬁc area constructed in Fig. 2, which consists of intersections A, B, and C. The ﬂows at A are ruled by an eight-phase trafﬁc light. The rules are shown in Fig. 4(a).
1) Phase A0. A trafﬁc-light control system can be started if its trafﬁc signal lights are all in a red state.
2) Phase A1. GL signals turn on in the northbound and the southbound trafﬁc lights. The R signals are displayed in the east–westward trafﬁc directions.
3) Phase A2. The northbound trafﬁc-light signals GL, GR, and GS are on. The eastbound trafﬁc lights indicate the GR signal. Notice that this phase is ignored in [6] and [24].
4) Phase A3. Both the northbound and southbound trafﬁclight signals GS and GR are on.
5) Phase A4. The southbound trafﬁc-light signals GL, GR, and GS are on. At the same time, the GR signal is displayed in the westward trafﬁc direction.
Notice that phases (A5–A8) are similar to phases (A1–A4), respectively (but in a reverse order). We assume that the phase transition time is 45 s for each phase transition. For convenience, we deﬁne “set cycle time” as the period for a set of trafﬁc lights to operate in one cycle. Since there are nine sets of trafﬁc lights in the example network, we further deﬁne “system cycle time” as the period for all sets to operate in one cycle. As a result, it needs 360 s for a set cycle time. It hints that phase A1 should be changed to phase A2 after 45 s.
Considering the second category of intersections, the vehicle ﬂows at intersection B are required to be ruled by a six-phase trafﬁc light. Fig. 5 shows the deﬁnitions of the phases and their alternating order.
1) Phase B0. A trafﬁc-light control system can be started if its trafﬁc signal lights are all in the red state.
2) Phase B1. GL, GS, and GL signals turn on in the northbound trafﬁc light. The R signals are displayed in the other trafﬁc directions.

HUANG et al.: MODULAR DESIGN OF URBAN TRAFFIC-LIGHT CONTROL SYSTEMS BASED ON STPNs

533

Fig. 5. Models of the six-phase transition.

Fig. 6. Models of the two-phase transition.

3) Phase B2. Both the northbound and southbound trafﬁc lights are showing GS and GR signals.
4) Phase B3. GL, GS, and GL signals turn on in the southbound trafﬁc lights. The R signals are displayed in the other trafﬁc directions.
Finally, the two-phase transitions of the trafﬁc lights that are located at intersections C are presented in Fig. 6.
1) Phase C0. A trafﬁc-light control system can be started if its trafﬁc signal lights are all in the red state.
2) Phase C1. Both the northbound and southbound trafﬁc lights show G signals. This phase transition time is 90 s.
3) Phase C2. Both the westbound and eastbound trafﬁc lights show G signals. This phase transition time is also 90 s.
The three phase transition models illustrate the application of the urban trafﬁc network control criteria.

Fig. 7. (a) Two-phase trafﬁc-light control system. (b) STPN model.
TABLE I ATTRIBUTION OF TRANSITIONS IN FIG. 7

B. STPN Model of an Example Trafﬁc-Light Control System

A road signal for directing vehicular trafﬁc using colored lights typically uses red for stop, green for go, and yellow for proceeding with caution. A trafﬁc light with the three colored lights is called a two-phase trafﬁc light. A two-phase system model is depicted in Fig. 7(a). Considering the safety of vehicles, some important rules are needed.
1) A trafﬁc-light control system can be started if its trafﬁc signal lights are all in a red light state.
2) A 2-s overlap is needed while the phase is changing from northward/southward to eastward/westward.
3) Only one green light is allowed on the two ways simultaneously.
4) A trafﬁc light changes in the order of green, yellow, and red.
According to the speciﬁcation of the trafﬁc-light system, the STPN model of Fig. 7(a) can be constructed in Fig. 7(b). It describes a two-phase trafﬁc-light control system with three

trafﬁc signal lights, i.e., green (G), yellow (Y ), and red (R). More detailed information of Fig. 7(b) is listed in Table I.
Regularly, there are four sets of trafﬁc lights in a system, i.e., the northbound, southbound, eastbound, and westbound trafﬁc lights, which are placed at each intersection. Vehicles heading northward/southward and heading eastward/westward are denoted by N/S and E/W , respectively. The system model is divided into two parts, i.e., the master and slave models. A master model consists of places p4/p7, p5/p8, and p6/p9, and their associated arcs and transitions. A slave model consists of places p1/p10, p2/p11, and p3/p12, and their associated arcs and transitions. For convenience, p4/p7, p5/p8, and p6/p9 are given physical names, i.e., N G/W G, N Y /W Y , and N R/W R, respectively. They represent three northward/westward trafﬁc lights G, Y , and R, respectively. Similarly, p1/p10, p2/p11, and p3/p12 are given names, i.e., SG/EG, SY /EY , and SR/ER, respectively. They represent three southward/eastward trafﬁc

534

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 15, NO. 2, APRIL 2014

Fig. 8. (a) Duration diagram. (b) Reachability graph.

lights G, Y , and R, respectively. The operations of the slave model are controlled by the master model via external events. For example, when t1/E1 ﬁres (in the master model), then t7 can be ﬁred in the slave model.
Fig. 7(b) shows the initial state of the system model. To ﬁt a physical system, it is natural to consider an upper limit of the number of tokens that each place can hold. This leads to a ﬁnite capacity net. Here, we apply the strict transition rule to our proposed models. For instance, Fig. 7(b) is a ﬁnite capacity net (N, M0), and each place p has an associated capacity K(p) = 1 [17]. We know that the initial state of trafﬁc signal lights is in the R state. After 2 s (i.e., ﬁring t1/E1), a token is moved to p4. In the meantime, t7 immediately ﬁres as triggered by E1 such that a token is moved to p1 immediately. At this moment, N G turns on such that the way of vehicles can pass through the intersection. Next, N G should be off after the duration in t2/E2. Notice that event E2 is associated with t2. Therefore, E2 will concurrently occur with the ﬁring of t2. It states that t8 ﬁres when E2 occurs. It implies that SG has been on for 85 s. Then, N Y is on for 3 s because the duration in t3/E3 is 3 s. E3 is associated with t3. Therefore, E3 will occur concurrently. It states that t9 ﬁres when E3 occurs. Then, the token is moved to place p6/p3 again. After 2 s (i.e., ﬁring t4/E4), a token in p9/p12 is moved to p7/p10. At this moment, W G/EG turns on. It means that N W/EG has been on for 85 s. Then, W Y is on for 3 s because the duration in t6/E6 is 3 s. Finally, the token is moved to p9/p12 again. According to the model, one can well describe the periodic property of the trafﬁc-light control system. Fig. 8(a) shows its control process. It helps us understand the behavior of the system model.
A reachability graph can be generated to analyze the model. No conﬂict can be found, as shown in Fig. 8(b), as veriﬁed by its reachability graph. The reachability set R(M0) = {M0, M1, M2, M3, M4, M5} contains all the markings that are reachable from M0. Here, M0 = (0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1), M1 = (1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0), M2 = (0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0), M3 = (0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0), M4 = (0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0), and M5 = (0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0). Since this graph is a ﬁnite circuit containing all transitions, one can infer that the STPN model in Fig. 7(b) is live and reversible.

Fig. 9. All possible combinations for the master–slave trafﬁc light controller.
IV. STPN-BASED MODULAR DESIGN TECHNIQUE FOR MASTER–SLAVE TRAFFIC SIGNAL CONTROLLER
In order to be able to integrate the different phases of trafﬁc lights in different roadway intersections, all trafﬁc lights (twophase, six-phase, and eight-phase trafﬁc lights) can independently operate and can be associated with each other. Fig. 9 shows all possible combinations for the master–slave trafﬁclight controller. For example, at a trafﬁc network with three different intersections in Fig. 9(a), the most complex trafﬁc light (i.e., the eight-phase trafﬁc light) will be the master controller, and the others will be the slaves. If an urban trafﬁc network only has the same phase trafﬁc-light controller, all must serve as the master controller as shown in Fig. 9(c). In the proposed method, we need one model as the master that is able to trigger the slave models. Here, we leave out the details in Fig. 9(b). In addition, three capabilities offered by STPN are listed as follows.
1) Master–slave conﬁguration. It is well known that STPN has external events that allow one to model the relation of the concurrence transitions, whatever the related transitions are in different levels. Therefore, we propose that the master–slave conﬁguration is used to model the urban trafﬁc-light system. Its advantage is that all external events (i.e., the transitions of the master) are able to trigger the corresponding transitions of the slaves.
2) Timing speciﬁcations. STPN is capable of handling quantitative time to model the timing speciﬁcation in subnets. It is worth noting that such timing constraints can appear in subnets at any levels.
3) Synchronization descriptions. The ability of STPN to describe synchronization is crucial. In STPN, an event is associated with speciﬁc transitions. Once an event occurs, its corresponding transitions will ﬁre. In Fig. 1, one can recall that t immediately ﬁres when its external event E occurs. This representation is appropriate to model the occurrence transitions that depend on external events. Fig. 9 shows the relation of the trafﬁc-light control system models with external events.

HUANG et al.: MODULAR DESIGN OF URBAN TRAFFIC-LIGHT CONTROL SYSTEMS BASED ON STPNs

535

A. Master–Slave Module of Eight-Phase Trafﬁc-Light STPN Model

All external events (i.e., Ei) are designed to connect to their corresponding pins. Hence, a master–slave module of the eight-phase trafﬁc-light STPN model that is designed in an IC style is depicted in Fig. 10. Here, eight external events (i.e., E1–E8) are laid out in Fig. 10. This type of controllers can be only used in the main street intersection (i.e., the eightphase trafﬁc lights). We name it as Class A. It is the key to the urban trafﬁc-light control system. There are four parts of trafﬁc lights facing the four directions of an intersection. For example, the trafﬁc light positioned at the southbound of intersection A is called the northbound trafﬁc light, which is denoted as N _A. The others are S_A, W _A, and E_A for the southbound, westbound, and eastbound trafﬁc lights, respectively. Note that each of them has ﬁve light signals.
For convenience, only the places that are modeling the trafﬁc-light signals are included in the elements of a marking. In this master–slave model, the marking (AN R, ASR, AW R, AER) is called initial state Ma0, which means that the four-part trafﬁc lights are signaling R. The initial state will hold for 2 s, i.e., four parts of the trafﬁc light signals stay red for 2 s simultaneously. Once t1/E1 reaches 2 s, the initial marking conﬁguration changing to (AN GL ∧ AN R, ASGL ∧ ASR, AW R, AER) is called Ma1. Notice that, at the same time, the transitions of two slave models t19/t33 in Figs. 12 and 14 immediately ﬁre when E1 occurs, such that marking Mb0/Mc0 changes to Mb1/Mc1. In the meantime, phases A1, B1, and C1 are derived. Once t2 has been ﬁring for 40 s, Ma1 changes to (AN GL ∧ AN R, ASY ∧ ASR, AW R, AER), which is called Ma2. During this period, the marking ASGL of S_A is changed to ASR via ASY , which is called transient marking Ma2. It means that the left-turn arrow is green for 40 s, and then, the yellow light signal turns on for 3 s. Here, such kind of markings is called transient markings. The other markings involving (AN Y, ASY, AW Y, AEY ) are also regarded as transient markings since one of the elements of the marking is a yellow light. When t3 ﬁres, the transient marking is changed to Ma3. Once t4/E2 ﬁres, Ma3 should immediately change to (AN GS ∧ AN GR, ASGS ∧ ASGR, AW R, AER), which is called marking Ma4. Once t5/E3 ﬁres, Ma4 should immediately change to (AN Y, ASGS ∧ ASGR, AW R, AER), which is called the transient marking Ma5. It is worth noticing that a 2 s overlap between the phase changes is needed for safety reasons. The transient marking Ma5 changes to (AN R, ASGS ∧ ASGR, AW R, AER), which is called transition marking Ma6. After 2 s (ﬁring t7), Ma6 should immediately change to (AN R, ASGL ∧ ASGS ∧ ASGR, AW R ∧ AW GR, AER), which is called marking Ma7. After 42 s (ﬁring t8/E4), Ma7 should change to the transient marking (AN R, ASY, AW R, AER), which is called Ma8. Finally, Ma8 should change to the initial marking Ma0. Phases A5–A8 proceed in the same way.
For clarity, a reachability graph of the STPN is depicted in Fig. 11. First, Ma0 should be changed to Ma1 when t1/E1 ﬁres. In the meantime, the new marking should be held for

Fig. 10. Master–slave module of the eight-phase trafﬁc-light STPN model.
Fig. 11. Reachability graph of the eight-phase master–slave STPN model.
40 s. Then, the marking is changed to a transient marking, i.e., Ma2. When t3 ﬁres, Ma2 is changed to Ma3. After 42 s (ﬁring t4/E2), a new event E2 is generated, and Ma3 changes to Ma4 and so forth. The reachability set R(Ma0) = {Ma0, Ma1, Ma2, Ma3, Ma4, Ma5, Ma6, Ma7, Ma8, Ma9, Ma10, Ma11, Ma12, Ma13, Ma14, Ma15, Ma16} contains all the markings that are reachable from Ma0. As a result, we can conclude that the eight-phase model is live and reversible.
B. Master–Slave Module of the Six-Phase Trafﬁc-Light STPN Model
One has seen that the eight-phase trafﬁc-light STPN model can be designed in an eight-pin IC style. Similarly, a master–slave model of the six-phase trafﬁc-light controller is constructed and is designed in a 16-pin IC style, as shown in Fig. 12. This type of controller can be only employed in the minor street intersection (six-phase trafﬁc lights). Here, we name it as Class B. In details, the master–slave model consists of four parts: N _B, S_B, W _B, and E_B. They correspond to the four ways of trafﬁc lights.
It is very important to notice that some external events are related to the eight-phase master–slave STPN model. We will use the external events as the path of the signal communication between the master and slave controllers. According to the preceding discussion, the six-phase trafﬁc-light STPN model should change from Mb0 to Mb1. Fig. 13 depicts the more detailed operations of the STPN model in a reachability graph.
It includes Mb0, six phase markings (Mb1−Mb2, Mb5, Mb7− Mb8, and Mb11), and six transient ones (Mb3−Mb4, Mb6, Mb9−Mb10, and Mb12). R(Mb0) = {Mb0, Mb1, Mb2, Mb3, Mb4, Mb5, Mb6, Mb7, Mb8, Mb9, Mb10, Mb11, Mb12} contains all the markings reachable from Mb0. The six-phase master– slave STPN model is live and reversible.

536

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 15, NO. 2, APRIL 2014

Fig. 12. Master–slave module of the six-phase trafﬁc-light STPN model.

Fig. 14. Master–slave module of the two-phase trafﬁc-light STPN model.

Fig. 15. Reachability graph of the two-phase master–slave STPN model.

Fig. 13. Reachability graph of the six-phase master–slave STPN model.
C. Master–Slave Module of the Two-Phase Trafﬁc-Light STPN Model
Next, we demonstrate the development the master–slave STPN model for two-phase trafﬁc lights by a compact way. This kind of trafﬁc lights is widely used at intersections of minor importance. The model of the two-phase trafﬁc-light system is shown in Fig. 14. This kind of controllers can be only used in tertiary street intersections (i.e., the two-phase trafﬁc lights). Here, we name it as Class C, as shown in Fig. 14. Likewise, a reachability graph of the master–slave STPN model is obtained, as shown in Fig. 15. It includes Mc0, two phase markings (i.e., Mc1 and Mc3), and two transient ones (i.e., Mc2 and Mc4). R(Mc0) = {Mc0, Mc1, Mc2, Mc3, Mc4}. As a result, we can infer that the two-phase model is live and reversible.
It is worth noting that the two-phase trafﬁc light needs 180 s for a set cycle time. On the other hand, the system cycle of the urban trafﬁc network system needs 360 s. Hence, the external event (E2/E4)/(E6/E8) can bring the transient marking Mc2/Mc4 to the initial marking Mc0, respectively.
V. MODELING AND ANALYSIS OF URBAN TRAFFIC NETWORK CONTROLLERS
In this section, we attempt to control an urban trafﬁc network that consists of nine intersections. As aforementioned, the nine intersections are divided into three groups, i.e., main street, minor street, and tertiary street. To model the trafﬁc network controllers of the nine intersections, one only needs one master eight-phase one, four slave six-phase one, and four two-phase ones. With a conventional methods, it is challenging to design a mechanism for coordinating the ﬁring sequences of the trafﬁc

lights as desired. However, it now becomes an easy job due to the developed modules.
A. Urban Trafﬁc-Light Controller Designed by STPN Modular Model
Our proposed trafﬁc network consists of three different types of intersections. We can construct the conﬁguration of the master–slave modular models in Fig. 16, which allows one to have an overview of the entire urban trafﬁc network system. The external events are connected according to their corresponding pins. In this urban trafﬁc control system, one Class A, four Class B, and four Class C controllers are used for the main, minor, and tertiary street intersections, respectively. Here, Class A is the only master controller, whereas others are slaves. In detail, master A is decomposed into four parts, i.e., N _A, S_A, W _A, and E_A, as shown in Fig. 10. Likewise, slave models B1−4 and C1−4 are decomposed into four parallel behavioral components, respectively. The more detailed information of the slave models is shown in Figs. 11 and 12. It is worth noting that, when an external event occurs, it immediately causes the corresponding transition to ﬁre. Here, we deﬁne the plant of the control system as the part of the system that is to be controlled. Trafﬁc light statuses are changed by ﬁring actions/triggering events. As the control objective, we want the system output (i.e., trafﬁc-light signals) to follow the current phase state. In this way, each of the operation sequences can be regarded as a concatenation of operations that are performed at the trafﬁc-light network system. The detailed information for the external events in Fig. 16 is given in Table II.
Fig. 17 helps one understand the operation of transition ﬁring and event occurrences. We use three states (AN R, BiN R, and CiN R) to represent the part of the initial conﬁguration. The trafﬁc-light system can stay at the initial state

HUANG et al.: MODULAR DESIGN OF URBAN TRAFFIC-LIGHT CONTROL SYSTEMS BASED ON STPNs

537

Fig. 18. Phase transition of the trafﬁc network control system. (a) P hase_1. (b) P hase_2.

Fig. 16. Urban trafﬁc network control system STPN model.
TABLE II DETAILED INFORMATION OF THE EXTERNAL EVENTS IN FIG. 16

shown in Fig. 18(a). After 43 s, the state conﬁguration (AN GL, AN R, BiN GL ∧ BiN GS ∧ BiN GR, CiN G) can be then changed to (AN GL ∧ AN GS ∧ AN GR, BiN GS ∧ BiN GR, CiN G). At this moment, the nine pictures in Fig. 18(b) reﬂect the phase transitions of the trafﬁc lights at
nine intersections. Additionally, when t4/E2 has ﬁred for 42 s, E2 occurs such that t34 ﬁres immediately. Because both state transitions are changed at the same time, the ﬁnal state conﬁguration becomes (AN GS ∧ AN GR, BiN GS ∧ BiN GR, CiN Y ) after t4/E2 ﬁres.

B. Analysis of Urban Trafﬁc-Light Controller

Fig. 17. Parts of the phase transitions of the controller.
(i.e., all the R signals are on). When t1 has ﬁred for 2 s, event E1 is triggered such that the triggered transitions t19 and t33 ﬁre immediately. Hence, event t1/E1 causes the initial state conﬁguration (AN R, BiN R, CiW R) to change to (AN GL, AN R, BiN GL ∧ BiN GS ∧ BiN GR, CiN G). In the meantime, all the statuses of the trafﬁc network are

Here, we attempt to analyze the urban trafﬁc network. Based on the foregoing discussion, we know that the master–slave controller of the urban trafﬁc system are all concurrent states. However, it is difﬁcult to present all concurrent states together. Therefore, we try to construct the phase status conﬁgurations of the system model that contains the status of trafﬁc-light signal Y called the transient state to present all the concurrent states. Here, an occurrence state shown in Table III is obtained from the urban trafﬁc system state conﬁguration. The occurrence state generates 17 phases in a system cycle. Each phase consists of nine elements, which are for the nine intersections of the urban trafﬁc network. For example, the initial state, i.e., phase state_0 = (A, B1, B2, B3, B4, C1, C2, C3, C4), means that the states of the trafﬁc lights at intersections A, B1–B4, and C1–C4 are in their initial states. It needs 360 s for the STPN to return to its initial state. It means that the urban trafﬁc-light system needs 360 s for the system to return to the initial state. More precisely, the two-phase, six-phase, and eight-phase transitions need 180, 360, and 360 s for each set cycle time, respectively. Therefore, the eight-phase transition needs 45 s for each phase transition time.
Considering the STPN model of the urban trafﬁc controller, the initial status conﬁguration is represented by phase state_0. It means that all the trafﬁc lights signal R due to the initial status. According to the foregoing discussion, the system should be changed from phase state_0 to phase state_1 when event E1 occurs. More precisely, phase state_1 should be changed to transient phase state_2 after 40 s. We have to emphasize that all transient states should be held active for

538

IEEE TRANSACTIONS ON INTELLIGENT TRANSPORTATION SYSTEMS, VOL. 15, NO. 2, APRIL 2014

TABLE III PHASE STATUS CONFIGURATIONS OF THE MODEL

3 s. Then, transient phase state_2 should be changed into phase state_3 after 3 s. The physical meaning is that the phase’s change of trafﬁc lights is needed via Y lights. For example, phase state_1_A = (AN R, AN GL, ASR, ASGL, AW R, AER) is changed to phase state_2_A = (AN R, AN GL, ASY, ASR, AW R, AER) and is then changed to phase state_3_A = (AN GL, AN GS, AN GR, ASR, AW R, AER, AEGR). As aforementioned, we can infer that the occurrence state forms a cycle. As a result, the reversibility and liveness properties can be derived from the method.

ﬁeld due to the increasing demands for more features on the trafﬁc-light systems. The proposed STPN models can be extended for some other applications [28]–[34]. For example, our system model can be easily modiﬁed for an advanced trafﬁc management system, which is able to interrupt the regularity of trafﬁc lights if one allows emergency cars as the priority. The proposed method needs to be extended to deal with cases where the switching time of trafﬁc lights is a function of the trafﬁc intensity.
REFERENCES

VI. CONCLUSION
Modular design is basically a method that is used to allow a speciﬁc type of unit to be broken down into smaller and easierto-manage units. It can be applied in numerous areas to create efﬁciency in other types of design, from manufacturing and construction to computer programming. In this paper, we have proposed the master–slave conﬁguration to model an urban trafﬁc-light system. The advantage of the proposed approach is the clear presentation of the system behavior and readiness for implementation. Moreover, the analysis of the control models is performed through a reachability graph method to demonstrate how the models enforce the transitions of the lights. Their liveness and reversibility are veriﬁed.
We believe that our research using STPN to model trafﬁclight systems will become more and more important in this

[1] G. Abu-Lebdeh and R. F. Benekohal, “Genetic algorithms for trafﬁc signal control and queue management of oversaturated two-way arterials,” J. Transp. Res. Board, vol. 1727, no. 1, pp. 61–67, Jan. 2000.
[2] D. C. Chin, J. C. Spall, and R. H. Smith, “Evaluation of system-wide trafﬁc signal control using stochastic optimization and neural networks,” in Proc. ACC, Jun. 1999, vol. 3, pp. 2188–2194.
[3] S. C. Dutilleul, F. Deffossez, and P. Bon, “Safety requirements and p-time Petri nets: a level crossing case study,” in Proc. IEEE Multiconf. Comput. Eng. Syst. Appl./IMACS, Beijing, China, Oct. 2006, pp. 1118–1123.
[4] V. Dinopoulou, C. Diakaki, and M. Papageorgiou, “Simulation investigations of the trafﬁc-responsive urban control strategy TUC,” in Proc. IEEE Intell. Transp. Syst., Oct. 2003, pp. 458–463.
[5] L. Figueiredo, I. Jesus, J. A. Tenreiro Machado, J. R. Ferreira, and J. L. Martins de Carvalho, “Towards the development of intelligent transportation systems,” in Proc. IEEE Intel. Trans. Syst., Aug. 2001, pp. 1206–1211.
[6] A. D. Febbraro, D. Giglio, and N. Sacco, “Urban Trafﬁc Control Structure Based on Hybrid Petri Nets,” IEEE Trans. Intell. Transp. Syst., vol. 5, no. 4, pp. 224–237, Dec. 2004.
[7] B. Hruz and M. C. Zhou, Modeling and Control of Discrete Event Dynamic Systems. London, U.K.: Springer-Verlag, 2007.

HUANG et al.: MODULAR DESIGN OF URBAN TRAFFIC-LIGHT CONTROL SYSTEMS BASED ON STPNs

539

[8] Y. S. Huang and T. H. Chung, “Modeling and analysis of urban trafﬁc lights control systems using timed CP-nets,” J. Inf. Sci. Eng., vol. 24, no. 3, pp. 875–890, 2008.
[9] Y. S. Huang, Y. S. Weng, and M. C. Zhou, “Critical scenarios and their identiﬁcation in parallel railroad level crossing trafﬁc control systems,” IEEE Trans. Intell. Transp. Syst., vol. 11, no. 4, pp. 968–977, Dec. 2010.
[10] Y. S. Huang and P. J. Su, “Modeling and analysis of trafﬁc light control systems,” IET Control Theory and Applications, vol. 3, no. 3, pp. 340– 350, Mar. 2009.
[11] Y. S. Huang and T. H. Chung, “Modeling and Analysis of Air Trafﬁc Control Systems Using Hierarchical Timed Coloured Petri Nets,” Trans. Inst. Meas. Control, vol. 3, no. 1, pp. 30–49, 2009.
[12] Y. S. Huang and T. H. Chung, “Modeling and Analysis Urban Trafﬁc Light Control Systems,” J. Chinese Inst. Eng., vol. 32, no. 1, pp. 85–95, 2009.
[13] Y. S. Huang, “Design of trafﬁc light control system using statecharts,” Comp. J., vol. 49, no. 6, pp. 634–649, Nov. 2006.
[14] J. H. Lee and L. K. Hyung, “Distributed and cooperative fuzzy controllers for trafﬁc intersection group,” IEEE Trans. Syst. Man. Cybern., vol. 29, no. 2, pp. 263–271, May 1999.
[15] G. F. List and M. Cetin, “Modeling trafﬁc signal control using Petri nets,” IEEE Trans. Intell. Transp. Syst., vol. 5, no. 3, pp. 177–187, Sep. 2004.
[16] Q. Lin, B. W. Kwan, and L. J. Tung, “Trafﬁc signal control using fuzzy logic,” in Proc. IEEE Syst., Man Cybern., Oct. 1997, pp. 1644–1649.
[17] D. Liu, Z. W. Li, and M. C. Zhou, “Hybrid Liveness-Enforcing Policy for Generalized Petri Net Models of Flexible Manufacturing Systems,” IEEE Trans. Syst., Man, Cybern., Syst., vol. 43, no. 1, pp. 85–97, Jan. 2013.
[18] M. Medjoudj and P. Yim, “Extraction of critical scenarios in a railway level crossing control system,” J. Comput., Commun. Control, vol. 2, no. 3, pp. 252–268, 2007.
[19] M. Papageorgiou, C. Diakaki, V. Dinopoulou, A. Kotsialos, and Y. Wang, “Review of road trafﬁc control strategies,” Proc. IEEE, vol. 91, no. 12, pp. 2043–2067, Dec. 2003.
[20] D. I. Robertson and R. D. Bretherton, “Optimizing networks of trafﬁc signals in real time-the SCOOT method,” IEEE Trans. Veh. Technol., vol. 40, no. 1, pp. 11–15, Feb. 1991.
[21] D. Rene and A. Hassane, Discrete, Continuous, and Hybrid Petri Nets. Berlin, Germany: Springer-Verlag, 2005.
[22] C. Tolba, P. Thomas, A. Eimoudni, and D. Lefebvre, “Performances evaluation of the trafﬁc control in a single crossroad by Petri nets,” in Proc. IEEE Emerging Technol. Factory Autom., Lisbon, Portugal, Sep. 2003, vol. 2, pp. 157–160.
[23] A. Tzes, K. Seongho, and W. R. McShane, “Application of Petri networks to transportation network modeling,” IEEE Trans. Veh. Technol., vol. 45, no. 2, pp. 391–400, May 1996.
[24] J. Wang, C. Jin, and Y. Deng, “Performance analysis of trafﬁc networks based on stochastic timed Petri net models,” in Proc. IEEE Eng. Complex Comput. Syst., Oct. 1999, pp. 77–85.
[25] M. C. Zhou and K. Venkatesh, Modeling, Simulation and Control of Flexible Manufacturing Systems: A Petri Net Approach. Singapore: World Scientiﬁc, 1998.
[26] M. C. Zhou and F. DiCesare, Petri Net Synthesis for Discrete Event Control of Manufacturing Systems. London, U.K.: Kluwer, 1993.
[27] R. Zurawski and M. C. Zhou, “Petri nets and industrial applications: A tutorial,” IEEE Trans. Ind. Electron., vol. 41, no. 6, pp. 567–583, Dec. 1994.
[28] L. Qi, M. C. Zhou, and Z. Ding, “Real-time trafﬁc camera-light control systems for intersections subject to accidents: A Petri net approach,” in Proc. IEEE Int. Conf. Syst., Man, Cybern., Manchester, U.K., Oct. 2013, pp. 1069–1074.
[29] N. Wu, F. Chu, S. Mammar, and M. C. Zhou, “Petri net modeling of cooperation behavior of driver and co-pilot in advanced driving assistance systems,” IEEE Trans. Intell. Transp. Syst., vol. 12, no. 4, pp. 977–989, Dec. 2011.
[30] Y. Du, C. Jiang, and M. C. Zhou, “Modeling and analysis of real-time cooperative systems using Petri nets,” IEEE Trans. Syst., Man, Cybern. A, Syst., Humans, vol. 37, no. 5, pp. 643–654, Sep. 2007.
[31] H. Hu, M. C. Zhou, and Z. Li, “Liveness enforcing supervision of video streaming systems using non-sequential Petri nets,” IEEE Trans. Multimedia, vol. 11, no. 8, pp. 1446–1456, Dec. 2009.
[32] J. S. Lee, M. C. Zhou, and P. L. Hsu, “An application of Petri nets to supervisory control for human-computer interactive systems,” IEEE Trans. Ind. Electron., vol. 52, no. 5, pp. 1220–1226, Oct. 2005.

[33] G. Liu, C. Jiang, M. Zhou, and P. Xiong, “Interactive Petri nets,” IEEE Trans. Syst., Man, Cybern. A, Syst., Humans, vol. 43, no. 2, pp. 291–302, Mar. 2013.
[34] N. Wu, F. Chu, C. Chu, and M. C. Zhou, “Petri net-based scheduling of single-arm cluster tools with reentrant atomic layer deposition processes,” IEEE Trans. Autom. Sci. Eng., vol. 8, no. 1, pp. 42–55, Jan. 2011.
Yi-Sheng Huang (SM’05) received the B.S. degree in automatic control engineering from Feng Chia University, Taichung, Taiwan, in 1989; the M.S. degree in electronic engineering from Chung Yuan Christian University, Zhongli, Taiwan, in 1991; and the Ph.D. degree in electrical engineering from National Taiwan University of Science and Technology, Taipei, Taiwan, in 2001.
He was a Professor with the Department of Electrical and Electronic Engineering, College of Science Engineering, Chung Cheng Institute of Technology, National Defense University, Daxi, Taiwan. He is currently a Full Professor with the Department of Electrical Engineering, National Ilan University, Ilan, Taiwan. His research interests include discrete-event systems, Petri nets, computer-integrated manufacturing, automation, reactive systems, air trafﬁc control, intelligent transport systems, and motor control systems. Dr. Huang serves as a Reviewer for Automatica, IEEE TRANSACTIONS ON SYSTEMS, MAN, AND CYBERNETICS: SYSTEMS, IEEE TRANSACTIONS ON AUTOMATION SCIENCE AND ENGINEERING, IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS, Institution of Engineering and Technology (IET) Control Theory and Applications, IET Intelligent Transport Systems, International Journal of Production Research, The Computer Journal, International Journal of Advancement Manufacturing Technology, Asian Journal of Control, Journal of the Chinese Institute of Engineers, and Journal of Information Systems Education.
Yi-Shun Weng received the B.S. degree in electrical engineering from National Taipei University of Technology, Taipei, Taiwan; the M.S. degree from National Taiwan Ocean University, Keelung, Taiwan, in 2000; and the Ph.D. degree in electrical and electronic engineering from National Defense University, Daxi, Taiwan, in 2011.
He is an Assistant Professor with the Department of Electronic Engineering, Army Academy Republic of China, Zhongli, Taiwan. His research interests include Petri nets, discrete-event systems, and intelligent transportation systems.
MengChu Zhou (S’88–M’90–SM’93–F’03) received the B.S. degree in control engineering from Nanjing University of Science and Technology, Nanjing, China; the M.S. degree in automatic control from Beijing Institute of Technology, Beijing, China; and the Ph.D. degree in computer and systems engineering from Rensselaer Polytechnic Institute, Troy, NY, USA.
Since 1990, he has been with New Jersey Institute of Technology, Newark, NJ, USA, where he is a Distinguished Professor of electrical and computer engineering. He is currently a Professor with Tongji University, Shanghai, China. His research interests include Petri nets, automation, and sensor networks. He is the author or coauthor of over 500 publications, including 11 books and more than 240 journal papers (the majority in IEEE TRANSACTIONS). Dr. Zhou is a Fellow of the International Federation of Automatic Control and the American Association for the Advancement of Science.

