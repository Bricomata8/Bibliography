v.

//

Typeset Acronyms and other Abbreviations

Clemens N

https://bitbucket.org/cgnieder/acro/

contact@mychemistry.eu

allows you to de ne and use abbreviations in a simple way. Abbreviations can be divided into di erent classes of abbreviations. Lists of abbreviations can be created (also of separate classes of abbreviations) and printed wherever you want the lists to appear.

provides an option single which ignores abbreviations that are used only once in the whole document.

As an experimental feature

also o ers the option sort which

automatically sorts the list created by \printacronyms.

also has the feature of creating local lists

Table of Contents
. Licence and Requirements
. Basics . . Creating New Acronyms . . . . . Logging of Acronyms . . . . . . . Using the Acronyms – the Commands . . . . . . . . . . . . . Plural Forms . . . . . . . . . . . . Alternative Short Forms . . . . . . Extra Information for the List Entry . . . . . . . . . . . . . . . . Foreign Language Acronyms .
. Additional Commands and Pos-
sibilities . . Inde nite Forms . . . . . . . . . . Uppercasing . . . . . . . . . . . . Simulating the First Appearance

. . Fetching the Single Appearance . . Using Classes . . . . . . . . . . . Reset or Mark as Used, Test if
Acronym Has Been Used . . . . . \ac and Friends in PDF Book-
marks, Accessibility Support, Tooltips . . . . . . . . . . . . . . . . PDF Bookmarks . . . . . . . Accessibility Support . . . . Tooltips . . . . . . . . . . Adding Acronyms to the Index
. Printing the List
. Options and Customization . . General Options . . . . . . . . . . Options Regarding Acronyms . . Options Regarding the List . .

. Licence and Requirements

. Trailing Tokens and Special Action
. About Page Ranges
. Dividing Your Document Into Pieces – Creating Local Lists
. Language Support
. hyperref Support
. Defining Own Acronym Macros
. About Plural Forms, Possessive Forms and Similar Constructs – the Concept of Endings

. More on Customization . . Background Information . . . . . Lists . . . . . . . . . . . . . . . . . . Own List Style . . . . . . . Own List Heading Command . . . . . . . . . First Styles . . . . . . . . . . . . . Extra Styles . . . . . . . . . . . . Page Number Styles . . . . . . . . Con guration Files . . . . . .
A. All Acronyms Used in this Documentation
B. References
C. Index

. Licence and Requirements
Permission is granted to copy, distribute and/or modify this software under the terms of the LATEX Project Public License (LPPL), version . or later (http://www.latex-project.org/lppl.txt). The software has the status “maintained.”
loads and needs the following packages: expl ,1 xparse, xtemplate, l keys e,2 zrefabspage3 and translations4 [Nie ].

. Basics

. . Creating New Acronyms
Acronyms are created with the command \DeclareAcronym.

\DeclareAcronym{ id }{ list of keys } The basic command for declaring an acronym.

This command understands a number of keys which are listed below. Some of them are not described immediately but at appropriate places in the documentation.

short = { text }

(required)

The short form of the acronym. This option is required: an acronym must have a short form.

If this is set it must be set as rst option! If another option is set rst and notices the short

. on CTAN as l3kernel: http://mirrors.ctan.org/macros/latex/contrib/l3kernel/ . on CTAN as l3packages: http://mirrors.ctan.org/macros/latex/contrib/l3packages/ . on CTAN as oberdiek: http://mirrors.ctan.org/macros/latex/contrib/oberdiek/ . on CTAN as translations: http://mirrors.ctan.org/macros/latex/contrib/translations/

. Basics

option missing it assumes that the id should be used as short version and sets it accordingly. A warning will be written to the log then.

long = { text }

(required)

The long form of the acronym. This option is required: an acronym must have a description.

short-plural = { text } The plural ending appended to the short form.

Default: s

short-plural-form = { text }

Introduced in The plural short form of the acronym; replaces the short form when used instead of appending

version .

the plural ending.

long-plural = { text } The plural ending appended to the long form.

Default: s

long-plural-form = { text } Plural long form of the acronym; replaces the long form when used instead of appending the plural ending.

Introduced in version .
Introduced in version .

alt-plural = { text } The plural ending appended to the alternative form.

Default: s

alt-plural-form = { text } The plural alternative form of the acronym; replaces the alternative form when used instead of appending the plural ending.

Introduced in version .
Introduced in version .

foreign-plural = { text } The plural ending appended to the foreign form.

Default: s

long-plural-form = { text } Plural lforeign form of the acronym; replaces the foreign form when used instead of appending the plural ending.

list = { text } If speci ed this will be written in the list as description instead of the long form.

short-indefinite = { text } Inde nite article for the short form.

Default: a

long-indefinite = { text } Inde nite article for the long form.

Default: a

long-pre = { text } text is prepended to the long form in the text but not in the list of acronyms.

long-post = { text } text is appended to the long form in the text but not in the list of acronyms.

. Basics

Introduced in version .

post = { text } text is appended to the acronym in the text but not in the list of acronyms.
alt = { text } Alternative short form.

alt-indefinite = { text } Inde nite article for the alternative form.

Default: a

extra = { text } Extra information to be added in the list of acronyms.

foreign = { original long form } Can be useful when dealing with acronyms in foreign languages, see section . on page for details.

Introduced in version .

foreign-lang = { language } The babel [Bra ] or polyglossia [Cha ] language of the foreign form. This language is used to wrap the entry with \foreignlanguage{ language } if either babel or polyglossia is loaded. You’ll need to take care that the corresponding language is loaded by babel or polyglossia.

single = { text }

Introduced in If provided text will be used instead of the long form if the acronym is only used a single time

version .

and the option single = {true} is active.

sort = { text } If used the acronym will be sorted according to this key instead of its id.

Changed in version .

class = { csv list } The class(es) the acronym belongs to.
cite = {[ prenote ][ postnote ]{ citation keys }} A citation that is printed to the acronym according to an option explained later.

short-format = { TEX code } The format used for the short form of the acronym.

long-format = { TEX code } The format used for the long form of the acronym.

first-long-format = { TEX code } The format used for the rst long form of the acronym as set with \ac, \acf or \acflike and their uppercase, plural and inde nite forms.

Introduced in version .
Introduced in version .

single-format = { TEX code } The format used for the acronym if the acronym is only used a single time.
first-style = default | empty | square | short | long | reversed | footnote | sidenote | footnote-reversed|sidenote-reversed
The style of the rst appearance of the acronym, see also section . .

. Basics

Changed in version . b

pdfstring = { text / plural ending } Used as PDF string replacement in bookmarks when used together with the hyperref package. The appended plural ending is optional. If you leave it (and the /) the default ending is used. text is expanded before it is saved.

accsupp = { text } Sets the ActualText key as presented by the accsupp package for the acronym.

tooltip = { text }

Introduced in Sets the tooltip description for an acronym. For actually getting tooltips you also need an

version .

appropriate setting of the tooltip-cmd option or to set the package option tooltip.

index-sort = { text } If you use the package option index every occurrence of an acronym is recorded to the index and sorted by its id or (if set) by the value of the sort key. This key allows to set an individual sorting option for the index. See section . on page for details.

index = { text } This key allows to overwrite the automatic index entry with an arbitrary one. See section . on page for details.

index-cmd = { control sequence } This key let’s you set an individual index creating command for this acronym. It should be a command that takes one mandatory argument. See section . on page for details.
In its simplest form an acronym needs a short and a long form. Please note that both keys must be set and that the short key must always be the rst key that is set.

% preamble: \DeclareAcronym{test}{
short = ST , long = Some Test }

This creates the acronym “ST” with the id “test” and the long form “Some Test.” The format key allows you to choose a speci c format for the short form of an acronym:

% preamble:

\DeclareAcronym{ot}{

short

= ot ,

long

= Other Test ,

short-format = \scshape

}

. Basics

The short form now looks like this: ot. The cite key needs a bit explaining. It expects arguments like the standard \cite command,
i.e., two optional arguments setting the prenote and postnote and one mandatory argument setting the citation key.

% preamble:

\DeclareAcronym{ny}{

short

= NY ,

short-plural = ,

long

= New York ,

long-plural = ,

cite

= {NewYork}

}

% bib file for use with biber/biblatex:

@online{NewYork,

author = {Wikipedia},

title = {New York City},

urldate = {2012-09-27},

url

= {http://en.wikipedia.org/wiki/New_York_City},

year = {2012}

}

The rst appearance now looks as follows5: New York (NY) [Wik ].

. . Logging of Acronyms

Introduced in version .

When you activate to the log le.

’s option log

’ writes information about the acronyms it de nes

log = true|false|silent|verbose

Default: false

When set to true/silent

writes the main properties of an acronym to the log le. When

set to verbose

’ writes all properties of an acronym to the log le.

This is an example of the logging info with log = {true} or log = {silent}.

. The appearance of the citation of course depends on the citation style you’re using.

. Basics
================================================= | acro info -- defining new acronym: | ID = {jpg} | short = {JPEG} | long = {Joint Photographic Experts Group} | alt = {JPG} | sort = {jpeg} | class = {} | list = {} | extra = {} | foreign = {} | pdfstring = {} | cite = {} =================================================
. . Using the Acronyms – the Commands
Acronyms are used with one of the following commands:
\ac*{ id } basic command; the rst output is di erent from subsequent ones.
\Ac*{ id } same as \ac but capitalizes the rst letter of the long form.
\acs*{ id } short form; the actual acronym.
\acl*{ id } long form; the meaning of the acronym.
\Acl*{ id } same as \acl but capitalizes rst letter.
\aca*{ id } alternative short form as speci ed in the alt key of \DeclareAcronym; if it hasn’t been speci ed this is identical to \acs.
\acf*{ id } rst form; output like the rst time \ac is output.
\Acf*{ id } same as \acf but capitalizes rst letter of the long form.
\acp*{ id } plural form of \ac;

. Basics
\Acp*{ id } same as \acp but capitalizes rst letter of the long form.
\acsp*{ id } plural form of \acs;
\aclp*{ id } plural form of \acl;
\Aclp*{ id } same as \aclp but capitalizes rst letter.
\acap*{ id } plural form of \aca;
\acfp*{ id } plural form of \acf;
\Acfp*{ id } same as \acfp but capitalizes rst letter of the long form.
If an acronym is used the rst time with \ac its output is di erent from subsequent uses. To be clear on this: the rst time! If the acronym has been used with any of the output commands before it is not the rst time any more.
If you use the starred variant an acronym will not be marked as used. This proves useful if an acronym is typeset in a section title, for example, since then the appearance in the table of contents won’t mark it as used.

% preamble:

% \DeclareAcronym{cd}{

% short

= cd ,

% long

= Compact Disc ,

% short-format = \scshape

%}

first time: \ac{cd} \\

second time: \ac{cd} \\

short: \acs{cd} \\

alternative: \aca{cd} \\

first again: \acf{cd} \\

long: \acl{cd} \\

short plural: \acsp{cd} \\

long plural: \aclp{cd}

rst time: Compact Disc (cd) second time: cd short: cd alternative: cd
rst again: Compact Disc (cd) long: Compact Disc short plural: cd long plural: Compact Discs

. . Plural Forms

If an acronym is de ned in the standard way

uses an ‘s’ that’s appended to both the short

and the long form when one of the plural commands is used. However, that is not always the

. Basics

best solution. For one thing not all acronyms may have a plural form. Second, the plural form especially of the long forms may be formed di erently. And third, other languages can have other plural endings.
For these reasons \DeclareAcronym can get the following keys:

short-plural = { text } The plural ending of the short form.

Default: s

long-plural = { text } The plural ending of the long form.

Default: s

long-plural-form = { text } An alternative plural form for the long form.

These keys are optional. If they’re not used, the default setting is s. If you use long-plural-form the long form will be replaced by the speci ed plural form when necessary.
Suppose we de ne the following acronyms:

\DeclareAcronym{cd}{

short

= cd ,

long

= Compact Disc ,

short-format = \scshape

}

\DeclareAcronym{ny}{

short

= NY ,

short-plural = ,

long

= New York ,

long-plural =

}

\DeclareAcronym{sw}{

short

= SW ,

long

= Sammelwerk ,

long-plural = e

}

\DeclareAcronym{MP}{

short

= MP ,

long

= Member of Parliament ,

long-plural-form = Members of Parliament

}

These acronyms now have the following plural appearances:

\acsp{cd}, \aclp{cd} \\ \acsp{ny}, \aclp{ny} \\ \acsp{sw}, \aclp{sw} \\ \acsp{MP}, \aclp{MP}

. Basics
cd, Compact Discs NY, New York SW, Sammelwerke MP, Members of Parliament

In the default setting the format of the long or short form is not extended to the plural ending

which might look strange if you choose bold weight as format, for example. In this case you

can tell

to extend the format.

format-include-endings = true|false

Introduced in Tell

to use the format of the base form for the endings, too.

version .

For a more general view on endings please read section on page .

Default: false

. . Alternative Short Forms
For some acronyms it might be useful to have alternative forms. For this \DeclareAcronym has another key:
alt = { text } Alternative short form.

% preamble: % \DeclareAcronym{jpg}{ % short = JPEG , % sort = jpeg , % alt = JPG , % long = Joint Photographic Experts Group %} default: \acs{jpg} \\ alt.: \aca{jpg}
default: JPEG alt.: JPEG
The alternative form uses the same plural ending as the default short form and is formatted in the same way.
. . Extra Information for the List Entry
Of course you can print a list of acronyms where their meaning is explained. Sometimes it can be useful to add additional information there. This is done with another key to \DeclareAcronym:

. Basics

extra = { text } Additional information for the list of acronyms.
These information will only be displayed in the list. See section on page the following example.

for the impact of

% preamble:

% \DeclareAcronym{nato}{

% short

= nato ,

% long

= North Atlantic Treaty Organization ,

% extra

= \textit{deutsch}: Organisation des Nordatlantikvertrags ,

% short-format = \scshape

%}

The \ac{nato} is an intergovernmental military alliance based on the

North Atlantic Treaty which was signed on 4~April 1949. \ac{nato}

headquarters are in Brussels, Belgium, one of the 28 member states

across North America and Europe, the newest of which, Albania and

Croatia, joined in April 2009.

The North Atlantic Treaty Organization (nato) is an intergovernmental military alliance based on the North Atlantic Treaty which was signed on April . nato headquarters are in Brussels, Belgium, one of the member states across North America and Europe, the newest of which, Albania and Croatia, joined in April .

. . Foreign Language Acronyms
I repeatedly read the wish for being able to add translations to acronyms when the acronyms stem from another language than the document language, i.e., something like the following in a German document:

\ac{ecu}\\ \ac{ecu}

Steuergerät (Electronic Control Unit, ECU) ECU

That’s why I decided to add the following properties:

foreign = { original long form } A description for an acronym originating in another language than the document language.

foreign-lang = { language }

Introduced in The babel [Bra ] or polyglossia [Cha ] language of the foreign form. This language is used

version .

to wrap the entry with \foreignlanguage{ language }.

. Additional Commands and Possibilities
Here is the de nition of the above mentioned ECU acronym:
\DeclareAcronym{ecu}{ short = ECU , long = Steuerger\"at , foreign = Electronic Control Unit , foreign-lang = english
}

As you have seen this adds the foreign entry to the rst appearance of an acronym. It is also added in parentheses to the list of acronyms after the long entry. Actually the entry there is the argument to the following command:

\acroenparen{ argument } Places argument in parentheses: \acroenparen{example}: (example). See page to customize this other than rede ning it.

for a way

. Additional Commands and Possibilities

. . Indefinite Forms

Unlike many other languages 6 in English the inde nite article is not determined by the gram-

matical case, gender or number but by the pronounciation of the following word. This means

that the short and the long form of an acronym can have di erent inde nite articles. For these

cases

o ers the keys short-indefinite, alt-indefinite and long-indefinite whose

default is a. For every lowercase singular command two alternatives exist, preceded by i and I,

respectively, which output the lowercase and uppercase version of the corresponding inde nite

article.

% preamble:

% \DeclareAcronym{ufo}{

% short

= UFO ,

% long

= unidentified flying object ,

% long-indefinite = an

%}

\Iac{ufo}; \iacs{ufo}; \iacl{ufo}

An unidenti ed ying object (UFO); a UFO; an unidenti ed ying object
. Let’s better say: unlike the other languages where I know at least the basics.

. Additional Commands and Possibilities
. . Uppercasing
\acfirstupper{ token list } This command uppercases the rst token in token list . The command is less powerful than \makefirstuc that is provided by the mfirstuc package [Tal ] but it is expandable. Obvious downsides are for example that it does not uppercase accented letters.
. . Simulating the First Appearance
Users told me7 that there are cases when it might be useful to have the the acronym typeset according to the first-style but with another text than the long form. For such cases o ers the following commands.
\acflike*{ id }{ instead of long form } Write some alternative long form for acronym with id id as if it were the rst time the acronym was used.
\acfplike*{ id }{ instead of long form } Plural form of \acflike.

\acsetup{first-style=footnote} \acflike{ny}{the big apple}

NYa
a. the big apple [Wik ]

The plural ending in \acfplike is only appended to the short form. It makes no sense to append it to the text that is inserted manually anyway. Note that whatever text you’re inserting might be gobbled depending on the first-style you’re using.

Introduced in version .

. . Fetching the Single Appearance
There are macros that fetch the single appearance of an acronym even if it has been used more than once and the single option is active.

\acsingle*{ id } Write acronym as if it were used only a single time.

\Acsingle*{ id } Uppercase form of \acsingle.

\acsingle{ny} . Well – one, to be precise ;)

New York [Wik ]

. Additional Commands and Possibilities

Changed in version .

. . Using Classes

The acronyms of

can be divided into di erent classes. This doesn’t change the output

but allows di erent acronym lists, see section on page . For this \DeclareAcronym has an

additional key:

class = { csv list } Associated class(es) for an acronym.

This might be useful if you can and want to divide your acronyms into di erent types, technical and grammatical ones, say, that shall be listed in di erent lists. Since every acronym can get a list of associated classes those classes can e ectively be used like tags for ltering acronyms.

% preamble:

% \DeclareAcronym{la}{

% short

= LA ,

% short-plural = ,

% long

= Los Angeles ,

% long-plural = ,

% class

= city

%}

% \DeclareAcronym{ny}{

% short

= NY ,

% short-plural = ,

% long

= New York ,

% long-plural = ,

% class

= city ,

% cite

= NewYork

%}

\acl{la} (\acs{la}) \\

\acl{ny} (\acs{ny})

Los Angeles (LA) New York (NY)

. . Reset or Mark as Used, Test if Acronym Has Been Used

If you want for some reason to fool

into thinking that an acronym is used for the rst

time you can call one of these commands:

\acreset{ comma separated list of ids } This will reset a used acronym such that the next use of \ac will again print it as if it were used the rst time. This will not remove an acronym from being printed in the list if it actually has been used before.

\acresetall
Reset all acronyms.

. Additional Commands and Possibilities

\acifused{ id }{ true }{ false } This command tests if the acronym with id id has already been used and either puts true or false in the input stream.

\aciffirst{ true }{ false }

Introduced in To be used inside of acronym de nitions in order to test if we are inside the rst instance of the

version .

acronym or not.

\acreset{ny}\ac{ny}

New York (NY) [Wik ]

Beware that both commands act globally! There are also commands that e ectively do the opposite of \acreset, i.e., mark acronyms as used:

\acuse{ comma separated list of ids } This has the same e ect as if an acronym had been used twice, that is, further uses of \ac will print the short form and the acronym will in any case be printed in the list (as long as its class is not excluded).

\acuseall
Mark all acronyms as used.
Then there are two further commands related to using acronyms:

Introduced in version .

\acswitchoff
This command is for patching in certain situations. For example some table environments like tabularx or tabu pass their content two or more times for determining the width of the table columns. Those can be patched to add \acswitchoff to their trial phase.

\acswitchon
Introduced in E ectively the opposite of \acswitchoff – this command should probably never be needed.
version .
. . \ac and Friends in PDF Bookmarks, Accessibility Support, Tooltips

. . . PDF Bookmarks

’s commands usually are not expandable which means they’d leave unallowed tokens in

PDF bookmarks. hyperref o ers \texorpdfstring to circumvent that issue manually but that

isn’t really a nice solution. What’s the point of having macros to get output for you if you have

to specify it manually after all?

That is why

o ers a preliminary solution for this. In a bookmark every \ac like

command falls back to a simple text string typesetting what \acs would do (or \acsp for plural

forms). These text strings both can accessed manually and can be modi ed to an output reserved

for PDF bookmarks.

. Additional Commands and Possibilities
\acpdfstring{ id } Access the text string used in PDF bookmarks.
\acpdfstringplural{ id } Access the plural form of the text string used in PDF bookmarks.
pdfstring = {{ pdfstring / plural ending }} Key for \DeclareAcronym to declare a custom text string for PDF bookmarks. The plural ending can be set optionally.
For example the PDF acronym used in the title for this section is de ned as follows:

\DeclareAcronym{pdf}{

short

= pdf ,

long

= Portable Document Format ,

format = \scshape ,

pdfstring = PDF ,

accsupp = PDF

}

. . . Accessibility Support
The last example also demonstrates the accsupp key. The idea is to have something di erent visible in the PDF le compared to what you get when you select and copy the corresponding string. In the example visible string is a lowercase pdf in small caps while the string copied is an uppercase PDF.
For this to work you need to use the package option accsupp, too, which will load the package accsupp if it isn’t loaded by the user already. Then the key accsupp will set the ActualText property of \BeginAccSupp. Please refer to accsupp’s documentation for details. To see its e ect copy PDF and paste it into a text le. You should get uppercase letters instead of lowercase ones.
accsupp = { text } Key for \DeclareAcronym to set the ActualText property of \BeginAccSupp (see accsupp’s documentation for details) to be used for an acronym. It only has an e ect when the package option accsupp is used, too.
. . . Tooltips
The idea of a tooltip is to have some text shown when you hover with the mouse over the short form of an acronym. This is only available in some PDF viewers, though. On possibility for such tooltips is loading the pdfcomment package [Kle ] and using its \pdftooltip macro.

. Printing the List

tooltip = true|false

Default: false

Introduced in This options loads the pdfcomment package and sets the command for creating tooltips to

version .

\pdftooltip.

Introduced in version .

tooltip-cmd = { control sequence }

Default: \@firstoftwo

This allows users using another macro for tooltips – maybe one provided by another package

or some own macro. It needs to be a macro with two mandatory arguments, the rst being the

string typeset in the PDF, the second being the tooltip description text.

For using this with acronyms they have a property tooltip which can be used inside \DeclareAcronym for specifying the description text of the tooltip. If the tooltip package option is used but the property is not set for an acronym then the long property is used instead.
If an acronym is used inside of another acronym then the tooltips of the “inner” acronyms are disabled.

. . Adding Acronyms to the Index
has the package option index. If it is used an index entry will be recorded every time an unstarred acronym command is used. The index entry will be id @ short , sort @ short if the sort key has been set, index-sort @ short if the index-sort has been set, or index if the key index has been set for the speci c acronym. The short versions appearing there are formatted according to the chosen format of the corresponding acronym, of course.
This document demonstrates the feature. You can nd every acronym that has been declared in the index. In order to allow exibility the indexing command can be chosen both globally via package option and individually for every acronym. This would allow to add acronyms to a speci c index if more than one index is used, for example with help of the imakeidx package.
I’m not yet convinced this is a feature many people if anyone needs and if they do if it is exible enough. If you have any thoughts on this I’d appreciate an email.

. Printing the List
Printing the whole list of acronyms is easy: just place \printacronyms where ever you want the list to be.
\printacronyms[ options ] Print the list of acronyms.
The commands takes a few options, namely the following ones:
include-classes = { list of classes } Takes a comma-separated list of the classes of acronyms that should be in the list.
exclude-classes = { list of classes } Takes a comma-separated list of the classes of acronyms that should not be in the list. Note that this list overwrites any entries in include-classes! If a class is both included and excluded then the corresponding acronyms will not be added to the list.

. Printing the List

name = { name of the list } sets the name for the list.

heading = { sectioning command without leading backslash }

Default: section*

Sets the sectioning command for the heading of the list. A special value is none which suppresses

the heading.

sort = true|false
Set sorting for this list only.

Default: true

local-to-barriers = true|false

Default: false

Introduced in This option can be used to create a list of only the acronyms of the current “barrier group”, see

version .

section .

\acsetup{extra-style=comma} \printacronyms[exclude-classes=city]
\printacronyms[include-classes=city,name={City Acronyms}]

Acronyms
cd Compact Disc CTAN Comprehensive TEX Archive Network ECU Steuergerät (Electronic Control Unit) id identi cation string JPEG Joint Photographic Experts Group LPPL LATEX Project Public License MP Member of Parliament nato North Atlantic Treaty Organization, deutsch: Organisation des Nordatlantikvertrags PDF Portable Document Format SW Sammelwerk ST Some Test

. Options and Customization

UFO unidenti ed ying object

City Acronyms
LA Los Angeles NY New York

You can see that the default layout is a description list with a \section* title. Both can be changed, see section .
The command \printacronyms needs two LATEX runs. This is a precaution to avoid error messages with a possibly empty list. But since almost all documents need at least two runs and
often are compiled much more often than that, this fact shouldn’t cause too much inconvenience.

. Options and Customization

. . General Options

There are a few options which change the general behaviour of used if no value is given.

. Underlined values are

messages = silent|loud

Default: loud

Setting messages = {silent} will turn all of

’s error messages into warnings and all of

’s warnings into info messages. Be sure to check the log le carefully if you decide to set

this option.

single = true|false

Default: false

If set to true an acronym that’s used only once (with \ac) in a document will only print the

acronym in a speci ed form and will not be printed in the list.

single-form = long|short|alt|first

Default: long

Introduced in Determines how a single appearance of an acronym is printed if single = {true} has been

version .

chosen.

hyperref = true|false

Default: false

If set to true the short forms of the acronyms will be linked to their list entry.

label = true|false

Default: false

If set to true this option will place \label{ pre x id } the rst time the acronym with id id

is used.

label-prefix = { text } The pre x for the \label that is placed when option label = {true} is used.

Default: ac:

only-used = true|false

Default: true

This option is true as default. It means that only acronyms that are actually used in the

. Options and Customization

document are printed in the list. If false, all acronyms de ned with \DeclareAcronym will be written to the list.

mark-as-used = first|any

Default: any

This option determines wether an acronym is mark as used when the rst form is used the rst

time (with \ac, \acf or \acflike and their uppercase, plural and inde nite forms) or when any

of the \ac-like commands is used.

macros = true|false

Default: false

If set to true this option will create a macro \ id for each acronym as a shortcut for \ac{ id }.

Already existing macros will not be overwritten.

xspace = true|false

Default: false

If set to true this option will append \xspace from the xspace package to the commands created

with the macros option.

strict = true|false

Default: false

If set to true and the option macros = {true} is in e ect then already existing macros will be

overwritten.

sort = true|false

Default: true

If set to true the acronym list will be sorted automatically. The entries are sorted by their id

ignoring upper and lower case. This option needs the experimental package l sort (from the

l experimental bundle) and can only be set in the preamble.

Changed in version . b

cite = all|first|none

Default: first

This option decides whether citations that are added via cite are added to each rst, every or

no appearance of an acronym. If first is chosen, the option single = {true} is active and an

acronym appears only once it still will get the citation.

cite-cmd = { control sequence }

Default: \cite

This option determines which command is used for the citation. Each citation command that

takes the cite key as argument is valid, for example biblatex’s \footcite.

cite-connect = { code }

Default: \nobreakspace

Depending on the citation command in use a space should be inserted before the citation or

maybe not (e.g. \footcite. . . ). This option allows you to set this. Actually it can be used to

place arbitrary code right before the citation.

group-citation = true|false

Default: false

Introduced in If set to true the short form (or the long form) and the citation of an acronym will be printed

version .

together in parentheses when an acronym is used the rst time.

Introduced in version .

group-cite-cmd = { control sequence }

Default: \cite

This option determines which command is used for the citation when an acronym is used the

rst time and group-citation = {true}. Each citation command that takes the cite key as

argument is valid, for example biblatex’s \footcite.

. Options and Customization

group-cite-connect = { code }

Default: ,\nobreakspace

Introduced in When group-citation = {true} this is inserted between the long/short form of the acronym

version .

and the citation within the parentheses.

index = true|false

Default: false

If set to true an index entry will be recorded every time an unstarred acronym command is

used for the corresponding acronym.

index-cmd = { control sequence }

Default: \index

Chooses the index command that is used when option index has been set to true.

accsupp = true|false
Activates the access support as provided by the accsupp package.

Default: false

Introduced in version .
Introduced in version .

tooltip = true|false
Activates tooltip support for

using the pdfcomment package.

Default: false

tooltip-cmd = { control sequence }

Default: \@firstoftwo

A macro taking two mandatory arguments, the rst being the short form of the acronym and

the second being some tooltip description.

uc-cmd = { control sequence }

Default: \acfirstupper

The command that is used to capitalize the rst word in the \Ac and the like commands. You

can change it to another one like for example \makefirstuc 8 or \MakeTextUppercase.9

All options of this and the following sections can be set up either as package options or via the setup command:

\acsetup{ options }

Set up

anywhere in the document. Or separate package loading from setup.

% with \acsetup{macros} we could have used these before: \nato, \ny
we could have used these before: nato, NY
. . Options Regarding Acronyms
The options described in this section all in uence the layout of one of the possible output forms of the acronyms.
. from the mfirstuc package . from the textcase package

. Options and Customization

short-format = { format }

(initially empty)

Sets a format for all short forms. For example short-format = {\scshape} would print all

short forms in small caps.

long-format = { format } The same for the long forms.

(initially empty)

foreign-format = { format }

(initially empty)

The format for the foreign entry when it appears as part of the rst appearance of an acronym.

single-format = { format }

(initially empty)

Introduced in The format for the acronym when it is used only once. If not speci ed the formatting according

version .

to single-form is used.

first-long-format = { format }

(initially empty)

The format for the long form on rst usage (with \ac, \acf or \acflike and their uppercase,

plural and inde nite forms).

list-short-format = { format }

(initially empty)

An extra format for the short entries in the list. If not used this is the same as short-format.

Please be aware that a call of short-format after this one will overwrite it again.

Introduced in version .

list-short-width = { dim }

Default: 3em

This option controls the width reserved for the short forms of the acronyms in the lof list style.

list-long-format = { format }

(initially empty)

An extra format for the long entries in the list. If not used this is the same as long-format.

Please be aware that a call of long-format after this one will overwrite it again.

list-foreign-format = { format }

Default: \acroenparen

The format for the foreign entry as it appears in the list. This may be code that ends with a

macro that takes a mandatory argument.

extra-format = { format } The same for the extra information.

(initially empty)

Changed in version . b

first-style = default | empty | square | short | long | reversed | footnote | sidenote |

footnote-reversed|sidenote-reversed

Default: default

The basic style of the rst appearance of an acronym. The value sidenote needs the command

\sidenote to be de ned (for example by the sidenotes package).

extra-style = default|plain|comma|paren|bracket
De nes the way the extra information is printed in the list.

Default: default

plural-ending = { short / long }

Default: s/s

With this option the default plural ending can be set. The appended long ending is optional.

If you leave it (and the /) the short ending is used for both short and long versions.

. Options and Customization

% (Keep in mind that we're in % a minipage here!) \acsetup{first-style=empty} empty: \acf{ny} \\ \acsetup{first-style=footnote} footnote: \acf{ny} \\ \acsetup{first-style=square} square: \acf{ny} \\ \acsetup{first-style=short} short: \acf{ny} \\ \acsetup{first-style=long} long: \acf{ny} \\ \acsetup{first-style=reversed} reversed: \acf{ny} \\ \acsetup{
first-style = footnote-reversed } footnote-reversed: \acf{ny}

empty: NY footnote: NYa square: New York [NY] [Wik ] short: NY [Wik ] long: New York [Wik ] reversed: NY (New York) [Wik ] footnote-reversed: New Yorkb
a. New York [Wik ] b. NY [Wik ]

. . Options Regarding the List

page-style = none|plain|comma|paren

Default: none

If this option is set to a value other than none the page numbers of the an acronym appeared on

are printed in the list. Please note that this is an experimental feature and might fail in quite a

number of cases. If you notice anything please send me an email!

pages = all|first

Default: all

If the option page-style has any value other than none this option determines wether all usages

of the acronyms are listed or only the rst time. Implicitly sets label = {true}.

page-name = { page name }

Default: p.\@\,

The “name” of the page label. This is automatically translated to the active language. However

for the time being there are many translations missing, yet. Please notify me if you nd your

language missing.

pages-name = { page name plural }

Default: pp.\@\,

The “name” of the page label when there are more than one page. This is automatically translated

to the active language. However for the time being there are many translations missing, yet.

Please notify me if you nd your language missing.

following-page = true|false

Default: false

If set to true a page range in the list of acronyms that consists of two pages will be written by

the rst page and an appended f. This depends on the option next-page.

following-pages = true|false

Default: false

If set to true a page range in the list of acronyms that set consists of more than two pages will

be written by the rst page and an appended ff. This depends on the option next-pages.

. Trailing Tokens and Special Action

Introduced in version .

following-pages* = true|false

Default: false

If set to true this sets both options following-page = {true} and following-pages = {true}.

false sets following-page = {false} and following-pages = {false}.

next-page = { text }

Default: \,f.\@

Appended to a page number when following-page is set to true and the range is only pages

long. This is automatically translated to the active language. However, for the time being there

are many translations missing, yet. Please notify me if you nd your language missing.

next-pages = { text }

Default: \,ff.\@

Appended to a page number when following-pages is set to true and the range is more than

pages long. This is automatically translated to the active language. However, for the time being

there are many translations missing, yet. Please notify me if you nd your language missing.

Changed in version .

list-style = description | lof | longtable | extra-longtable | extra-longtable-rev |

extra-tabular|extra-tabular-rev|tabular|toc

Default: description

Choose with which style the list of acronyms should be typeset. If you choose longtable ,

extra-longtable or extra-longtable-rev you have to load the longtable [Car ] package in

your preamble. The values extra- something put the extra information in a column of it own.

Be aware that per default all extra-table styles only use l columns. Since acronym descriptions

can easily get longer that a line you should probably de ne your own style if you want to use them. See section . on page for details.

Changed in version .

list-heading = chapter | chapter* | section | section* | subsection | subsection* |

subsubsection|subsubsection*|addchap|addsec|none

Default: section*

The heading type of the list. The last two only work with a KOMA-Script class that also de nes

the appropriate command. A special value is none which suppresses the heading.

list-name = { list name }

Default: Acronyms

The name of the list. This is what’s written in the list-heading. This is automatically translated

to the active language. However, for the time being there are many translations missing, yet.

Please notify me if you nd your language missing.

list-caps = true|false
Print the rst letters of the long form capitalized.

Default: false

. Trailing Tokens and Special Action

Introduced in version .

has the possibility to look ahead for certain tokens and switch a boolean if it nds them.

Per default

knows about three tokens: the “dot” (.), the “dash” (-) and the “babel-hyphen”

(\babelhyphen).

A token is made known to

with the following macro:

\AcroRegisterTrailing token { name }

This registers the token token so

looks if it follows directly after an acronym macro.

name is the internal name for this token.

. Trailing Tokens and Special Action

The

package already registers the above mentioned tokens:

\AcroRegisterTrailing . {dot} \AcroRegisterTrailing - {dash} \AcroRegisterTrailing \babelhyphen {babel-hyphen}

If a token is registered it doesn’t mean that activated for this:

looks for it. The token must rst be

activate-trailing-tokens = { csv list of token names }

Tell

to look for trailing tokens. This is done by giving a csv list of the internal names of

the tokens. Per default only dot is activated.

deactivate-trailing-tokens = { csv list of token names }

Tell

not to look for trailing tokens. This is done by giving a csv list of the internal names

of the tokens.

All of the above on its own does nothing visible. However: inside of an acronym, i. e., for example inside the long or the short form it can be tested for those trailing tokens:

\aciftrailing{ csv list of token names }{ true }{ false } Check if one of the tokens listed in csv list of token names is following and either place true or false in the input stream.
uses this to de ne to further macros:

\acdot
Inserts a . if no dot follows.

\acspace
Inserts a \space if no dash or babel-hyphen follows.

The de nitions are equivalent10 to the following code:

\newcommand*\acdot{\aciftrailing{dot}{}{.\@}} \newcommand*\acspace{\aciftrailing{dash,babel-hyphen}{}{\space}}

This could be used to de ne an acronym as follows:

. Not quite:

’s de nitions are engine protected.

. Trailing Tokens and Special Action
\DeclareAcronym{etc}{ short = {\textit{etc}\acdot} , long = {\textit{et cetera}} , short-plural = , long-plural =
}
If now you somewhere use
\ac{etc}.
there won’t be two dots printed. The command \acspace is used already in the de nition of the rst appearance of a macro.
Let’s say you’re a German chemist and you have
\DeclareAcronym{PU}{ long = Polyurethan , long-plural = e
}
and you use it the rst time like this:
\ac{PU}-Hartschaum
then according to German orthography and typesetting rules this should be printed as “Polyurethan(PU)-Hartschaum”
i. e., with no space between long and short form. This is exactly what happens it you say
\acsetup{activate-trailing-tokens = {dash,babel-hyphen}}
in the preamble.

. About Page Ranges

. About Page Ranges

If you enable the page-style option

adds page numbers to the list of acronyms. In

version .* it would add a page reference for an acronym in the list of acronyms that used \pageref to refer to the rst appearance of an acronym. This is retained using pages = {first}.

Version . uses a di erent approach that doesn’t use a label but instead will list all pages an

acronym appeared on. With hyperref the pages are referenced using \hyperpage.

There are some options that control how this list will be typeset, e.g., following-page,

next-pages or the option page-style itself. It is important to mention that the page list will

always take at least two compilation runs until changes in the options or the actual page

numbers a ect it. This is due to the fact that the updated sequence is rst written to the aux le

and only read in during the next run.

. Dividing Your Document Into Pieces – Creating Local Lists

Introduced in version .

introduces the concept of barriers which can divide the document into parts. It is possible to create lists of only those acronyms used between two such barriers.

\acbarrier
Sets a barrier at the point of use in the document. The begin and the end of the document mark implicit barriers.

Introduced in version .

use-barriers = true|false

Default: false

If you want to use barriers and local lists you have to activate the feature rst. This should

be set in the preamble in order to work reliably. Make sure to watch out for log le messages

asking you to rerun.

reset-at-barriers = true|false
If this option is set to true \acbarrier implicitly calls \acresetall.

Default: false

local-to-barriers = true|false

Default: false

This option can only be used as option to the \printacronyms command. It then prints a list of

only the acronyms of the current “barrier group”.

\acbarrier \printacronyms[local-to-barriers] \ac{ctan} and \ac{lppl} \acbarrier

. Language Support
Acronyms
CTAN Comprehensive TEX Archive Network LPPL LATEX Project Public License
CTAN and LPPL

. Language Support

detects if packages babel [Bra ] or polyglossia [Bra ] are being loaded and tries to

adapt certain strings to match the chosen language. However, due to my limited language

knowledge only a few translations are provided. I’ll show how the English translations are

de ned so you can add the translations to your preamble if needed. Even better would be you’d

send me a short email to contact@mychemistry.eu with the appropriate translations for your

language and I’ll add them to

.

\DeclareTranslation{English}{acronym-list-name}{Acronyms} \DeclareTranslation{English}{acronym-page-name}{p.} \DeclareTranslation{English}{acronym-pages-name}{pp.} \DeclareTranslation{English}{acronym-next-page}{f.} \DeclareTranslation{English}{acronym-next-pages}{ff.}

. hyperref Support
The option hyperref = {true} adds internal links from all short (or alternative) forms to their respective list entries. Of course this only works if you have loaded the hyperref package in your preamble. You should use this option with care: if you don’t use \printacronyms anywhere this option will result in loads of hyperref warnings. Also printing several lists can result in warnings if don’t clearly separate the lists into di erent classes. If an acronym appears in more than one list there will also be more than one hypertarget for this acronym.
Using hyperref will also add \hyperpage to the page numbers in the list (provided they are displayed in the style chosen). Like with an index the references will thus not point to the acronyms directly but to the page they’re on.

Introduced in version .

. Defining Own Acronym Macros
The commands explained in section . on page have all been de ned with a dedicated command – there is a family of dedicated commands, actually:

. De ning Own Acronym Macros

\NewAcroCommand{ cs }{ code }

De nes a new

acronym command cs . This sets up the necessary framework needed by

acronym commands and de nes cs with an optional star argument and a mandatory argument

for the acronym id using xparse’s \NewDocumentCommand. Inside code one can refer to the id

id with #1.

\RenewAcroCommand{ cs }{ code }

De nes a new

acronym command cs . This sets up the necessary framework needed by

acronym commands and de nes cs with an optional star argument and a mandatory argument

for the acronym id using xparse’s \RenewDocumentCommand. Inside code one can refer to the

id id with #1.

\DeclareAcroCommand{ cs }{ code }

De nes a new

acronym command cs . This sets up the necessary framework needed by

acronym commands and de nes cs with an optional star argument and a mandatory argument

for the acronym id using xparse’s \DeclareDocumentCommand. Inside code one can refer to

the id id with #1.

\ProvideAcroCommand{ cs }{ code }

De nes a new

acronym command cs . This sets up the necessary framework needed by

acronym commands and de nes cs with an optional star argument and a mandatory argument

for the acronym id using xparse’s \ProvideDocumentCommand. Inside code one can refer to

the id id with #1.

Inside these macros one can use a number of low-level expl commands.11

Acronym fetching commands
\acro_use:n { id } Fetches the acronym using either the rst or the short form depending on earlier uses.
\acro_short:n { id } Fetches the short form of the acronym.
\acro_long:n { id } Fetches the long form of the acronym.
\acro_alt:n { id } Fetches the alternative short form of the acronym.
\acro_foreign:n { id } Fetches the foreign property of the acronym if available.
\acro_extra:n { id } Fetches the extra property of the acronym if available.
. Which is why you need to use them inside an expl programming environment. This means in the preamble surround the de nitions with \ExplSyntaxOn and \ExplSyntaxOff.

. De ning Own Acronym Macros

Acronym setup commands

\acro_first_upper:
setup command which tells the macros above that we want to uppercase the rst letter of the long version. Should be used before one of the acronym fetching commands.

\acro_plural:
setup command which tells the macros above that we want to use plural forms. Should be used before one of the acronym fetching commands.

\acro_indefinite:
setup command which tells the macros above that we want to add the inde nite article. Should be used before one of the acronym fetching commands.

\acro_cite:
setup command which tells the macros above that we want to add the citation in any case independent of the option cite. Should be used before one of the acronym fetching commands.

\acro_no_cite:
setup command which tells the macros above that we want to have no citation independent of the option cite. Should be used before one of the acronym fetching commands.

\acro_index:
setup command which tells the macros above that we want to add an index entry in any case independent of the option index. Should be used before one of the acronym fetching commands.

Introduced in version . b

\acro_reset_specials:

This macro is called implicitly by \NewAcroCommand and \NewPseudoAcroCommand. If you plan

to de ne an

command by yourself using \NewDocumentCommand this should be the rst

macro after \acro_begin:. It ensures that in nested acronyms the inner acronyms don’t inherit

inde nite articles, uppercasing, endings. . .

Additional macros for further uses
\acro_begin:
When an acronym macro is de ned “by hand”, i. e., not using \NewAcroCommand then this must be the rst macro in the code. Must have a matching \acro_end:.
\acro_end:
When an acronym macro is de ned “by hand”, i. e., not using \NewAcroCommand then this must be the last macro in the code. Must have a matching \acro_begin:.
\acro_check_and_mark_if:nn { boolean expression } { id } Checks if the acronym with the id id exists and marks it as used when boolean expression evaluates to true. This macro is used inside \NewAcroCommand and friends implicitly.

. De ning Own Acronym Macros

\acro_check_acronym:nn { id } {true|false} Checks if the acronym with the id id exists and marks it as used if true or doesn’t. This macro is used inside \acro_check_and_mark_if:nn.

\acro_use_acronym:n {true|false}
Tell \acro_use:n and similar commands wether to mark the acronym as used or not. This macro is used inside \acro_check_acronym:nn. If this macro is used explicitly it should be used before \acro_use:n (or a similar command) otherwise it has no e ect. An acronym marked as used cannot be unmarked.

\acro_mark_as_used:n { id } Explicitly use the acronym with the id id . This is the expl macro applied to all entries in \acuse.

∗ \acro_if_acronym_used:nTF { id } { true } { false } The code-level version of \acifused. This macro is expandable.

\acro_for_all_acronyms_do:n { code } Loops over all acronyms known when the macro is used. Inside of code you can refer to the id id of an acronym with #1.

\acro_barrier:
The code-level version of \acbarrier.

Introduced in version .
Introduced in version .
Introduced in version .
Introduced in version .

\acro_switch_off:
The expl version of \acswitchoff.
\acro_switch_on:
The expl version of \acswitchon.
\acro_add_action:n { code } Adds code to \acro_get:n. Inside of code you can refer to the id of the acronym with #1.
\acro_get_property:nnTF { id } { property } { true } { false } Fetches the property property of the acronym id and stores it in a tokenlist variable \l__acro_ property _tl where all dashes in the property names are replaced with underscores. true is placed in the input stream if the property had been set, false otherwise.

Introduced in version .
Introduced in version .

\acro_get_property:nn{ id } { property } Like \acro_get_property:nnTF, but without the true and false arguments.
\acro_if_property:nnTF { id } { property } { true } { false } Checks if the property property of the acronym id is set and places true is in the input stream if yes and false otherwise.

. De ning Own Acronym Macros

Examples The usage of above macros is best explained with a few examples. The following

de nition is done by

:

\NewAcroCommand \ac { \acro_use:n {#1} }

An equivalent de nition for \ac would be
\NewDocumentCommand \ac {sm} { \acro_begin: \acro_reset_specials: \acro_check_and_mark_if:nn {#1} {#2} \acro_use:n {#2} \acro_end: }

which should explain what the actual framework is which \NewAcroCommand adds.

Other de nitions by

are for example the following ones:

\NewAcroCommand \Ac
{ \acro_first_upper: \acro_use:n {#1}
}
\NewAcroCommand \iac
{ \acro_indefinite: \acro_use:n {#1}
}
\NewAcroCommand \acp
{ \acro_plural: \acro_use:n {#1}
}
\NewAcroCommand \Acp
{ \acro_plural: \acro_first_upper: \acro_use:n {#1}

. About Plural Forms, Possessive Forms and Similar Constructs – the Concept of Endings
} \NewAcroCommand \Aclp
{ \acro_plural: \acro_first_upper: \acro_long:n {#1}
}

. About Plural Forms, Possessive Forms and Similar Constructs – the Concept of Endings

has a concept of endings. All of

’s plural options are de ned by saying

\ProvideAcroEnding {plural} {s} {s}

The command’s syntax and what it does is as follows:
\ProvideAcroEnding{ name }{ short default }{ long default } This macro de nes the options • name -ending, •short- name -ending, •alt- name -ending, •long- name -ending and •foreign- name -ending. It also de nes the acronym properties •short- name , •short- name -form, •alt- name , •alt- name -form, •long- name , •long- name -form, •foreign- name and •foreign- name -form.

. About Plural Forms, Possessive Forms and Similar Constructs – the Concept of Endings

Changed in version . b

Additionally it de nes a setup macro as described in section on page , \acro_ name :. If name contains a - (dash) it is replaced by _ before \acro_ name : is built. So if you choose my-name the corresponding macro is named \acro_my_name:. If you use any other non-letters you are on your own. If you use the command with the same name a second time the command only resets the defaults.
Note that you must use \ProvideAcroEnding before any acronym de nition!
This could be used together with the macros described in section on page for adding support for possessive forms:

\ExplSyntaxOn % this now only works because I've used the same already in the preamble so % it does nothing here: \ProvideAcroEnding {possessive} {'s} {'s}
\ProvideAcroCommand \acg { \acro_possessive: \acro_use:n {#1} }
\ExplSyntaxOff The \acg{cd} booklet says\ldots
The cd booklet says. . .

Please note that di erent endings are cumulative which you probably want to avoid! Imagine a macro
\NewAcroCommand \acgp { \acro_possessive: \acro_plural: \acro_use:n {#1} }

This would give “cds’s” instead of “cds’”. To solve this you might want to consider

. More on Customization
\ProvideAcroEnding {possessive-singular} {'s} {'s} \ProvideAcroEnding {possessive-plural} {s'} {s'}

. More on Customization

. . Background Information

Several of

’s objects are customized using templates. For each of these objects it is possible

to de ne own templates.12 Possibly more interesting: it is easily possible to de ne further

instances of an object using a certain template. How this works is explained in the following

sections. However, the basics are always the same. There is a command

\DeclareAcro object type Style{ name }{ template }{ options } which allows to de ne a new style (i. e., instance) for the object object type using the template { template }.

. . Lists
. . . Own List Style
The di erent existing list styles are all built from four di erent templates, list, list-of, table and extra-table. Those templates are de ned with the help of the xtemplate package (from [L P]). Each of these templates has a few options which are described in table on the following page. New list styles now are de ned via the following macro:

\DeclareAcroListStyle{ name }{ template }{ options }

Declares a new

list style name . name will be the value which can be chosen in the

option list-style. template is the name of the template to be used by the style. Available

templates are listed in table . options are the option settings for the corresponding template.

For de ning new styles you need some information on what the di erent templates and options do:
• The option list of the list template sets the list environment. This must be a classic LATEX list where items are listed with \item. In those lists short entries will always be fed as optional argument to \item: \item[ short ] long extra page
• The template list-of simulates a table of contents or a list of gures. This can be chosen by setting the option style to either toc or lof.

. This requires some knowledge of xtemplate and expl . Plans are to provide a documented interface for users of in the future.

. More on Customization

T

: Available List Templates and Their Options

Template Option

Option Type Default

list

list foreign-sep reverse before after

tokenlist tokenlist boolean tokenlist tokenlist

description \space false

list-of

style foreign-sep reverse before after

tokenlist tokenlist boolean tokenlist tokenlist

toc \space false

table

table table-spec foreign-sep reverse before after

tokenlist tokenlist tokenlist boolean tokenlist tokenlist

tabular lp{.7\linewidth} \space false

extra-table

table table-spec foreign-sep reverse before after

tokenlist tokenlist tokenlist boolean tokenlist tokenlist

tabular llll \space false

. More on Customization
• The template table typesets the list in a table with two columns: short & long extra page \tabularnewline
• The template extra-table typesets the list in a table with four columns: short & long & extra & page \tabularnewline
• The option foreign-sep is the code inserted between long form and foreign entry (if a foreign entry is present).
• The options before and after are inserted directly before and after the complete list. • The option reverse switches the place of long with extra . • The option table-spec sets the column types for the table templates. It must correspond
to the number of columns the corresponding template uses. As an example let’s de ne a style longtabu which uses the corresponding table environment from the package tabu [Che ]:
\usepackage{tabu,longtable} \DeclareAcroListStyle{longtabu}{table}{
table = longtabu , table-spec = @{}>{\bfseries}lX@{} } \acsetup{list-style=longtabu}
As another example let’s de ne a new list with the help of the enumitem package [Bez ]:
% preamble: % \usepackage{enumitem} \newlist{acronyms}{description}{1} \newcommand*\addcolon[1]{#1:} \setlist[acronyms]{
labelwidth = 3em, leftmargin = 3.5em, noitemsep, itemindent = 0pt, font=\addcolon} \DeclareAcroListStyle{mystyle}{list}{ list = acronyms } \acsetup{ list-style = mystyle }
This would look as follows:

. More on Customization

Acronyms

cd: CTAN: ECU: id: JPEG: LA: LPPL: MP: nato: NY: PDF: SW: ST: UFO:

Compact Disc Comprehensive TEX Archive Network Steuergerät (Electronic Control Unit) identi cation string Joint Photographic Experts Group Los Angeles LATEX Project Public License Member of Parliament North Atlantic Treaty Organization. deutsch: Organisation des Nordatlantikvertrags New York Portable Document Format Sammelwerk Some Test unidenti ed ying object

. . . Own List Heading Command
With the option list-heading you can choose which command prints the heading of the list. If you need a di erent choice than what’s already provided you can use the following command to de ne a new option:
\DeclareAcroListHeading{ name }{ control sequence } De nes a new value name for the option list-heading. control sequence must be a control sequence which takes one mandatory argument.
As an example here is how the value section is de ned:

\DeclareAcroListHeading{section}{\section}

. . First Styles
The rst styles de ne how an acronym is typeset when it is used for the rst time. It is set with the option first-style. Legal values for this option are de ned with the following command:

\DeclareAcroFirstStyle{ name }{ template }{ options }

Declares a new

rst style name . name will be the value which can be chosen in the

option first-style. template is the name of the template to be used by the style. Available

templates are listed in table . options are the option settings for the corresponding template.

Here are two examples of the already available styles and how they are de ned:

. More on Customization

\DeclareAcroFirstStyle{short}{inline}{

only-short = true ,

brackets = false

}

\DeclareAcroFirstStyle{sidenote-reversed}{note}{

note-command = \sidenote{#1} ,

reversed

= true

}

T

: Available First Style Templates and Their Options

Template Option

Option Type Default

inline

brackets brackets-type only-short only-long reversed between foreign-sep

boolean tokenlist boolean boolean boolean tokenlist tokenlist

true () false false false
,~

note

use-note note-command reversed foreign-sep

boolean function boolean tokenlist

true \footnote{#1} false ,~

. . Extra Styles

The extra styles de ne how the extra information of an acronym is typeset in the list. It is set with the option extra-style. Legal values for this option are de ned with the following command:

\DeclareAcroExtraStyle{ name }{ template }{ options }

Declares a new

extra style name . name will be the value which can be chosen in the

option extra-style. template is the name of the template to be used by the style. Available

templates are listed in table . options are the option settings for the corresponding template.

Here are two examples of the already available styles and how they are de ned:

\DeclareAcroExtraStyle{default}{inline}{

brackets

= false ,

. More on Customization

T

: Available Extra Style Templates and Their Options

Template Option

Option Type Default

inline

punct punct-symbol brackets brackets-type

boolean tokenlist boolean tokenlist

true , true ()

punct

= true ,

punct-symbol = .

}

\DeclareAcroExtraStyle{paren}{inline}{

brackets

= true ,

punct

= true ,

punct-symbol =

}

. . Page Number Styles
The page number styles de ne how the page numbers where acronyms have been used are typeset in the list. It is set with the option page-style. Legal values for this option are de ned with the following command:

\DeclareAcroPageStyle{ name }{ template }{ options }

Declares a new

extra style name . name will be the value which can be chosen in the

option page-style. template is the name of the template to be used by the style. Available

templates are listed in table . options are the option settings for the corresponding template.

Here are two examples of the already available styles and how they are de ned:

\DeclareAcroPageStyle{default}{inline}{ punct = true , punct-symbol = .
} \DeclareAcroPageStyle{paren}{inline}{
brackets=true , punct-symbol = ~ }

A. All Acronyms Used in this Documentation

Introduced in version .

. . Configuration Files

If you repeatedly have the same setup and de nitions for

in your preamble 13 you might

want to place those in a con guration le. If

nds a le named acro.cfg present it inputs

it at the end of the package. The only thing to be aware of is that this le is input like a package

which means that @ is treated as a letter (category code ).

A. All Acronyms Used in this Documentation

cd Compact Disc, pp. f.,

CTAN Comprehensive TEX Archive Network, pp. , ECU Steuergerät (Electronic Control Unit), p.

id identi cation string, pp. , f., f., f., .

JPEG Joint Photographic Experts Group, p.

LA Los Angeles, p.

LPPL LATEX Project Public License, pp. , MP Member of Parliament, p.

nato North Atlantic Treaty Organization, deutsch: Organisation des Nordatlantikvertrags, pp. ,

NY New York, pp. , , ., f.

PDF Portable Document Format, pp. , .

SW Sammelwerk, p.

. For example de ning new endings,

commands, list styles, . . .

T

: Available Page Number Style Templates and Their Options

Template Option

Option Type Default

inline

display punct punct-symbol brackets brackets-type space

boolean boolean tokenlist boolean tokenlist skip

true false , false () .333333em plus .166666em minus .111111em

B. References

ST Some Test, p. UFO unidenti ed ying object, p.

B. References

[Bez ] Javier B . enumitem. version . . , Sept. , (or newer). : http://mirror.ctan.org/macros/latex/contrib/enumitem/.

[Bra ]

Johannes B

, current maintainer: Javier B .

babel. version . q, Feb. , (or newer).

: http://mirror.ctan.org/macros/latex/required/babel/.

[Car ] David C

. longtable. version . , Oct. , (or newer).

: http://mirror.ctan.org/macros/latex/required/tools/.

[Cha ] François C

, current maintainer: Arthur R

.

polyglossia. version . . , Aug. , (or newer).

: http://mirror.ctan.org/macros/latex/contrib/polyglossia/.

[Che ] Florent C

. tabu. version . , Feb. , (or newer).

: http://mirror.ctan.org/macros/latex/contrib/tabu/.

[Kle ] Josef K

. pdfcomment. version . a, Sept. , (or newer).

: http://mirror.ctan.org/macros/latex/contrib/pdfcomment/.

[L P]

T LATEX P

T.

l packages. version SVN , Jan. ,

(or newer).

: http://mirror.ctan.org/macros/latex/contrib/l3packages/.

[Nie ] Clemens N

. translations. version . e, Nov. , (or newer).

: http://mirror.ctan.org/macros/latex/contrib/translations/.

[Tal ] Nicola L.C. T

. mfirstuc. version . , Dec. , (or newer).

: http://mirror.ctan.org/macros/latex/contrib/glossaries/.

[Wik ] W

. New York City. .

: http://en.wikipedia.org/wiki/New_York_City (visited on / / ).

C. Index

A \Ac . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , , \ac . . . . . . . . . . , f., , f., f., , f., \aca . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . f., \acap . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \acbarrier . . . . . . . . . . . . . . . . . . . . . . . . . , accsupp . . . . . . . . . . . . . . . . . . . . . . . . . . . , , accsupp (package) . . . . . . . . . . . . . . . . . , , \acdot . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . f. \Acf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \acf . . . . . . . . . . . . . . . . . . . . . . . . . , f., , f. \acfirstupper . . . . . . . . . . . . . . . . . . . . . . , \acflike . . . . . . . . . . . . . . . . . . . . . . , , , \Acfp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \acfp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \acfplike . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \acg . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \aciffirst . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \aciftrailing . . . . . . . . . . . . . . . . . . . . . . . . . \acifused . . . . . . . . . . . . . . . . . . . . . . . . . . . , \Acl . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \acl . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . f., \Aclp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , \aclp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , \Acp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , \acp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . f., \acpdfstring . . . . . . . . . . . . . . . . . . . . . . . . . . \acpdfstringplural . . . . . . . . . . . . . . . . . . . . \acreset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . f. \acresetall . . . . . . . . . . . . . . . . . . . . . . . . , \acroenparen . . . . . . . . . . . . . . . . . . . . . . . , \AcroRegisterTrailing . . . . . . . . . . . . . . . f. \acs . . . . . . . . . . . . . . . . . . . . . . . . . . . f., , f. \acsetup . . . . . . . . . . . . . . . , , , , , \Acsingle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \acsingle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \acsp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , , \acspace . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . f. \acswitchoff . . . . . . . . . . . . . . . . . . . . . . . , \acswitchon . . . . . . . . . . . . . . . . . . . . . . . . , activate-trailing-tokens . . . . . . . . . . . . .

\acuse . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , \acuseall . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . alt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , , alt-indefinite . . . . . . . . . . . . . . . . . . . . . . , alt-plural . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . alt-plural-form . . . . . . . . . . . . . . . . . . . . . . . .

B

babel (package) . . . . . . . . . . . . . . . . . . . . , ,

B , Javier . . . . . . . . . . . . . . . . . . , , ,

B

, Johannes . . . . . . . . . . . . . . . . , ,

C

C

, David . . . . . . . . . . . . . . . . . . . . . . .

................................ , ,

C

, François . . . . . . . . . . . . . . . . . ,

C

, Florent . . . . . . . . . . . . . . . . . . . . . .

cite . . . . . . . . . . . . . . . . . . . . . . . . . . . . , , ,

cite-cmd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

cite-connect . . . . . . . . . . . . . . . . . . . . . . . . . .

class . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ,

................................ ,

D deactivate-trailing-tokens . . . . . . . . . . . \DeclareAcroCommand . . . . . . . . . . . . . . . . . . . \DeclareAcroExtraStyle . . . . . . . . . . . . . . f. \DeclareAcroFirstStyle . . . . . . . . . . . . . . f. \DeclareAcroListHeading . . . . . . . . . . . . . . \DeclareAcroListStyle . . . . . . . . . . . . . , \DeclareAcronym . , ., f., , , f., ,

\DeclareAcroPageStyle . . . . . . . . . . . . . . . .

E ECU . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . f. enumitem (package) . . . . . . . . . . . . . . . . . . . . . exclude-classes . . . . . . . . . . . . . . . . . . . . . . . expl (package) . . . . . . . . . . . . . . . . . . . . . . . . . . extra . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , extra-format . . . . . . . . . . . . . . . . . . . . . . . . . . extra-style . . . . . . . . . . . . . . . . . . . . . . . . ,

Index

F first-long-format . . . . . . . . . . . . . . . . . . . , first-style . . . . . . . . . . . . . . . . . . . , , , following-page . . . . . . . . . . . . . . . . . . . f., following-pages . . . . . . . . . . . . . . . . . . . . . . f. following-pages* . . . . . . . . . . . . . . . . . . . . . . foreign . . . . . . . . . . . . . . . . . . . . . . . . . , f., foreign-format . . . . . . . . . . . . . . . . . . . . . . . . foreign-lang . . . . . . . . . . . . . . . . . . . . . . . . , foreign-plural . . . . . . . . . . . . . . . . . . . . . . . . . format . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . format-include-endings . . . . . . . . . . . . . . .

G group-citation . . . . . . . . . . . . . . . . . . . . . . . f. group-cite-cmd . . . . . . . . . . . . . . . . . . . . . . . . group-cite-connect . . . . . . . . . . . . . . . . . . . .

H heading . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . hyperref . . . . . . . . . . . . . . . . . . . . . . . . . . . . , hyperref (package) . . . . . . . . . . . . . . . . , , f.

I \Iac . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \iac . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \iacl . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \iacs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . ., , , f., . include-classes . . . . . . . . . . . . . . . . . . . . . . . index . . . . . . . . . . . . . . . . . . . . . . . . . . , , , index-cmd . . . . . . . . . . . . . . . . . . . . . . . . . . . . , index-sort . . . . . . . . . . . . . . . . . . . . . . . . . . . ,

J JPEG . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

K

K

, Josef . . . . . . . . . . . . . . . . . . . . . . . . . .

L l experimental (package) . . . . . . . . . . . . . . . . l keys e (package) . . . . . . . . . . . . . . . . . . . . . . . l packages (bundle) . . . . . . . . . . . . . . . . . . . . . l sort (package) . . . . . . . . . . . . . . . . . . . . . . . . .

LA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . label . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , label-prefix . . . . . . . . . . . . . . . . . . . . . . . . . . list . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . list-caps . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . list-foreign-format . . . . . . . . . . . . . . . . . . . list-heading . . . . . . . . . . . . . . . . . . . . . . . , list-long-format . . . . . . . . . . . . . . . . . . . . . . list-name . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . list-short-format . . . . . . . . . . . . . . . . . . . . . list-short-width . . . . . . . . . . . . . . . . . . . . . . list-style . . . . . . . . . . . . . . . . . . . . . . . . . , local-to-barriers . . . . . . . . . . . . . . . . . . , log . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . long . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , , long-format . . . . . . . . . . . . . . . . . . . . . . . . . , long-indefinite . . . . . . . . . . . . . . . . . . . . . , long-plural . . . . . . . . . . . . . . . . . . . . . . . . . . , long-plural-form . . . . . . . . . . . . . . . . . . . . . , long-post . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . long-pre . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . longtable (package) . . . . . . . . . . . . . . . . . . . . . .
....................................

M macros . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . \makefirstuc . . . . . . . . . . . . . . . . . . . . . . . . . . mark-as-used . . . . . . . . . . . . . . . . . . . . . . . . . . messages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . mfirstuc (package) . . . . . . . . . . . . . . . . . . . , MP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

N

name . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

............................... ,

New York City . . . . . . . . . . . . . . . . . . , , ,

\NewAcroCommand . . . . . . . . . . . . . . . . f., .

\NewPseudoAcroCommand . . . . . . . . . . . . . . . .

next-page . . . . . . . . . . . . . . . . . . . . . . . . . . . . f.

next-pages . . . . . . . . . . . . . . . . . . . . . . . . f.,

N

, Clemens . . . . . . . . . . . . . . .

NY . . . . . . . . . . . . . . . . . . . . . . . , , ., ,

O only-used . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

Index

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . single-form . . . . . . . . . . . . . . . . . . . . . . . . ,

single-format . . . . . . . . . . . . . . . . . . . . . . . ,

P page-name . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . page-style . . . . . . . . . . . . . . . . . . . . . . , ,

sort . . . . . . . . . . . . . . . . . . . . . . . . . , f., f., strict . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . SW . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

pages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ,

pages-name . . . . . . . . . . . . . . . . . . . . . . . . . . . . . T

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , . tabu (package) . . . . . . . . . . . . . . . . . . . . . . . . . .

pdfcomment (package) . . . . . . . . . . . . . . f., T

, Nicola L.C. . . . . . . . . . . . . . . . . . . . .

pdfstring . . . . . . . . . . . . . . . . . . . . . . . . . . . . , ST . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

plural-ending . . . . . . . . . . . . . . . . . . . . . . . . . T LATEX P

T ...........

polyglossia (package) . . . . . . . . . . . . . . , , tooltip . . . . . . . . . . . . . . . . . . . . . . . . . . . , ,

post . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . tooltip-cmd . . . . . . . . . . . . . . . . . . . . . . , ,

\printacronyms . . . . . . . . . . . . . . . , ., f. translations (package) . . . . . . . . . . . . . . . . . . . .

\ProvideAcroCommand . . . . . . . . . . . . . . . ,

\ProvideAcroEnding . . . . . . . . . . . . . . . . . .

.

U uc-cmd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

R \RenewAcroCommand . . . . . . . . . . . . . . . . . . . . .

UFO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . use-barriers . . . . . . . . . . . . . . . . . . . . . . . . . .

reset-at-barriers . . . . . . . . . . . . . . . . . . . . .

R

, Arthur . . . . . . . . . . . . . . . . ,

W W

................... , , ,

S short . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . , short-format . . . . . . . . . . . . . . . . . . . . . . . . , short-indefinite . . . . . . . . . . . . . . . . . . . . , short-plural . . . . . . . . . . . . . . . . . . . . . . . . . ,

X xparse (package) . . . . . . . . . . . . . . . . . . . . . . , xspace . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . xtemplate (package) . . . . . . . . . . . . . . . . . . . ,

short-plural-form . . . . . . . . . . . . . . . . . . . . . . Z

single . . . . . . . . . . . . . . . . . . . . . . . . , , , f. zref-abspage (package) . . . . . . . . . . . . . . . . . . .

