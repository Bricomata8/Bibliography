  
1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  
17  
18  
19  
20  
21  
22  
23  
24  
25  
26  
27  
28  
29  
30  
31  
32  
33  
34  
35  
36  
37  
38  
39  
40  
41  
42  
43  
44  

  
LoRa  Specification
Copyright  ©  2015  LoRa  Alliance,  Inc.    All  rights  reserved.  

  
NOTICE  OF  USE  AND  DISCLOSURE  
Copyright  ©  LoRa  Alliance,  Inc.  (2015).  All  Rights  Reserved.    
  
The  information  within  this  document  is  the  property  of  the  LoRa  Alliance  (“The  Alliance”)  and  its  use  and  
disclosure  are  subject  to  LoRa  Alliance  Corporate  Bylaws,  Intellectual  Property  Rights  (IPR)  Policy  and  
Membership  Agreements.  
  
Elements  of  LoRa  Alliance  specifications  may  be  subject  to  third  party  intellectual  property  rights,  including  
without  limitation,  patent,  copyright  or  trademark  rights  (such  a  third  party  may  or  may  not  be  a  member  of  LoRa  
Alliance).  The  Alliance  is  not  responsible  and  shall  not  be  held  responsible  in  any  manner  for  identifying  or  failing  
to  identify  any  or  all  such  third  party  intellectual  property  rights.  
  
This  document  and  the  information  contained  herein  are  provided  on  an  “AS  IS”  basis  and  THE  ALLIANCE  
DISCLAIMS  ALL  WARRANTIES  EXPRESS  OR  IMPLIED,  INCLUDING  BUT  NOTLIMITED  TO  (A)  ANY  
WARRANTY  THAT  THE  USE  OF  THE  INFORMATION  HEREINWILL  NOT  INFRINGE  ANY  RIGHTS  OF  THIRD  
PARTIES  (INCLUDING  WITHOUTLIMITATION  ANY  INTELLECTUAL  PROPERTY  RIGHTS  INCLUDING  
PATENT,  COPYRIGHT  OR  TRADEMARK  RIGHTS)  OR  (B)  ANY  IMPLIED  WARRANTIES  OF  
MERCHANTABILITY,  FITNESS  FOR  A  PARTICULAR  PURPOSE,TITLE  OR  NONINFRINGEMENT.  
  
IN  NO  EVENT  WILL  THE  ALLIANCE  BE  LIABLE  FOR  ANY  LOSS  OF  PROFITS,  LOSS  OF  BUSINESS,  LOSS  
OF  USE  OF  DATA,  INTERRUPTION  OFBUSINESS,  OR  FOR  ANY  OTHER  DIRECT,  INDIRECT,  SPECIAL  OR  
EXEMPLARY,  INCIDENTIAL,  PUNITIVE  OR  CONSEQUENTIAL  DAMAGES  OF  ANY  KIND,  IN  CONTRACT  OR  
IN  TORT,  IN  CONNECTION  WITH  THIS  DOCUMENT  OR  THE  INFORMATION  CONTAINED  HEREIN,  EVEN  IF  
ADVISED  OF  THE  POSSIBILITY  OF  SUCH  LOSS  OR  DAMAGE.    
  
  
The  above  notice  and  this  paragraph  must  be  included  on  all  copies  of  this  document  that  are  made.  
  
LoRa  Alliance,  Inc.  
2400  Camino  Ramon,  Suite  375  
San  Ramon,  CA  94583  
Note:  All  Company,  brand  and  product  names  may  be  trademarks  that  are  the  sole  property  of  their  respective  
owners.  
  
  
  
  
  
  
  

45  

©2015  LoRa™  Alliance  
  

Page  1  of  85  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  
17  

LoRaWAN  Specification  
  

  

  
LoRaWAN™  Specification  
  
Authors:    
N.  Sornin  (Semtech),  M.  Luis  (Semtech),  T.  Eirich  (IBM),  T.  Kramp  (IBM),    
O.Hersent  (Actility)  
  
Version:  V1.0.1  Draft  3  
Date:  2015  Oct  
Status:  Draft  
  
  
  
  
  
  

©2015  LoRa™  Alliance  

Page  2  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  
17  
18  
19  
20  
21  
22  
23  
24  
25  
26  
27  
28  
29  
30  
31  
32  
33  
34  
35  
36  
37  
38  
39  
40  
41  
42  
43  
44  
45  
46  
47  
48  
49  
50  

LoRaWAN  Specification  
  

Contents  
Introduction  ....................................................................................................................  7	  
1.1	   LoRaWAN  Classes  .....................................................................................................  7	  
1.2	   Conventions  ...............................................................................................................  8	  
2	  
Introduction  on  LoRaWAN  options  .................................................................................  9	  
2.1	   LoRaWAN  Classes  .....................................................................................................  9	  
2.2	   Specification  scope  ..................................................................................................  10	  
Class  A  –  All  end-­devices  ......................................................................................................  11	  
3	  
Physical  Message  Formats  ..........................................................................................  12	  
3.1	   Uplink  Messages  ......................................................................................................  12	  
3.2	   Downlink  Messages  .................................................................................................  12	  
3.3	   Receive  Windows  .....................................................................................................  12	  
3.3.1	   First  receive  window  channel,  data  rate,  and  start  .............................................  13	  
3.3.2	   Second  receive  window  channel,  data  rate,  and  start  ........................................  13	  
3.3.3	   Receive  window  duration  ...................................................................................  13	  
3.3.4	   Receiver  activity  during  the  receive  windows  .....................................................  13	  
3.3.5	   Network  sending  a  message  to  an  end-­device  ..................................................  13	  
3.3.6	   Important  notice  on  receive  windows  .................................................................  14	  
3.3.7	   Receiving  or  transmitting  other  protocols  ...........................................................  14	  
4	  
MAC  Message  Formats  ...............................................................................................  15	  
4.1	   MAC  Layer  (PHYPayload)  ........................................................................................  15	  
4.2	   MAC  Header  (MHDR  field)  .......................................................................................  15	  
4.2.1	   Message  type  (MType  bit  field)  ..........................................................................  16	  
4.2.2	   Major  version  of  data  message  (Major  bit  field)  .................................................  16	  
4.3	   MAC  Payload  of  Data  Messages  (MACPayload)  .....................................................  17	  
4.3.1	   Frame  header  (FHDR)  .......................................................................................  17	  
4.3.2	   Port  field  (FPort)  .................................................................................................  20	  
4.3.3	   MAC  Frame  Payload  Encryption  (FRMPayload)  ................................................  20	  
4.4	   Message  Integrity  Code  (MIC)  .................................................................................  21	  
5	  
MAC  Commands  ..........................................................................................................  22	  
5.1	   Link  Check  commands  (LinkCheckReq,  LinkCheckAns)  .........................................  23	  
5.2	   Link  ADR  commands  (LinkADRReq,  LinkADRAns)  .................................................  23	  
5.3	   End-­Device  Transmit  Duty  Cycle  (DutyCycleReq,  DutyCycleAns)  ..........................  25	  
5.4	   Receive  Windows  Parameters  (RXParamSetupReq,  RXParamSetupAns)  .............  26	  
5.5	   End-­Device  Status  (DevStatusReq,  DevStatusAns)  ................................................  27	  
5.6	   Creation  /  Modification  of  a  Channel  (NewChannelReq,  NewChannelAns)  .............  27	  
5.7	   Setting  delay  between  TX  and  RX  (RXTimingSetupReq,  RXTimingSetupAns)  .......  28	  
6	  
End-­Device  Activation  ..................................................................................................  30	  
6.1	   Data  Stored  in  the  End-­device  after  Activation  .........................................................  30	  
6.1.1	   End-­device  address  (DevAddr)  ..........................................................................  30	  
6.1.2	   Application  identifier  (AppEUI)  ...........................................................................  30	  
6.1.3	   Network  session  key  (NwkSKey)  .......................................................................  30	  
6.1.4	   Application  session  key  (AppSKey)  ....................................................................  30	  
6.2	   Over-­the-­Air  Activation  .............................................................................................  30	  
6.2.1	   End-­device  identifier  (DevEUI)  ...........................................................................  31	  
6.2.2	   Application  key  (AppKey)  ...................................................................................  31	  
6.2.3	   Join  procedure  ....................................................................................................  31	  
6.2.4	   Join-­request  message  ........................................................................................  31	  
6.2.5	   Join-­accept  message  .........................................................................................  32	  
6.3	   Activation  by  Personalization  ...................................................................................  33	  

1	  

©2015  LoRa™  Alliance  

Page  3  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  
17  
18  
19  
20  
21  
22  
23  
24  
25  
26  
27  
28  
29  
30  
31  
32  
33  
34  
35  
36  
37  
38  
39  
40  
41  
42  
43  
44  
45  
46  
47  
48  
49  
50  
51  
52  
53  

  
Physical  Layer  ..............................................................................................................  35	  
7.1	   EU  863-­870MHz  ISM  Band  ......................................................................................  35	  
7.1.1	   EU863-­870  Preamble  Format  ............................................................................  35	  
7.1.2	   EU863-­870  ISM  Band  channel  frequencies  .......................................................  35	  
7.1.3	   EU863-­870  Data  Rate  and  End-­device  Output  Power  encoding  .......................  36	  
7.1.4	   EU863-­870  JoinAccept  CFList  ...........................................................................  37	  
7.1.5	   EU863-­870  LinkAdrReq  command  .....................................................................  37	  
7.1.6	   EU863-­870  Maximum  payload  size  ....................................................................  38	  
7.1.7	   EU863-­870  Receive  windows  ............................................................................  38	  
7.1.8	   EU863-­870  Default  Settings  ...............................................................................  39	  
7.2	   US  902-­928MHz  ISM  Band  ......................................................................................  40	  
7.2.1	   US902-­928  Preamble  Format  ............................................................................  40	  
7.2.2	   US902-­928  Channel  Frequencies  ......................................................................  40	  
7.2.3	   US902-­928  Data  Rate  and  End-­device  Output  Power  encoding  .......................  41	  
7.2.4	   US902-­928  JoinResp  CFList  ..............................................................................  41	  
7.2.5	   US902-­928  LinkAdrReq  command  .....................................................................  41	  
7.2.6	   US902-­928  Maximum  payload  size  ....................................................................  42	  
7.2.7	   US902-­928  Receive  windows  ............................................................................  44	  
7.2.8	   US902-­928  Default  Settings  ...............................................................................  44	  
7.3	   China  779-­787MHz  ISM  Band  ..................................................................................  45	  
7.3.1	   CN779-­787  Preamble  Format  ............................................................................  45	  
7.3.2	   CN779-­787  ISM  Band  channel  frequencies  .......................................................  45	  
7.3.3	   CN779-­787    Data  Rate  and  End-­device  Output  Power  encoding  ......................  45	  
7.3.4	   CN779-­787    JoinAccept  CFList  ..........................................................................  46	  
7.3.5	   CN779-­787    LinkAdrReq  command  ...................................................................  47	  
7.3.6	   CN779-­787    Maximum  payload  size  ..................................................................  47	  
7.3.7	   CN779-­787  Receive  windows  ............................................................................  48	  
7.3.8	   CN779-­787    Default  Settings  ..............................................................................  48	  
7.4	   EU  433MHz  ISM  Band  .............................................................................................  49	  
7.4.1	   EU433  Preamble  Format  ....................................................................................  49	  
7.4.2	   EU433  ISM  Band  channel  frequencies  ..............................................................  49	  
7.4.3	   EU433  Data  Rate  and  End-­device  Output  Power  encoding  ...............................  49	  
7.4.4	   EU433  JoinAccept  CFList  ..................................................................................  50	  
7.4.5	   EU433  LinkAdrReq  command  ............................................................................  51	  
7.4.6	   EU433  Maximum  payload  size  ...........................................................................  51	  
7.4.7	   EU433  Receive  windows  ....................................................................................  52	  
7.4.8	   EU433  Default  Settings  ......................................................................................  52	  
Class  B  –  Beacon  ..................................................................................................................  54	  
8	  
Introduction  to  Class  B  .................................................................................................  54	  
9	  
Principle  of  synchronous  network  initiated  downlink  (Class-­B  option)  .........................  56	  
10	   Uplink  frame  in  Class  B  mode  ......................................................................................  58	  
11	   Downlink  Ping  frame  format  (Class  B  option)  ..............................................................  59	  
11.1	   Physical  frame  format  ...............................................................................................  59	  
11.2	   Unicast  &  Multicast  MAC  messages  ........................................................................  59	  
11.2.1	  Unicast  MAC  message  format  ............................................................................  59	  
11.2.2	  Multicast  MAC  message  format  .........................................................................  59	  
12	   Beacon  acquisition  and  tracking  ..................................................................................  60	  
12.1	   Minimal  beacon-­less  operation  time  .........................................................................  60	  
12.2	   Extension  of  beacon-­less  operation  upon  reception  ................................................  60	  
12.3	   Minimizing  timing  drift  ...............................................................................................  60	  
13	   Class  B  Downlink  slot  timing  ........................................................................................  61	  
13.1	   Definitions  .................................................................................................................  61	  
13.2	   Slot  randomization  ....................................................................................................  62	  

7	  

©2015  LoRa™  Alliance  

Page  4  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  
17  
18  
19  
20  
21  
22  
23  
24  
25  
26  
27  
28  
29  
30  
31  
32  
33  
34  
35  
36  
37  
38  
39  
40  

41  
42  
43  
44  
45  
46  
47  
48  
49  
50  

  
14	   Class  B  MAC  commands  .............................................................................................  63	  
14.1	   PingSlotInfoReq  .......................................................................................................  63	  
14.2	   BeaconFreqReq  .......................................................................................................  64	  
14.3	   PingSlotChannelReq  ................................................................................................  64	  
14.4	   BeaconTimingReq  ....................................................................................................  65	  
14.5	   BeaconTimingAns  ....................................................................................................  66	  
15	   Beaconing  (Class  B  option)  ..........................................................................................  67	  
15.1	   Beacon  physical  layer  ..............................................................................................  67	  
15.1.1	  EU  863-­870MHz  ISM  Band  ................................................................................  67	  
15.1.2	  US  902-­928MHz  ISM  Band  ................................................................................  67	  
15.2	   Beacon  frame  content  ..............................................................................................  68	  
15.3	   Beacon  GwSpecific  field  format  ...............................................................................  69	  
15.3.1	  Gateway  GPS  coordinate:InfoDesc  =  0,  1  or  2  ..................................................  70	  
15.4	   Beaconing  precise  timing  .........................................................................................  70	  
15.5	   Network  downlink  route  update  requirements  ..........................................................  70	  
16	   Class  B  unicast  &  multicast  downlink  channel  frequencies  ..........................................  72	  
16.1	   EU  863-­870MHz  ISM  Band  ......................................................................................  72	  
16.2	   US  902-­928MHz  ISM  Band  ......................................................................................  72	  
Class  C  –  Continuously  listening  ...........................................................................................  73	  
17	   Class  C:  Continuously  listening  end-­device  .................................................................  74	  
17.1	   Second  receive  window  duration  for  Class  C  ...........................................................  74	  
17.2	   Class  C  Multicast  downlinks  .....................................................................................  74	  
Support  information  ...............................................................................................................  75	  
18	   Examples  and  Application  Information  .........................................................................  76	  
18.1	   Uplink  Timing  Diagram  for  Confirmed  Data  Messages  ............................................  76	  
18.2	   The  third  ACK  frame  in  this  example  also  carries  an  application  payload.  A  
downlink  frame  can  carry  any  combination  of  ACK,  MAC  control  commands  
and  payload.  Downlink  Diagram  for  Confirmed  Data  Messages  ..............................  76	  
18.3	   Downlink  Timing  for  Frame-­Pending  Messages  .......................................................  77	  
18.4	   Data-­Rate  Adaptation  during  Message  Retransmissions  .........................................  78	  
19	   Recommendation  on  contract  to  be  provided  to  the  network  server  by  the  end-­
device  provider  at  the  time  of  provisioning  ............................................................................  80	  
20	   Recommendation  on  finding  the  locally  used  channels  ...............................................  81	  
21	   Revisions  ......................................................................................................................  82	  
21.1	   Revision  1.0  ..............................................................................................................  82	  
22	   Glossary  .......................................................................................................................  83	  
23	   Bibliography  .................................................................................................................  84	  
23.1	   References  ...............................................................................................................  84	  
24	   NOTICE  OF  USE  AND  DISCLOSURE  ........................................................................  85	  
  

Tables  
Table  1:  MAC  message  types  ...............................................................................................  16	  
Table  2:  Major  list  ..................................................................................................................  16	  
Table  3:  FPort  list  ..................................................................................................................  20	  
Table  4:  MAC  commands  ......................................................................................................  22	  
Table  5:  Channel  state  table  .................................................................................................  24	  
Table  6:  LinkADRAns  status  bits  signification  .......................................................................  25	  
Table  7:  RX2SetupAns  status  bits  signification  .....................................................................  26	  
Table  8:  Battery  level  decoding  .............................................................................................  27	  
Table  9:  NewChannelAns  status  bits  signification  .................................................................  28	  
©2015  LoRa™  Alliance  

Page  5  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  
17  
18  
19  
20  
21  
22  
23  
24  
25  
26  
27  
28  

  
Table  10:  Del  mapping  table  .................................................................................................  29	  
Table  11:  EU863-­870  synch  words  .......................................................................................  35	  
Table  12:  EU863-­870  default  channels  .................................................................................  35	  
Table  13:  EU863-­870  JoinReq  Channel  List  .........................................................................  36	  
Table  14:  TX  Data  rate  table  .................................................................................................  36	  
Table  15:  TX  power  table  ......................................................................................................  37	  
Table  15:  ChMaskCntl  value  table  ........................................................................................  37	  
Table  16:  EU863-­870  maximum  payload  size  .......................................................................  38	  
Table  17  :  EU863-­870  maximum  payload  size  (not  repeater  compatible)  ............................  38	  
Table  19:  TX  Data  rate  table  .................................................................................................  41	  
Table  20:  TX  power  table  ......................................................................................................  41	  
Table  19:  ChMaskCntl  value  table  ........................................................................................  42	  
Table  20:  US902-­928  maximum  payload  size  (repeater  compatible)  ...................................  42	  
Table  21  :  US902-­928  maximum  payload  size  (not  repeater  compatible)  ............................  43	  
Table  22:  Data  rate  mapping  .................................................................................................  44	  
Table  23:  CN779-­787    synch  words  ......................................................................................  45	  
Table  24:  CN780  JoinReq  Channel  List  ................................................................................  45	  
Table  25:  Data  rate  and  TX  power  table  ...............................................................................  46	  
Table  26:  ChMaskCntl  value  table  ........................................................................................  47	  
Table  27:  CN780  maximum  payload  size  ..............................................................................  47	  
Table  28  :  CN780  maximum  payload  size  (not  repeater  compatible)  ...................................  48	  
Table  29:  EU433  synch  words  ..............................................................................................  49	  
Table  30:  EU433  JoinReq  Channel  List  ................................................................................  49	  
Table  31:  Data  rate  and  TX  power  table  ...............................................................................  50	  
Table  32:  ChMaskCntl  value  table  ........................................................................................  51	  
Table  33:  EU433  maximum  payload  size  ..............................................................................  51	  
Table  34  :  EU433  maximum  payload  size  (not  repeater  compatible)  ....................................  52	  
Table  35:  Beacon  timing  ........................................................................................................  61	  

29  

  

30  
31  
32  
33  
34  
35  
36  
37  
38  
39  
40  
41  
42  
43  
44  
45  
46  
47  
48  
49  
50  

Figures  
Figure  1:  LoRaWAN  Classes  ..................................................................................................  9	  
Figure  2:  Uplink  PHY  structure  ..............................................................................................  12	  
Figure  3:  Downlink  PHY  structure  .........................................................................................  12	  
Figure  4:  End-­device  receive  slot  timing.  ..............................................................................  13	  
Figure  5:  Radio  PHY  structure  (CRC*  is  only  available  on  uplink  messages)  .......................  15	  
Figure  6:  PHY  payload  structure  ...........................................................................................  15	  
Figure  7:  MAC  payload  structure  ...........................................................................................  15	  
Figure  8:  Frame  header  structure  ..........................................................................................  15	  
Figure  9:  LoRa  message  format  elements  ............................................................................  15	  
Figure  10:  US902-­928  channel  frequencies  ..........................................................................  40	  
Figure  11:  Beacon  reception  slot  and  ping  slots  ...................................................................  57	  
Figure  12  :  beacon-­less  temporary  operation  ........................................................................  60	  
Figure  13:  Beacon  timing  ......................................................................................................  61	  
Figure  14:  Class  C  end-­device  receive  slot  timing.  ...............................................................  74	  
Figure  15:  Uplink  timing  diagram  for  confirmed  data  messages  ...........................................  76	  
Figure  16:  Downlink  timing  diagram  for  confirmed  data  messages  .......................................  77	  
Figure  17:  Downlink  timing  diagram  for  frame-­pending  messages,  example  1  .....................  77	  
Figure  18:  Downlink  timing  diagram  for  frame-­pending  messages,  example  2  .....................  78	  
Figure  19:  Downlink  timing  diagram  for  frame-­pending  messages,  example  3  .....................  78	  
  
©2015  LoRa™  Alliance  

Page  6  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  

1   Introduction  

2  
3  

This   document   describes   the   LoRaWAN™   network   protocol   which   is   optimized   for   battery-­
powered  end-­devices  that  may  be  either  mobile  or  mounted  at  a  fixed  location.    

4  
5  
6  
7  
8  
9  

LoRaWAN   networks   typically   are   laid   out   in   a   star-­of-­stars   topology   in   which   gateways1
relay   messages   between   end-devices2 and   a   central   network server   at   the   backend.    
Gateways   are   connected   to   the   network   server   via   standard   IP   connections   while   end-­
devices   use   single-­hop   LoRa™   or   FSK   communication   to   one   or   many   gateways.3      All  
communication   is   generally   bi-­directional,   although   uplink   communication   from   an   end-­
device  to  the  network  server  is  expected  to  be  the  predominant  traffic.  

10  
11  
12  
13  
14  
15  
16  

Communication   between   end-­devices   and   gateways   is   spread   out   on   different   frequency  
channels   and   data rates.   The   selection   of   the   data   rate   is   a   trade-­off   between  
communication   range   and   message   duration,   communications   with   different   data   rates   do  
not  interfere  with  each  other.    LoRa  data  rates  range  from  0.3  kbps  to  50  kbps.    To  maximize  
both   battery   life   of   the   end-­devices   and   overall   network   capacity,   the   LoRa   network  
infrastructure   can   manage   the   data   rate   and   RF   output   for   each   end-­device   individually   by  
means  of  an  adaptive data rate  (ADR)  scheme.  

17  
18  

End-­devices   may   transmit   on   any   channel   available   at   any   time,   using   any   available   data  
rate,  as  long  as  the  following  rules  are  respected:  

19  
20  
21  

•   The   end-­device   changes   channel   in   a   pseudo-­random   fashion   for   every  
transmission.   The   resulting   frequency   diversity   makes   the   system   more   robust   to  
interferences.  

22  
23  

•   The   end-­device   respects   the   maximum   transmit   duty   cycle   relative   to   the   sub-­band  
used  and  local  regulations.  

24  
25  

•   The   end-­device   respects   the   maximum   transmit   duration   (or   dwell   time)   relative   to  
the  sub-­band  used  and  local  regulations.  

26  
27  

Note:   Maximum   transmit   duty-­cycle   and   dwell   time   per   sub-­band   are  
region  specific  and  are  defined  in  the  Chapter7.  

28  

1.1   LoRaWAN  Classes  

29  
30  
31  
32  

All   LoRaWAN   devices   implement   at   least   the   Class   A   functionality   as   described   in   this  
document.   In   addition   they   may   implement   options   named   Class   B,   Class   C   as   also  
described   in   this   document   or   others   to   be   defined.   In   all   cases,   they   must   remain  
compatible  with  Class  A.  

                                                                                                 
1

  Gateways  are  also  known  as  concentrators or base stations.  
  End-­devices  are  also  known  as  motes.  
3
  Support  for  intermediate  elements  –  repeaters  –  is  not  described  in  the  document,  however  payload  
restrictions  for  encapsulation  overhead  are  included  in  this  specification.  A  repeater  is  defined  as  
using  LoRaWAN  as  its  backhaul  mechanism.  

2

©2015  LoRa™  Alliance  

Page  7  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

1.2   Conventions  

2  
3  

MAC   commands   are   written   LinkCheckReq,   bits   and   bit   fields   are   written   FRMPayload,  
constants  are  written  RECEIVE_DELAY1,  variables  are  written  N.  

4  

In  this  document,  

5  

•   The  octet  order  for  all  multi-­octet  fields  is  little  endian  and  

6  

•   EUI  are  8  bytes  multi-­octet  fields  and  are  transmitted  as  little  endian.  

7  

•   By  default,  RFU  bits  are  set  to  zero    

©2015  LoRa™  Alliance  

Page  8  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

2   Introduction  on  LoRaWAN  options  

2  
3  
4  

LoRa™   is   a   wireless   modulation   for   long-­range   low-­power   low-­data-­rate   applications  
developed   by   Semtech.      Devices   implementing   more   than   Class   A   are   generally   named  
“higher  Class  end-­devices”  in  this  document.  

5  

2.1   LoRaWAN  Classes  

6  
7  

A   LoRa   network   distinguishes   between   a   basic   LoRaWAN   (named   Class   A)   and   optional  
features  (Class  B,  Class  C  …):  

Application

Application

LoRa MAC

Class	  A	  

MAC

Class	  B	  

(baseline)

Class	  C	  

(beacon)

(Continuous)

LoRa Modulation
EU
868
8  
9  

EU
433

US
915

AS
430

MAC	  options
Modulation

…

Regional ISM	  band

Figure  1:  LoRaWAN  Classes  

10  
11  
12  
13  
14  
15  
16  
17  
18  

•   Bi-directional end-devices (Class A): End-­devices   of   Class   A   allow   for   bi-­
directional   communications   whereby   each   end-­device’s   uplink   transmission   is  
followed  by  two  short  downlink  receive  windows.  The  transmission  slot  scheduled  by  
the   end-­device   is   based   on   its   own   communication   needs   with   a   small   variation  
based  on  a  random  time  basis  (ALOHA-­type   of   protocol).  This   Class  A  operation  is  
the   lowest   power   end-­device   system   for   applications   that   only   require   downlink  
communication   from   the   server   shortly   after   the   end-­device   has   sent   an   uplink  
transmission.  Downlink  communications  from  the  server  at  any  other  time  will  have  to  
wait  until  the  next  scheduled  uplink.  

19  
20  
21  
22  
23  
24  

•   Bi-directional end-devices with scheduled receive slots (Class B): End-­devices  
of   Class   B   allow   for   more   receive   slots.   In   addition   to   the   Class   A   random   receive  
windows,  Class  B  devices  open  extra  receive  windows  at  scheduled  times.  In  order  
for  the  End-­device  to  open  it  receive  window  at  the  scheduled  time  it  receives  a  time  
synchronized   Beacon   from   the   gateway.   This   allows   the   server   to   know   when   the  
end-­device  is  listening.  

25  
26  
27  
28  

•   Bi-directional end-devices with maximal receive slots (Class C):  End-­devices  of  
Class   C   have   nearly   continuously   open   receive   windows,   only   closed   when  
transmitting.   Class   C   end-­device   will   use   more   power   to   operate   than   Class   A   or  
Class  B  but  they  offer  the  lowest  latency  for  server  to  end-­device  communication.  
©2015  LoRa™  Alliance  

Page  9  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  

2.2   Specification  scope  

2  
3  
4  

This  LoRaWAN  specification  describes  the  additional  functions  differentiating  an  end-­device  
higher   Class   from   one   of   Class   A.   A   higher   Class   end-­device   shall   also   implement   all   the  
functionality  described  in  the  LoRaWAN  Class  A  specification.  

5  
6  
7  
8  

NOTE:   Physical   message   format,   MAC   message   format,   and   other  
parts   of   this   specification   that   are   common   to   both   end-­devices   of  
Class   A   and   higher   Classes      are   described   only   in   the   LoRaWAN  
Class  A  specification  to  avoid  redundancy.  

©2015  LoRa™  Alliance  

Page  10  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

1  
2  

LoRaWAN  Specification  
  

CLASS  A  –  ALL  END-­DEVICES  
All  LoRaWAN  end-­devices  must  implement  Class  A  features.  

©2015  LoRa™  Alliance  

Page  11  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

3   Physical  Message  Formats  

2  

The  LoRa  terminology  distinguishes  between  uplink  and  downlink  messages.  

3  

3.1   Uplink  Messages  

4  
5  

Uplink messages   are   sent   by   end-­devices   to   the   network   server   relayed   by   one   or   many  
gateways.  

6  
7  
8  

Uplink   messages   use   the   LoRa   radio   packet   explicit   mode   in   which   the   LoRa   physical  
header  (PHDR)  plus  a  header  CRC  (PHDR_CRC)  are  included.1  The  integrity  of  the  payload  
is  protected  by  a  CRC.    

9  

The  PHDR,  PHDR_CRC  and  payload  CRC  fields  are  inserted  by  the  radio  transceiver.  

10  

Uplink  PHY:  

11  

Figure  2:  Uplink  PHY  structure  

12  

3.2   Downlink  Messages  

13  
14  

Each downlink message is   sent   by   the   network   server   to   only   one   end-­device   and   is  
relayed  by  a  single  gateway.2    

15  
16  

Downlink  messages  use  the  radio  packet  explicit  mode  in  which  the  LoRa  physical header  
(PHDR)  and  a  header  CRC  (PHDR_CRC)  are  included.3  

17  

Downlink  PHY:  

18  

Figure  3:  Downlink  PHY  structure  

19  

3.3   Receive  Windows  

20  
21  

Following   each   uplink   transmission   the   end-­device   opens   two   short   receive   windows.   The  
receive  window  start  times  are  defined  using  the  end  of  the  transmission  as  a  reference.  

22  

  

Preamble  

PHDR  

Preamble  

PHDR_CRC  

PHDR  

PHYPayload  

PHDR_CRC  

CRC  

PHYPayload  

                                                                                                 
1

  See  the  LoRa  radio  transceiver  datasheet  for  a  description  of  LoRa  radio  packet  implicit/explicit  
modes.  
2
  This  specification  does  not  describe  the  transmission  of  multicast  messages  from  a  network  server  
to  many  end-­devices.  
3
  No  payload  integrity  check  is  done  at  this  level  to  keep  messages  as  short  as  possible  with  minimum  
impact  on  any  duty-­cycle  limitations  of  the  ISM  bands  used.  

©2015  LoRa™  Alliance  

Page  12  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  
2  

Figure  4:  End-­device  receive  slot  timing.  

  

3  

3.3.1   First  receive  window  channel,  data  rate,  and  start  

4  
5  
6  
7  
8  
9  

The  first  receive  window  RX1  uses  a  frequency  that  is  a  function  of  the  uplink  frequency  and  
a   data   rate   that   is   a   function   of   the   data   rate   used   for   the   uplink.   RX1   opens  
RECEIVE_DELAY11  seconds  (+/-­  20  microseconds)  after  the  end  of  the  uplink  modulation.  
The   relationship   between   uplink   and   RX1   slot   downlink   data   rate   is   region   specific   and  
detailed   in   the   Section   7.   By   default   the   first   receive   window   datarate   is   identical   to   the  
datarate  of  the  last  uplink.  

10  

3.3.2   Second  receive  window  channel,  data  rate,  and  start  

11  
12  
13  
14  
15  

The   second   receive   window   RX2   uses   a   fixed   configurable   frequency   and   data   rate   and  
opens   RECEIVE_DELAY21   seconds   (+/-­   20   microseconds)   after   the   end   of   the   uplink  
modulation.   The   frequency   and   data   rate   used   can   be   modified   through   MAC   commands  
(see  Section  5).The  default  frequency  and  data  rate  to  use  are  region  specific  and  detailed  
in  the  Section  7  .  

16  

3.3.3   Receive  window  duration  

17  
18  

The  length  of  a  receive  window  must  be  at  least  the  time  required  by  the  end-­device’s  radio  
transceiver  to  effectively  detect  a  downlink  preamble.    

19  

3.3.4   Receiver  activity  during  the  receive  windows  

20  
21  
22  
23  
24  

If  a  preamble  is  detected  during  one  of  the  receive  windows,  the  radio  receiver  stays  active  
until   the   downlink   frame   is   demodulated.   If   a   frame   was   detected   and   subsequently  
demodulated  during  the  first  receive  window  and  the  frame  was  intended  for  this  end-­device  
after  address  and  MIC  (message  integrity  code)  checks,  the  end-­device  does  not  open  the  
second  receive  window.  

25  

3.3.5   Network  sending  a  message  to  an  end-­device  

26  
27  

If   the   network   intends   to   transmit   a   downlink   to   an   end-­device,   it   will   always   initiate   the  
transmission  precisely  at  the  beginning  of  one  of  those  two  receive  windows.    

                                                                                                 
1

  RECEIVE_DELAY1  and  RECEIVE_DELAY2  are  described  in  Chapter  6.  

©2015  LoRa™  Alliance  

Page  13  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  
2  
3  
4  

3.3.6   Important  notice  on  receive  windows  

5  
6  
7  
8  

3.3.7   Receiving  or  transmitting  other  protocols  

An  end-­device  shall  not  transmit  another  uplink  message  before  it  either  has  received  a  
downlink  message  in  the  first  or  second  receive  window  of  the  previous  transmission,  or  the  
second  receive  window  of  the  previous  transmission  is  expired.    

The  node  may  listen  or  transmit  other  protocols  or  do  any  transactions  between  the  
LoRaWAN  transmission  and  reception  windows,  as  long  as  the  end-­device  remains  
compatible  with  the  local  regulation  and  compliant  with  the  LoRaWAN  specification.  

©2015  LoRa™  Alliance  

Page  14  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

4   MAC  Message  Formats  

2  
3  
4  
5  

All   LoRa   uplink   and   downlink   messages   carry   a   PHY   payload   (Payload)   starting   with   a  
single-­octet   MAC header   (MHDR),   followed   by   a   MAC payload   (MACPayload)1,   and  
ending  with  a  4-­octet  message integrity code  (MIC).    
  
  

6  

Radio  PHY  layer:  

7  

Figure  5:  Radio  PHY  structure  (CRC*  is  only  available  on  uplink  messages)  

8  

PHYPayload:  

Preamble  

PHDR  

PHDR_CRC  

MHDR  

9  
10  

MIC  

FPort  

FRMPayload  

MACPayload:  

11  

Figure  7:  MAC  payload  structure  

12  

FHDR:  

13  

Figure  8:  Frame  header  structure  

DevAddr  

15  
16  

MACPayload  

CRC*  

Figure  6:  PHY  payload  structure  

FHDR  

14  

PHYPayload  

FCtrl  

FCnt  

FOpts  

  
Figure  9:  LoRa  message  format  elements  

4.1   MAC  Layer  (PHYPayload)  
  
Size (bytes)

1  

1..M  

4  

PHYPayload

MHDR  

MACPayload  

MIC  

17  

  

18  
19  

The   maximum   length   (M)   of   the   MACPayload   field   is   region   specific   and   is   specified   in  
Chapter  6.  

20  
21  

4.2   MAC  Header  (MHDR  field)  
  
Bit#
MHDR bits

7..5  
MType  

4..2  
RFU  

1..0  
Major  

22  

  

  

23  
24  
25  

The   MAC   header   specifies   the   message type   (MType)   and   according   to   which   major
version  (Major)  of  the  frame  format  of  the  LoRaWAN  layer  specification  the  frame  has  been  
encoded.  

                                                                                                 
1

  Maximum  payload  size  is  detailed  in  the  Chapter  6.  

©2015  LoRa™  Alliance  

Page  15  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

4.2.1   Message  type  (MType  bit  field)  

2  
3  

The  LoRaWAN  distinguishes  between  six  different  MAC  message  types:  join request, join
accept,  unconfirmed  data  up/down,  and  confirmed  data up/down.    
MType
000  

Description
Join  Request  

001  
010  
011  
100  
101  
110  
111  

Join  Accept  
Unconfirmed  Data  Up  
Unconfirmed  Data  Down  
Confirmed  Data  Up  
Confirmed  Data  Down  
RFU  
Proprietary  

4  

Table  1:  MAC  message  types  

5  

4.2.1.1   Join-­request  and  join-­accept  messages  

6  
7  

The  join-­request  and  join-­accept  messages  are  used  by  the  over-­the-­air  activation  procedure  
described  in  Chapter  6.2.  

8  

4.2.1.2   Data  messages  

9  
10  
11  
12  
13  
14  

Data  messages  are  used  to  transfer  both  MAC  commands  and  application  data,  which  can  
be   combined   together   in   a   single   message.      A   confirmed-­data   message   has   to   be  
acknowledged   by   the   receiver,   whereas   an   unconfirmed-­data   message   does   not   require  
an   acknowledgment.1   Proprietary   messages   can   be   used   to   implement   non-­standard  
message  formats  that  are  not  interoperable  with  standard  messages  but  must  only  be  used  
among  devices  that  have  a  common  understanding  of  the  proprietary  extensions.  

15  
16  

Message  integrity  is  ensured  in  different  ways  for  different  message  types  and  is  described  
per  message  type  below.  

17  
18  

4.2.2   Major  version  of  data  message  (Major  bit  field)  
  

19  

Major bits
00  
01..11  

Description
LoRaWAN  R1  
RFU  

Table  2:  Major  list

20  
21  
22  
23  
24  
25  
26  

Note:   The   Major   version   specifies   the   format   of   the   messages  
exchanged   in   the   join   procedure   (see   Chapter   6.2)   and   the   first   four  
bytes  of  the  MAC  Payload  as  described  in  Chapter  4.  For  each  major  
version,   end-­devices   may   implement   different   minor   versions   of   the  
frame  format.    The  minor  version  used  by  an  end-­device  must  be  made  
known  to  the  network  server  beforehand  using  out  of  band  messages  
(e.g.,  as  part  of  the  device  personalization  information).  

                                                                                                 
1

  A  detailed  timing  diagram  of  the  acknowledge  mechanism  is  given  in  Section  19.  

©2015  LoRa™  Alliance  

Page  16  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

4.3   MAC  Payload  of  Data  Messages  (MACPayload)  

2  
3  
4  

The  MAC  payload  of  the  data  messages,  a  so-­called  “data frame”,  contains  a  frame header  
(FHDR)   followed   by   an   optional   port field   (FPort)   and   an   optional   frame payload   field  
(FRMPayload).    

5  

4.3.1   Frame  header  (FHDR)  

6  
7  
8  
9  

The   FHDR   contains   the   short   device address   of   the   end-­device   (DevAddr),   a   frame
control   octet   (FCtrl),   a   2-­octets   frame counter   (FCnt),   and   up   to   15   octets   of   frame
options  (FOpts)  used  to  transport  MAC  commands.  

  
Size (bytes)
FHDR

10  

1  
FCtrl  

2  
FCnt  

0..15  
FOpts  

For  downlink  frames  the  FCtrl  content  of  the  frame  header  is:  
Bit#
FCtrl bits

11  

4  
DevAddr  
7  

6  

5  

4  

[3..0]  

ADR  

RFU  

ACK  

FPending  

FOptsLen  

For  uplink  frames  the  FCtrl  content  of  the  frame  header  is:  
Bit#
FCtrl bits

7  

6  

5  

4  

[3..0]  

ADR  

ADRACKReq  

ACK  

RFU  

FOptsLen  

12  

4.3.1.1   Adaptive  data  rate  control  in  frame  header  (ADR,  ADRACKReq  in  FCtrl)  

13  
14  
15  
16  

LoRa  network  allows  the  end-­devices  to  individually  use  any  of  the  possible  data  rates.  This  
feature  is  used  by  the  LoRaWAN  to  adapt  and  optimize  the  data  rate  of  static  end-­devices.  
This  is  referred  to  as  Adaptive  Data  Rate  (ADR)  and  when  this  is  enabled  the  network  will  be  
optimized  to  use  the  fastest  data  rate  possible.  

17  
18  
19  
20  
21  

Adaptive   Data   Rate   control   may   not   be   possible   when   the   radio   channel   attenuation  
changes  fast  and  constantly.  When  the  network  is  unable  to  control  the  data  rate  of  a  device  
,   the   device’s   application   layer   should   control   it.   It   is   recommended   to   use   a   variety   of  
different   data   rates   in   this   case.   The   application   layer   should   always   try   to   minimize   the  
aggregated  air  time  used  given  the  network  conditions.  

22  
23  
24  
25  
26  
27  

If   the   ADR   bit   is   set,   the   network   will   control   the   data   rate   of   the   end-­device   through   the  
appropriate  MAC  commands.  If  the  ADR  bit  is  not  set,  the  network  will  not  attempt  to  control  
the  data  rate  of  the   end-­device  regardless  of  the  received  signal  quality.  The  ADR  bit  may  
be   set   and   unset   by   the   end-­device   or   the   Network   on   demand.   However,   whenever  
possible,  the  ADR  scheme  should  be  enabled  to  increase  the  battery  life  of  the  end-­device  
and  maximize  the  network  capacity.    

28  
29  
30  

Note:  Even  mobile  end-­devices  are  actually  immobile  most  of  the  time.  
So   depending   on   its   state   of   mobility,   an   end-­device   can   request   the  
network  to  optimize  its  data  rate  using  ADR.  

31  
32  
33  
34  
35  
36  
37  
38  

If  an  end-­device  whose  data  rate  is  optimized  by  the  network  to  use  a  data  rate  higher  than  
its  lowest  available  data  rate,  it  periodically  needs  to  validate  that  the  network  still  receives  
the  uplink  frames.  Each  time  the  uplink  frame  counter  is  incremented  (for  each  new  uplink,  
repeated   transmissions   do   not   increase   the   counter),   the   device   increments   an  
ADR_ACK_CNT   counter.   After   ADR_ACK_LIMIT   uplinks   (ADR_ACK_CNT   >=  
ADR_ACK_LIMIT)   without   any   downlink   response,   it   sets   the   ADR acknowledgment
request   bit   (ADRACKReq).      The   network   is   required   to   respond   with   a   downlink   frame  
within  the  next  ADR_ACK_DELAY  frames,  any  received  downlink  frame  following  an  uplink  
©2015  LoRa™  Alliance  

Page  17  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  
4  
5  
6  
7  
8  
9  

  
frame  resets  the  ADR_ACK_CNT  counter.  The  downlink  ACK  bit  does  not  need  to  be  set  as  
any   response   during   the   receive   slot   of   the   end-­device   indicates   that   the   gateway   has   still  
received   the   uplinks   from   this   device.   If   no   reply   is   received   within   the   next  
ADR_ACK_DELAY  uplinks  (i.e.,  after  a  total  of  ADR_ACK_LIMIT  +  ADR_ACK_DELAY),  the  
end-­device   may   try   to   regain   connectivity   by   switching   to   the   next   lower   data   rate   that  
provides   a   longer   radio   range.   The   end-­device   will   further   lower   its   data   rate   step   by   step  
every   time   ADR_ACK_LIMIT   is   reached.   The   ADRACKReq   shall   not   be   set   if   the   device  
uses  its  lowest  available  data  rate  because  in  that  case  no  action  can  be  taken  to  improve  
the  link  range.  

10  
11  
12  
13  

Note:   Not   requesting   an   immediate   response   to   an   ADR  
acknowledgement   request   provides   flexibility   to   the   network   to  
optimally  schedule  its  downlinks.  
  

14  
15  
16  
17  

Note:   In   uplink   transmissions   the   ADRACKReq   bit   is   set   if  
ADR_ACK_CNT  >=  ADR_ACK_LIMIT   and  the  current  data-­rate  is  
greater  than  the  device  defined  minimum  data  rate,  it  is  cleared  in  
other  conditions.  

18  

4.3.1.2   Message  acknowledge  bit  and  acknowledgement  procedure  (ACK  in  FCtrl)  

19  
20  
21  
22  
23  

When  receiving  a  confirmed  data  message,  the  receiver  shall  respond  with  a  data  frame  that  
has  the  acknowledgment  bit  (ACK)  set.  If  the  sender  is  an  end-­device,  the  network  will  send  
the  acknowledgement  using  one  of  the  receive  windows  opened  by  the  end-­device  after  the  
send  operation.  If  the  sender  is  a  gateway,  the  end-­device  transmits  an  acknowledgment  at  
its  own  discretion.  

24  
25  

Acknowledgements  are  only  sent  in  response  to  the  latest  message  received  and  are  never  
retransmitted.  

26  

  

27  
28  
29  
30  
31  
32  

Note:  To  allow  the  end-­devices  to  be  as  simple  as  possible  and  have  
as   few   states   as   possible   it   may   transmit   an   explicit   (possibly   empty)  
acknowledgement   data   message   immediately   after   the   reception   of   a  
data   message   requiring   a   confirmation.   Alternatively   the   end-­device  
may   defer   the   transmission   of   an   acknowledgement   to   piggyback   it  
with  its  next  data  message.  

33  

4.3.1.3   Retransmission  procedure  

34  
35  
36  

The   number   of   retransmissions   (and   their   timing)   for   the   same   message   where      an  
acknowledgment   is   requested   but   not   received   is   at   the   discretion   of   the   end   device      and  
may  be  different    for  each  end-­device.    

37  
38  

Note:  Some  example  timing  diagrams  of  the  acknowledge  mechanism  
are  given  in  Chapter  19.  

39  

  

40  
41  
42  
43  
44  
45  

Note:   If   an   end-­device   has   reached   its   maximum   number   of  
retransmissions  without  receiving  an  acknowledgment,  it  can  try  to  re-­
gain  connectivity  by  moving  to  a  lower  data  rate  with  longer  reach.  It  is  
up  to  the  end-­device  to  retransmit  the  message  again  or  to  forfeit  that  
message  and  move  on.  
  
©2015  LoRa™  Alliance  

Page  18  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  
Note:   If   the   network   server   has   reached   its   maximum   number   of  
retransmissions  without  receiving  an  acknowledgment,  it  will  generally  
consider   the   end-­device   as   unreachable   until   it   receives   further  
messages   from   the   end-­device.   It   is   up   to   the   network   server   to  
retransmit  the  message  once  connectivity  to  the  end-­device  in  question  
is  regained  or  to  forfeit  that  message  and  move  on.  

1  
2  
3  
4  
5  
6  
7  

  

8  
9  

Note:   The   recommended   data   rate   back-­off   strategy   during   re-­
transmissions  is  described  in  Chapter  19.4  

10  

4.3.1.4   Frame  pending  bit  (FPending  in  FCtrl,  downlink  only)  

11  
12  
13  

The  frame pending  bit  (FPending)  is  only  used  in  downlink  communication,  indicating  that  
the  gateway  has  more  data  pending  to  be  sent  and  therefore  asking  the  end-­device  to  open  
another  receive  window  as  soon  as  possible  by  sending  another  uplink  message.  

14  

The  exact  use  of  FPending  bit  is  described  in  Chapter  19.3.    

15  

4.3.1.5   Frame  counter  (FCnt)  

16  
17  
18  
19  
20  
21  
22  
23  
24  
25  
26  
27  
28  
29  
30  

Each   end-­device   has   two   frame   counters   to   keep   track   of   the   number   of   data   frames   sent  
uplink  to  the  network  server  (FCntUp),  incremented  by  the  end-­device  and  received  by  the  
end-­device   downlink   from   the   network   server   (FCntDown),   which   is   incremented   by   the  
network   server.      The   network   server   tracks   the   uplink   frame   counter   and   generates   the  
downlink  counter  for  each  end-­device.    After  a  JoinReq  –  JoinAccept  message  exchange  or  
a  reset  for  a  personalized  end-­device,  the  frame  counters  on  the  end-­device  and  the  frame  
counters  on  the  network  server  for  that  end-­device  are  reset  to  0.  Subsequently  FCntUp  and  
FCntDown   are   incremented   at   the   sender   side   by   1   for   each   new   data   frame   sent   in   the  
respective  direction.    At  the  receiver  side,  the  corresponding  counter  is  kept  in  sync  with  the  
value   received   provided   the   value   received   has   incremented   compared   to      the   current  
counter   value   and   is   less   than   the   value   specified   by   MAX_FCNT_GAP1   after   considering  
counter   rollovers.   If   this   difference   is   greater   than   the   value   of   MAX_FCNT_GAP   then   too  
many   data   frames   have   been   lost   then   subsequent   will   be   discarded.      The   FCnt   is   not  
incremented   in   case   of   multiple   transmissions   of   an   unconfirmed   frame   (see   NbTrans  
parameter),  or  in  the  case  of  a  confirmed  frame  that  is  not  acknowledged.    

31  
32  
33  
34  
35  
36  
37  

The  LoRaWAN  allows  the  use  of  either  16-­bits  or  32-­bits  frame  counters.  The  network  side  
needs   to   be   informed   out-­of-­band   about   the   width   of   the   frame   counter   implemented   in   a  
given  end-­device.    If  a  16-­bits  frame  counter  is  used,  the  FCnt  field  can  be  used  directly  as  
the   counter   value,   possibly   extended   by   leading   zero   octets   if   required.   If   a   32-­bits   frame  
counter   is   used,   the   FCnt   field   corresponds   to   the   least-­significant   16   bits   of   the   32-­bits  
frame  counter  (i.e.,  FCntUp  for  data  frames  sent  uplink  and  FCntDown  for  data  frames  sent  
downlink).  

38  
39  

The  end-­device  shall  not  reuse  the  same  FCntUp  value,  except  for  retransmission,  with  the  
same  application  and  network  session  keys.  

40  
41  
42  

Note:   Since   the   FCnt   field   carries   only   the   least-­significant   16   bits   of  
the  32-­bits  frame  counter,  the  server  must  infer  the  16  most-­significant  
bits  of  the  frame  counter  from  the  observation  of  the  traffic.    
                                                                                                 
1

  Actual  value  for  MAX_FCNT_GAP,  RECEIVE_DELAY1  and  RECEIVE_DELAY2  can  be  found  at  
7.1.7  for  EU863-­870  or  7.2.7  for  US902-­928.  

©2015  LoRa™  Alliance  

Page  19  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  

  
4.3.1.6   Frame  options  (FOptsLen  in  FCtrl,  FOpts)  

2  
3  

The   frame-options length   field   (FOptsLen)   in   FCtrl   byte   denotes   the   actual   length   of   the  
frame options  field  (FOpts)  included  in  the  frame.      

4  
5  

FOpts   transport   MAC   commands   of   a   maximum   length   of   15   octets   that   are   piggybacked  
onto  data  frames;;  see  Chapter  4.45  for  a  list  of  valid  MAC  commands.      

6  
7  
8  

If   FOptsLen   is   0,   the   FOpts   field   is   absent.   If   FOptsLen   is   different   from   0,   i.e.   if   MAC  
commands  are  present  in  the  FOpts  field,  the  port  0  cannot  be  used  (FPort  must  be  either  
not  present  or  different  from  0).    

9  
10  

MAC   commands   cannot   be   simultaneously   present   in   the   payload   field   and   the   frame
options  field.  Should  this  occur,  the  device  shall  ignore  the  frame.  

11  

4.3.2   Port  field  (FPort)  

12  
13  
14  
15  
16  
17  

If  the   frame  payload  field  is  not  empty,   the   port   field   must  be   present.   If   present,   an  FPort  
value  of  0  indicates  that  the  FRMPayload  contains  MAC  commands  only;;  see  Chapter  54.4  
for   a   list   of   valid   MAC   commands.      FPort   values   1..223   (0x01..0xDF)   are   application-­
specific.      FPort   values   224..255   (0xE0..0xFF)   are   reserved   for   future   standardized  
application  extensions.  

  
Size (bytes)
MACPayload

7..22  
FHDR  

0..1  
FPort  

0..N  
FRMPayload  

18  
19  

N  is  the  number  of  octets  of  the  application  payload.  The  valid  range  for  N  is  region  specific  
and  is  defined  in  Section  7  

20  
21  

N  should  be  equal  or  smaller  than:  
N  ≤  M  -­  1  -­  (length  of  FHDR  in  octets)  

22  

where  M  is  the  maximum  MAC  payload  length.  

23  

4.3.3   MAC  Frame  Payload  Encryption  (FRMPayload)  

24  
25  

If   a   data   frame   carries   a   payload,   FRMPayload   must   be   encrypted   before   the   message  
integrity  code  (MIC)  is  calculated.    

26  
27  

The   encryption   scheme   used   is   based   on   the   generic   algorithm   described   in   IEEE  
802.15.4/2006  Annex  B  [IEEE802154]  using  AES  with  a  key  length  of  128  bits.    

28  
29  

The  key  K  used  depends  on  the  FPort  of  the  data  message:  

  
FPort
0  
1..255  

K
NwkSKey  
AppSKey  

30  

Table  3:  FPort  list  

31  
32  

The  fields  encrypted  are:  
  
pld  =  FRMPayload  

33  
34  
35  

For  each  data  message,  the  algorithm  defines  a  sequence  of  Blocks  Ai  for  i  =  1..k  with  k =  
ceil(len(pld)  /  16):  

  
Size (bytes)
Ai

1  
0x01  

©2015  LoRa™  Alliance  

4  
4  x  0x00  

1  
Dir  

4  
DevAddr  

Page  20  of  85  
  

4  
FCntUp  or  

1  
0x00

1  
i

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  
FCntDown  
  

1  

  

2  

The  direction  field  (Dir)  is  0  for  uplink  frames  and  1  for  downlink  frames.  

3  
4  
5  
6  

The  blocks  Ai  are  encrypted  to  get  a  sequence  S  of  blocks  Si:  
  
  
Si  =  aes128_encrypt(K,  Ai)  for  i =  1..k
S  =  S1  |  S2  |  ..    |  Sk

7  
8  
9  

Encryption  and  decryption  of  the  payload  is  done  by  truncating  
  
  
(pld  |  pad16)  xor  S  

10  

to  the  first  len(pld)  octets.  

11  

  

12  

4.4   Message  Integrity  Code  (MIC)  

13  
14  
15  

The  message  integrity  code  (MIC)  is  calculated  over  all  the  fields  in  the  message.  
  
  
msg  =  MHDR  |  FHDR  |  FPort  |  FRMPayload  

16  

whereby  len(msg)  denotes  the  length  of  the  message  in  octets.    

17  
18  
19  
20  
21  
22  

The  MIC  is  calculated  as  follows  [RFC4493]:  
  
  
cmac  =  aes128_cmac(NwkSKey,  B0  |  msg)  
  
MIC  =  cmac[0..3]  
  
whereby  the  block  B0  is  defined  as  follows:  
Size (bytes)
B0

1  
0x49  

4  
4  x  0x00  

1  
Dir  

4  
DevAddr  

4  
FCntUp  or  
FCntDown  
  

23  

  

24  

The  direction  field  (Dir)  is  0  for  uplink  frames  and  1  for  downlink  frames.  

©2015  LoRa™  Alliance  

Page  21  of  85  
  

1  
0x00  

1  
len(msg)  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

5   MAC  Commands  

2  
3  
4  
5  

For   network   administration,   a   set   of   MAC   commands   may   be   exchanged   exclusively  
between   the   network   server   and   the   MAC   layer   on   an   end-­device.      MAC   layer   commands  
are  never  visible  to  the  application  or  the  application  server  or  the  application  running  on  the  
end-­device.      

6  
7  
8  
9  
10  

A  single  data  frame  can  contain  any  sequence  of  MAC  commands,  either  piggybacked  in  the  
FOpts  field  or,  when  sent  as  a  separate  data  frame,  in  the  FRMPayload  field  with  the  FPort  
field  being  set  to  0.    Piggybacked  MAC  commands  are  always  sent  without  encryption  and  
must   not   exceed   15   octets.      MAC   commands   sent   as   FRMPayload   are   always   encrypted  
and  must  not  exceed  the  maximum  FRMPayload  length.      

11  
12  
13  

Note:   MAC   commands   whose   content   shall   not   be   disclosed   to   an  
eavesdropper   must   be   sent   in   the   FRMPayload   of   a   separate   data  
message.  

14  
15  
16  

A   MAC   command   consists   of   a   command   identifier   (CID)   of   1   octet   followed   by   a   possibly  
empty  command-­specific  sequence  of  octets.  

17  
18  
19  
20  
21  

  
CID

Command
  

Transmitted by
End-­
Gateway  
device  
x  
  

0x02  

LinkCheckReq  

0x02  

LinkCheckAns  

  

x  

0x03  

LinkADRReq  

  

x  

0x03  
0x04  

LinkADRAns  
DutyCycleReq  

x  
  

  
x  

0x04  
0x05  
0x05  
0x06  
0x06  

DutyCycleAns  
RXParamSetupReq  
RXParamSetupAns  
DevStatusReq  
DevStatusAns  

x  
  
x  
  
x  

  
x  
  
x  
  

0x07  

NewChannelReq  

  

x  

0x07  
0x08  
0x08  

NewChannelAns  
RXTimingSetupReq  
RXTimingSetupAns  

x  
  
x  

  
x  
  

0x80  
to  
0xFF  

Proprietary  

x  

x  

Short Description
Used  by  an  end-­device  to  validate  its  
connectivity  to  a  network.  
Answer  to  LinkCheckReq  command.    
Contains  the  received  signal  power  
estimation  indicating  to  the  end-­device  the  
quality  of  reception  (link  margin).  
Requests  the  end-­device  to  change  data  
rate,  transmit  power,  repetition  rate  or  
channel.  
Acknowledges  the  LinkRateReq.  
Sets  the  maximum  aggregated  transmit  
duty-­cycle  of  a  device  
Acknowledges  a  DutyCycleReq  command  
Sets  the  reception  slots  parameters  
Acknowledges  a  RXSetupReq  command  
Requests  the  status  of  the  end-­device  
Returns  the  status  of  the  end-­device,  namely  
its  battery  level  and  its  demodulation  margin  
Creates  or  modifies  the  definition  of  a  radio  
channel  
Acknowledges  a  NewChannelReq  command  
Sets  the  timing  of  the  of  the  reception  slots      
Acknowledges  RXTimingSetupReq  
command  
Reserved  for  proprietary  network  command  
extensions  

Table  4:  MAC  commands  

Note:  The  length  of  a  MAC  command  is  not  explicitly  given  and  must  
be   implicitly   known   by   the   MAC   implementation.      Therefore   unknown  
MAC   commands   cannot   be   skipped   and   the   first   unknown   MAC  
command  terminates  the  processing  of  the  MAC  command  sequence.    
©2015  LoRa™  Alliance  

Page  22  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  
It   is   therefore   advisable   to   order   MAC   commands   according   to   the  
version   of   the   LoRaWAN   specification   which   has   introduced   a   MAC  
command   for   the   first   time.      This   way   all   MAC   commands   up   to   the  
version  of  the  LoRaWAN  specification  implemented  can  be  processed  
even  in  the  presence  of  MAC  commands  specified  only  in  a  version  of  
the  LoRaWAN  specification  newer  than  that  implemented.  

1  
2  
3  
4  
5  
6  
7  

  

8  
9  
10  
11  
12  

Note:   Any   values   adjusted   by   the   network   server   (e.g.,   RX2,   new   or  
adjusted   channels   definitions)   remain   only   valid   until   the   next   join   of  
the   end-­device.   Therefore   after   each   successful   join   procedure   the  
end-­device   uses   the   default   parameters   again   and   it   is   up   to   the  
network  server  to  re-­adjust  the  values  again  as  needed.  

13  
14  

5.1   Link  Check  commands  (LinkCheckReq,  LinkCheckAns)  

15  
16  

With   the   LinkCheckReq   command,   an   end-­device   may   validate   its   connectivity   with   the  
network.  The  command  has  no  payload.    

17  
18  
19  

When   a   LinkCheckReq   is   received   by   the   network   server   via   one   or   multiple   gateways,   it  
responds  with  a  LinkCheckAns  command.  

  

  
1  
Margin  

Size (bytes)
LinkCheckAns Payload

1  
GwCnt  

20  
21  
22  
23  
24  

The   demodulation margin   (Margin)   is   an   8-­bit   unsigned   integer   in   the   range   of   0..254  
indicating  the  link  margin  in  dB  of  the  last  successfully  received  LinkCheckReq  command.    
A   value   of   “0”   means   that   the   frame   was   received   at   the   demodulation   floor   (0   dB   or   no  
margin)  while  a  value  of  “20”,  for  example,  means  that  the  frame  reached  the  gateway  20  dB  
above  the  demodulation  floor.  Value  “255”  is  reserved.  

25  
26  

The  gateway count  (GwCnt)  is  the  number  of  gateways  that  successfully  received  the  last  
LinkCheckReq  command.  

27  
28  

5.2   Link  ADR  commands  (LinkADRReq,  LinkADRAns)  

29  
30  
31  

With   the   LinkADRReq   command,   the   network   server   requests   an   end-­device   to   perform   a  
rate  adaptation.  

  

  
1  

2  

1  

DataRate_TXPower  

ChMask  

Redundancy  

Size (bytes)
LinkADRReq Payload

32  

  
Bits
DataRate_TXPower

[7:4]  

[3:0]  

DataRate  

TXPower  

33  

  

34  
35  
36  

The   requested   date rate   (DataRate)   and   TX output power   (TXPower)   are   region-­specific  
and   are   encoded   as   indicated   in   Chapter   7.The   channel mask   (ChMask)   encodes   the  
channels  usable  for  uplink  access  as  follows  with  bit  0  corresponding  to  the  LSB:  
Bit#
0  

Usable channels
Channel  1  

©2015  LoRa™  Alliance  

Page  23  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
Bit#
1  
..  
15  

  

Usable channels
Channel  2  
..  
Channel  16  

1  

Table  5:  Channel  state  table  

2  
3  
4  
5  

A   bit   in   the   ChMask   field   set   to   1   means   that   the   corresponding   channel   can   be   used   for  
uplink  transmissions  if  this  channel  allows  the  data  rate  currently  used  by  the  end-­device.  A  
bit  set  to  0  means  the  corresponding  channels  should  be  avoided.    
  
Bits
Redundancy bits

7  

[6:4]  

[3:0]  

RFU  

ChMaskCntl  

NbTrans  

6  
7  
8  
9  
10  
11  
12  
13  
14  
15  

In   the   Redundancy   bits   the   NbTrans   field   is   the   number   of   transmissions   for   each   uplink  
message.   This   applies   only   to   “unconfirmed”   uplink   frames.   The   default   value   is   1  
corresponding   to   a   single   transmission   of   each   frame.   The   valid   range   is   [1:15].   If  
NbTrans==0  is  received  the  end-­device  should  use  the  default  value.  This  field  can  be  used  
by   the   network   manager   to   control   the   redundancy   of   the   node   uplinks   to   obtain   a   given  
Quality  of  Service.  The  end-­device  performs  frequency  hopping  as  usual  between  repeated  
transmissions,   it   does   wait   after   each   repetition   until   the   receive   windows   have   expired.   .  
Whenever   a   downlink   message   is   received   during   the   RX1   slot   window,   it   shall   stop   any  
further  retransmission  of  the  same  uplink  message.  For  class  A  devices,  a  reception  in  the  
RX2  slot  has  the  same  effect.  

16  
17  
18  
19  

The   channel   mask   control   (ChMaskCntl)   field   controls   the   interpretation   of   the   previously  
defined  ChMask  bit  mask.  It  controls  the  block  of  16  channels  to  which  the  ChMask  applies.  
It  can  also  be  used  to  globally  turn  on  or  off  all  channels  using  specific  modulation.  This  field  
usage  is  region  specific  and  is  defined  in  Chapter  7.    

20  
21  
22  

The   channel   frequencies   are   region-­specific   and   they   are   defined   in   Chapter   6.   An   end-­
device  answers  to  a  LinkADRReq  with  a  LinkADRAns  command.  

  
Size (bytes)
LinkADRAns Payload

23  
24  

  
  
Bits
Status bits

25  

1  
Status  

[7:3]  
RFU  

2  
Power  ACK  

1  
Data  rate  ACK  

0  
Channel  mask  
ACK  

  

©2015  LoRa™  Alliance  

Page  24  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
1  
2  

3  

  

The  LinkADRAns  Status  bits  have  the  following  meaning:  
  
  
Bit  =  0  
Channel  mask  ACK  
The  channel  mask  sent  
enables  a  yet  undefined  
channel  or  the  channel  mask  
required  all  channels  to  be  
disabled.  The  command  was  
discarded  and  the  end-­
device  state  was  not  
changed.  
Data  rate  ACK  
The  data  rate  requested  is  
unknown  to  the  end-­device  
or  is  not  possible  given  the  
channel  mask  provided  (not  
supported  by  any  of  the  
enabled  channels).  The  
command  was  discarded  and  
the  end-­device  state  was  not  
changed.  
Power  ACK  
The  requested  power  level  is  
not  implemented  in  the  
device.  The  command  was  
discarded  and  the  end-­
device  state  was  not  
changed.  

Bit  =  1  
The  channel  mask  sent  was  
successfully  interpreted.  All  
currently  defined  channel  
states  were  set  according  to  
the  mask.  

The  data  rate  was  
successfully  set.  

The  power  level  was  
successfully  set.  

Table  6:  LinkADRAns  status  bits  signification  

4  
5  

If  any  of  those  three  bits  equals  0,  the  command  did  not  succeed  and  the  node  has  kept  the  
previous  state.  

6  

5.3   End-­Device  Transmit  Duty  Cycle  (DutyCycleReq,  DutyCycleAns)  

7  
8  
9  
10  

The   DutyCycleReq   command   is   used   by   the   network   coordinator   to   limit   the   maximum  
aggregated   transmit   duty   cycle   of   an   end-­device.   The   aggregated   transmit   duty   cycle  
corresponds  to  the  transmit  duty  cycle  over  all  sub-­bands.    
  
1  
DutyCyclePL  

Size (bytes)
DutyCycleReq Payload

11  

  
Bits
DutyCyclePL

12  
13  
14  
15  

7:4  
RFU  

  
  
  
The  maximum  end-­device  transmit  duty  cycle  allowed  is:  
𝑎𝑔𝑔𝑟𝑒𝑔𝑎𝑡𝑒𝑑	  𝑑𝑢𝑡𝑦	  𝑐𝑦𝑐𝑙𝑒 = 	  

16  
17  
18  

3:0  
MaxDCycle  

1

2/01234567

  

The   valid   range   for   MaxDutyCycle   is   [0   :   15].   A   value   of   0   corresponds   to   “no   duty   cycle  
limitation”  except  the  one  set  by  the  regional  regulation.  

©2015  LoRa™  Alliance  

Page  25  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  

  
An   end-­device   answers   to   a   DutyCycleReq   with   a   DutyCycleAns   command.   The  
DutyCycleAns  MAC  reply  does  not  contain  any  payload.  

3  
4  

5.4   Receive  Windows  Parameters  (RXParamSetupReq,  
RXParamSetupAns)  

5  
6  
7  
8  

The  RXParamSetupReq  command  allows  a  change  to  the  frequency  and  the  data  rate  set  
for   the   second   receive   window   (RX2)   following   each   uplink.   The   command   also   allows   to  
program  an  offset  between  the  uplink  and  the  RX1  slot  downlink  data  rates.  
  
Size (bytes)
RXParamSetupReq
Payload

9  

1  
DLsettings  

3  
Frequency  

  
7  
RFU  

Bits
DLsettings

6:4  
RX1DRoffset  

3:0  
RX2DataRate  

10  
11  
12  
13  
14  

  
The  RX1DRoffset  field  sets  the  offset  between  the  uplink  data  rate  and  the  downlink  data  
rate  used  to  communicate  with  the  end-­device  on  the  first  reception  slot  (RX1).  As  a  default  
this  offset  is  0.  The  offset  is  used  to  take  into  account  maximum  power  density  constraints  
for  base  stations  in  some  regions  and  to  balance  the  uplink  and  downlink  radio  link  margins.  

15  
16  
17  
18  
19  

The   data   rate   (RX2DataRate)   field   defines   the   data   rate   of   a   downlink   using   the   second  
receive   window   following   the   same   convention   as   the   LinkADRReq   command   (0   means  
DR0/125kHz  for  example).  The  frequency  (Frequency)  field  corresponds  to  the  frequency  of  
the  channel  used  for  the  second  receive  window,  whereby  the  frequency  is  coded  following  
the  convention  defined  in  the  NewChannelReq  command.  

20  
21  
22  
23  
24  

The  RXParamSetupAns    command  is  used  by  the  end-­device  to  acknowledge  the  reception  
of   RXParamSetupReq   command.   The   RXParamSetupAns   command   should   be   added   in  
the   FOpt   field   of   all   uplinks   until   a   class   A   downlink   is   received   by   the   end-­device.   This  
guarantees  that  even  in  presence  of  uplink  packet  loss,  the  network  is  always  aware  of  the  
downlink  parameters  used  by  the  end-­device.  

25  

  The  payload  contains  a  single  status  byte.  
1  

Size (bytes)

Status  

RXParamSetupAns Payload

26  
27  

    
The  status  (Status)  bits  have  the  following  meaning.  
Bits
Status
bits

28  

7:3  
RFU  

  
  
Channel  ACK  
RX2  Data  rate  ACK  
RX1DRoffset  ACK  

29  

2  
RX1DRoffset  
ACK  

1  
RX2  Data  rate  
ACK  

0  
Channel  ACK  

Bit  =  0  
The  frequency  requested  is  
not  usable  by  the  end-­
device.    
The  data  rate  requested  is  
unknown  to  the  end-­device.    
the  uplink/downlink  data  rate  
offset  for  RX1  slot  is  not  in  
the  allowed  range    

Bit  =  1  
RX2  slot  channel  was  
successfully  set  
RX2  slot  data  rate  was  
successfully  set  
RX1DRoffset  was  
successfully  set  

Table  7:  RX2SetupAns  status  bits  signification  

©2015  LoRa™  Alliance  

Page  26  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  

  
If   either   of   the   3   bits   is   equal   to   0,   the   command   did   not   succeed   and   the   previous  
parameters  are  kept.  
  

4  

5.5   End-­Device  Status  (DevStatusReq,  DevStatusAns)  

5  
6  
7  

With  the  DevStatusReq  command  a  network  server  may  request  status  information  from  an  
end-­device.   The   command   has   no   payload.   If   a   DevStatusReq   is   received   by   an   end-­
device,  it  responds  with  a  DevStatusAns  command.  
1  
Battery  

Size (bytes)
DevStatusAns Payload

8  

The  battery level  (Battery)  reported  is  encoded  as  follows:  
Battery
0  
1..254  
255  

9  
10  
11  
12  

Description
The  end-­device  is  connected  to  an  external  
power  source.  
The  battery  level,  1  being  at  minimum  and  
254  being  at  maximum  
The  end-­device  was  not  able  to  measure  the  
battery  level.  

Table  8:  Battery  level  decoding  

The  margin  (Margin)  is  the  demodulation  signal-­to-­noise  ratio  in  dB  rounded  to  the  nearest  
integer   value   for   the   last   successfully   received   DevStatusReq   command.      It   is   a   signed  
integer  of  6  bits  with  a  minimum  value  of  -­32  and  a  maximum  value  of  31.  
Bits
Status

13  
14  
15  
16  
17  
18  

1  
Margin  

7:6  
RFU  

5:0  
Margin  

5.6   Creation  /  Modification  of  a  Channel  (NewChannelReq,  
NewChannelAns)  
  
The  NewChannelReq  command  can  be  used  to  either  modify  the  parameters  of  an  existing  
channel  or  to  create  a  new  one.  The  command  sets  the  center  frequency  of  the  new  channel  
and  the  range  of  data  rates  usable  on  this  channel:  
Size (bytes)
NewChannelReq Payload

1  
ChIndex  

3  
Freq  

1  
DrRange  

19  

  

20  
21  
22  
23  
24  
25  
26  
27  

The   channel   index   (ChIndex)   is   the   index   of   the   channel   being   created   or   modified.  
Depending   on   the   region   and   frequency   band   used,   the   LoRaWAN   specification   imposes  
default   channels   which   must   be   common   to   all   devices   and   cannot   be   modified   by   the  
NewChannelReq   command   (cf.   Chapter   6).   If   the   number   of   default   channels   is   N,   the  
default   channels   go   from   0   to   N-­1,   and   the   acceptable   range   for   ChIndex   is   N   to   15.   A  
device  must  be  able  to  handle  at  least  16  different  channel  definitions.  In  certain  region  the  
device  may  have  to  store  more  than  16  channel  definitions.  
  

28  
29  
30  
31  
32  
33  
34  

The  frequency  (Freq)  field  is  a  24  bits  unsigned  integer.  The  actual  channel  frequency  in  Hz  
is   100   x   Freq   whereby   values   representing   frequencies   below   100   MHz   are   reserved   for  
future   use.   This   allows   setting   the   frequency   of   a   channel   anywhere   between   100   MHz   to  
1.67  GHz  in  100  Hz  steps.  A  Freq  value  of  0  disables  the  channel. The  end-­device  has  to  
check   that   the   frequency   is   actually   allowed   by   its   radio   hardware   and   return   an   error  
otherwise.  
  
©2015  LoRa™  Alliance  

Page  27  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  

  
The  data-­rate  range  (DrRange)  field  specifies  the  data-­rate  range  allowed  for  this  channel.  
The  field  is  split  in  two  4-­bit  indexes:  
7:4  
MaxDR  

Bits
DrRange

3:0  
MinDR  

3  

  

4  
5  
6  
7  
8  

Following   the   convention   defined   in   Section   5.2   the   minimum   data   rate   (MinDR)   subfield  
designate  the  lowest  data  rate  allowed  on  this  channel.  For  example  0  designates  DR0  /  125  
kHz.   Similarly,   the   maximum   data   rate   (MaxDR)   designates   the   highest   data   rate.   For  
example,   DrRange   =   0x77   means   that   only   50   kbps   GFSK   is   allowed   on   a   channel   and  
DrRange  =  0x50  means  that  DR0  /  125  kHz  to  DR5  /  125  kHz  are  supported.  

9  

The  newly  defined  channel  is  enabled  and  can  immediately  be  used  for  communication.  

10  
11  
12  

The   end-­device   acknowledges   the   reception   of   a   NewChannelReq   by   sending   back   a  
NewChannelAns   command.   The   payload   of   this   message   contains   the   following  
information:  
1  
Status  

Size (bytes)
NewChannelAns Payload

13  

  

14  

The  status  (Status)  bits  have  the  following  meaning:  
Bits
Status

15  

7:2  
RFU  

1  
Data  rate  
range  ok  

  
  
Data  rate  range  ok  

Channel  frequency  ok  

0  
Channel  
frequency  ok  

Bit  =  0  
The  designated  data  rate  
range  exceeds  the  ones  
currently  defined  for  this  end-­
device  
The  device  cannot  use  this  
frequency  

Bit  =  1  
The  data  rate  range  is  
compatible  with  the  
possibilities  of  the  end-­
device  
The  device  is  able  to  use  this  
frequency.  

16  

Table  9:  NewChannelAns  status  bits  signification  

17  
18  

If  either  of  those  2  bits  equals  0,  the  command  did  not  succeed  and  the  new  channel  has  not  
been  created.  

19  
20  

5.7   Setting  delay  between  TX  and  RX  (RXTimingSetupReq,  
RXTimingSetupAns)  

21  
22  
23  

The  RXTimingSetupReq  command  allows  configuring  the  delay  between  the  end  of  the  TX  
uplink   and   the   opening   of   the   first   reception   slot.   The   second   reception   slot   opens   one  
second  after  the  first  reception  slot.  
Size (bytes)
RXTimingSetupReq Payload

1  
Settings  

24  

  

25  

The  delay  (Delay)  field  specifies  the  delay.  The  field  is  split  in  two  4-­bit  indexes:  
Bits
Settings

7:4  
RFU  

3:0  
Del  

26  

  

27  

The  delay  is  expressed  in  seconds.  Del  0  is  mapped  on  1  s.  
Del  
0  

©2015  LoRa™  Alliance  

Delay  [s]  
1  

Page  28  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  
2  
3  
..  
15  

1  
2  
3  
..  
15  

1  

Table  10:  Del  mapping  table  

2  

  

3  

An  end  device  answers  RXTimingSetupReq  with  RXTimingSetupAns  with  no  payload.  

4  
5  
6  
7  

The  RXTimingSetupAns  command  should  be  added  in  the  FOpt  field  of   all  uplinks  until  a  
class   A   downlink   is   received   by   the   end-­device.   This   guarantees   that   even   in   presence   of  
uplink  packet  loss,  the  network  is  always  aware  of  the  downlink  parameters  used  by  the  end-­
device.  

8  
9  

  

10  

  

  

©2015  LoRa™  Alliance  

Page  29  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

6   End-­Device  Activation  

2  
3  

To   participate   in   a   LoRaWAN   network,   each   end-­device   has   to   be   personalized   and  
activated.    

4  
5  
6  
7  

Activation   of   an   end-­device   can   be   achieved   in   two   ways,   either   via   Over-­The-­Air  
Activation   (OTAA)   when   an   end-­device   is   deployed   or   reset,   or   via   Activation   By  
Personalization  (ABP)  in  which  the  two  steps  of  end-­device  personalization  and  activation  
are  done  as  one  step.  

8  

6.1   Data  Stored  in  the  End-­device  after  Activation  

9  
10  
11  

After   activation,   the   following   information   is   stored   in   the   end-­device:   a   device   address  
(DevAddr),   an   application   identifier   (AppEUI),   a   network   session   key   (NwkSKey),   and   an  
application  session  key  (AppSKey).  

12  

6.1.1   End-­device  address  (DevAddr)  

13  
14  

The   DevAddr   consists   of   32   bits   identifies   the   end-­device   within   the   current   network.   Its  
format  is  as  follows:  
Bit#
DevAddr bits

[31..25]  
NwkID  

[24..0]  
NwkAddr  

15  
16  
17  
18  

The  most  significant  7  bits  are  used  as  network identifier  (NwkID)  to  separate  addresses  of  
territorially   overlapping   networks   of   different   network   operators   and   to   remedy   roaming  
issues.   The   least   significant   25   bits,   the   network address   (NwkAddr)   of   the   end-­device,  
can  be  arbitrarily  assigned  by  the  network  manager.  

19  

6.1.2   Application  identifier  (AppEUI)  

20  
21  

The  AppEUI  is  a  global  application  ID  in  IEEE  EUI64  address  space  that  uniquely  identifies  
the  application  provider  (i.e.,  owner)  of  the  end-­device.    

22  

The  AppEUI  is  stored  in  the  end-­device  before  the  activation  procedure  is  executed.  

23  

6.1.3   Network  session  key  (NwkSKey)  

24  
25  
26  
27  

The NwkSKey  is  a  network session key  specific  for  the  end-­device.  It  is  used  by  both  the  
network  server  and  the  end-­device  to  calculate  and  verify  the  MIC  (message  integrity  code)  
of  all  data  messages  to  ensure  data  integrity.    It  is  further  used  to  encrypt  and  decrypt  the  
payload  field  of  a  MAC-­only  data  messages.  

28  

6.1.4   Application  session  key  (AppSKey)  

29  
30  
31  
32  

The AppSKey  is  an  application session key  specific  for  the  end-­device.  It  is  used  by  both  
the   network   server   and   the   end-­device   to   encrypt   and   decrypt   the   payload   field   of  
application-­specific   data   messages.      It   is   also   used   to   calculate   and   verify   an   application-­
level  MIC  that  may  be  included  in  the  payload  of  application-­specific  data  messages.  

33  

6.2   Over-­the-­Air  Activation  

34  
35  
36  

For  over-­the-­air  activation,  end-­devices  must  follow  a  join  procedure  prior  to  participating  in  
data   exchanges   with   the   network   server.   An   end-­device   has   to   go   through      a   new   join  
procedure  every  time  it  has  lost  the  session  context  information.  
©2015  LoRa™  Alliance  

Page  30  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  

  
The  join  procedure  requires  the  end-­device  to  be  personalized  with  the  following  information  
before   its   starts   the   join   procedure:   a   globally   unique   end-­device   identifier   (DevEUI),   the  
application  identifier  (AppEUI),  and  an  AES-­128  key  (AppKey).    

4  

The  AppEUI  is  described  above  in  6.1.2.  

5  
6  
7  
8  
9  
10  
11  
12  
13  

Note:   For   over-­the-­air-­activation,   end-­devices   are   not   personalized  
with  any  kind  of  network  key.    Instead,  whenever  an  end-­device  joins  a  
network,  a  network  session  key  specific  for  that  end-­device  is  derived  
to   encrypt   and   verify   transmissions   at   the   network   level.      This   way,  
roaming   of   end-­devices   between   networks   of   different   providers   is  
facilitated.      Using   both   a   network   session   key   and   an   application  
session   key   further   allows   federated   network   servers   in   which  
application   data   cannot   be   read   or   tampered   with   by   the   network  
provider.  

14  

6.2.1   End-­device  identifier  (DevEUI)  

15  
16  

The DevEUI  is  a  global  end-­device  ID  in  IEEE  EUI64  address  space  that  uniquely  identifies  
the  end-­device.  

17  

6.2.2   Application  key  (AppKey)  

18  
19  
20  
21  
22  
23  

The AppKey is  an  AES-­128  application  key  specific  for  the  end-­device  that  is  assigned  by  
the  application  owner  to  the  end-­device  and  most  likely  derived  from  an  application-­specific  
root  key  exclusively  known  to  and  under  the  control  of  the  application  provider.1  Whenever  
an   end-­device   joins   a   network   via   over-­the-­air   activation,   the   AppKey   is   used   to   derive   the  
session   keys   NwkSKey   and   AppSKey   specific   for   that   end-­device   to   encrypt   and   verify  
network  communication  and  application  data.  

24  

6.2.3   Join  procedure  

25  
26  

From   an   end-­device’s   point   of   view,   the   join   procedure   consists   of   two   MAC   messages  
exchanged  with  the  server,  namely  a  join request  and  a  join accept.  

27  

6.2.4   Join-­request  message  

28  
29  
30  

The   join   procedure   is   always   initiated   from   the   end-­device   by   sending   a   join-­request  
message.  

  
8  

8  

2  

AppEUI  

DevEUI  

DevNonce  

Size (bytes)
Join Request

31  
32  

The  join-­request  message  contains  the  AppEUI  and  DevEUI  of  the  end-­device  followed  by  a  
nonce  of  2  octets  (DevNonce).      

                                                                                                 
1.  Since  all  end-­devices  end  up  with  unrelated  application  keys  specific  for  each  end-­device,  
extracting  the  AppKey  from  an  end-­device  only  compromises  this  one  end-­device.  

©2015  LoRa™  Alliance  

Page  31  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  

  
DevNonce   is   a   random   value.1      For   each   end-­device,   the   network   server   keeps   track   of   a  
certain   number   of   DevNonce   values   used   by   the   end-­device   in   the   past,   and   ignores   join  
requests  with  any  of  these  DevNonce  values  from  that  end-­device.    

4  
5  
6  

Note: This   mechanism   prevents   replay   attacks   by   sending   previously  
recorded  join-­request  messages  with  the  intention  of  disconnecting  the  
respective  end-­device  from  the  network.  

7  
8  
9  
10  
11  

The  message  integrity  code  (MIC)  value  (see  Chapter  4  for  MAC  message  description)  for  a  
join-­request  message  is  calculated  as  follows:2  
  
cmac  =  aes128_cmac(AppKey,  MHDR  |  AppEUI  |  DevEUI  |  DevNonce)  
  
MIC  =  cmac[0..3]  

12  

The  join-­request  message  is  not  encrypted.  

13  
14  
15  
16  

The   join-­request   message   can   be   transmitted   using   any   data   rate   and   following   a   random  
frequency  hopping  sequence  across  the  specified  join  channels.  It  is  recommended  to  use  a  
plurality  of  data  rates.  The  intervals  between  transmissions  of  Join-­Requests  shall  respect  
the  condition  described  in  chapter  8.  

17  

6.2.5   Join-­accept  message  

18  
19  
20  
21  
22  
23  

The  network  server  will  respond  to  the  join-­request  message  with  a  join-­accept  message  if  
the  end-­device  is  permitted  to  join  a  network.    The  join-­accept  message  is  sent  like  a  normal  
downlink  but  uses  delays  JOIN_ACCEPT_DELAY1  or  JOIN_ACCEPT_DELAY2  (instead  of  
RECEIVE_DELAY1  and  RECEIVE_DELAY2,  respectively).  The  channel  frequency  and  data  
rate  used  for  these  two  receive  windows  are  identical  to  the  one  used  for  the  RX1  and  RX2  
receive  windows  described  in  the  “receive  windows”  section  of  the  “Physical  Layer”  chapter  

24  

No  response  is  given  to  the  end-­device  if  the  join  request  is  not  accepted.  

25  
26  
27  
28  

The   join-­accept   message   contains   an   application nonce   (AppNonce)   of   3   octets,   a  
network  identifier  (NetID),  an  end-­device address  (DevAddr),  a  delay  between  TX  and  RX  
(RxDelay)   and   an   optional   list   of   channel   frequencies   (CFList)   for   the   network   the   end-­
device  is  joining.  The  CFList  option  is  region  specific  and  is  defined  in  Section  7.  

29  

  
Size (bytes)
Join Accept

3  

3  

4  

AppNonce   NetID   DevAddr  

1  

1  

(16)  Optional  

DLSettings  

RxDelay  

CFList  

30  
31  
32  
33  
34  

The  AppNonce  is  a  random  value  or  some  form  of  unique  ID  provided  by  the  network  server  
and   used   by   the   end-­device   to   derive   the   two   session   keys   NwkSKey   and   AppSKey   as  
follows:3  
NwkSKey  =  aes128_encrypt(AppKey,  0x01  |  AppNonce  |  NetID  |  DevNonce  |  pad16)  
AppSKey  =  aes128_encrypt(AppKey,  0x02  |  AppNonce  |  NetID  |  DevNonce  |  pad16)  

35  
36  
37  

The  MIC  value  for  a  join-­accept  message  is  calculated  as  follows:4  
cmac  =  aes128_cmac(AppKey,    
MHDR  |  AppNonce  |  NetID  |  DevAddr  |  DLSettings  |  RxDelay  |  CFList)  
                                                                                                 
1

  The  DevNonce  can  be  extracted  by  issuing  a  sequence  of  RSSI  measurements  under  the  
assumption  that  the  quality  of  randomness  fulfills  the  criteria  of  true  randomness  
2
  [RFC4493]  
3
  The  pad16  function  appends  zero  octets  so  that  the  length  of  the  data  is  a  multiple  of  16.  
4
  [RFC4493]  

©2015  LoRa™  Alliance  

Page  32  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

MIC  =  cmac[0..3]  

2  
3  
4  

The  join-­accept  message  itself  is  encrypted  with  the  AppKey  as  follows:  
aes128_decrypt(AppKey,  AppNonce  |  NetID  |  DevAddr  |  DLSettings  |  RxDelay  |  CFList  |  
MIC)  

5  
6  
7  
8  
9  

Note:   The   network   server   uses   an   AES   decrypt   operation   in   ECB  
mode   to   encrypt   the   join-­accept   message   so   that   the   end-­device   can  
use   an   AES   encrypt   operation   to   decrypt   the   message.      This   way   an  
end-­device  only  has  to  implement  AES  encrypt  but  not  AES  decrypt.  
  

10  
11  
12  
13  
14  
15  
16  
17  
18  

Note:   Establishing   these   two   session   keys   allows   for   a   federated  
network   server   infrastructure   in   which   network   operators   are   not   able  
to   eavesdrop   on   application   data.      In   such   a   setting,   the   application  
provider   must   support   the   network   operator   in   the   process   of   an  end-­
device   actually   joining   the   network   and   establishing   the   NwkSKey   for  
the  end-­device.    At  the  same  time  the  application  provider  commits  to  
the  network  operator  that  it  will  take  the  charges  for  any  traffic  incurred  
by   the   end-­device   and   retains   full   control   over   the   AppSKey   used   for  
protecting  its  application  data.  

19  
20  
21  
22  

The   format   of   the   NetID   is   as   follows:   The   seven   LSB   of   the   NetID   are   called   NwkID   and  
match   the   seven   MSB   of   the   short   address   of   an   end-­device   as   described   before.  
Neighboring   or   overlapping   networks   must   have   different   NwkIDs.   The   remaining   17   MSB  
can  be  freely  chosen  by  the  network  operator.  

23  

The  DLsettings  field  contains  the  downlink  configuration:  

24  

    
Bits
DLsettings

7  
RFU  

6:4  
RX1DRoffset  

3:0  
RX2  Data  rate  

25  
26  
27  
28  
29  

  
The  RX1DRoffset  field  sets  the  offset  between  the  uplink  data  rate  and  the  downlink  data  
rate  used  to  communicate  with  the  end-­device  on  the  first  reception  slot  (RX1).  By  default  
this  offset  is  0..  The  offset  is  used  to  take  into  account  maximum  power  density  constraints  
for  base  stations  in  some  regions  and  to  balance  the  uplink  and  downlink  radio  link  margins.  

30  
31  

The   actual   relationship   between   the   uplink   and   downlink   data   rate   is   region   specific   and  
detailed  in  the  “Physical  Layer”  section  

32  
33  

The   delay   RxDelay   follows   the   same   convention   as   the   Delay   field   in   the  
RXTimingSetupReq  command.  

34  

6.3   Activation  by  Personalization  

35  
36  
37  

Under  certain  circumstances,  end-­devices  can  be  activated  by  personalization.  Activation  by  
personalization  directly  ties  an  end-­device  to  a  specific  network  by-­passing  the  join  request  
-­  join  accept  procedure.    

38  
39  
40  
41  

Activating   an   end-­device   by   personalization   means   that   the   DevAddr   and   the   two   session  
keys  NwkSKey  and  AppSKey  are  directly  stored  into  the  end-­device  instead  of  the  DevEUI,  
AppEUI   and   the   AppKey.      The   end-­device   is   equipped   with   the   required   information   for  
participating  in  a  specific  LoRa  network  when  started.  

42  
43  

Each  device  should  have  a  unique  set  of  NwkSKey  and  AppSKey.  Compromising  the  keys  
of   one   device   shouldn’t   compromise   the   security   of   the   communications   of   other   devices.  
©2015  LoRa™  Alliance  

Page  33  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  

  
The  process  to  build  those  keys  should  be  such  that  the  keys  cannot  be  derived  in  any  way  
from  publicly  available  information  (like  the  node  address  for  example).    

©2015  LoRa™  Alliance  

Page  34  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

7   Physical  Layer  

2  

7.1   EU  863-­870MHz  ISM  Band  

3  

7.1.1   EU863-­870  Preamble  Format  

4  
5  

The  following  synchronization  words  should  be  used:  
  
Modulation
LORA
GFSK

Sync  word  
0x34  
0xC194C1  

Preamble  length  
8  symbols  
5  bytes  

6  

Table  11:  EU863-­870  synch  words  

7  

7.1.2   EU863-­870  ISM  Band  channel  frequencies  

8  

In  Europe,  radio  spectrum  allocation  is  the  ISM  band  is  defined  by  ETSI  [EN300.220].    

9  
10  
11  
12  

The   network   channels   can   be   freely   attributed   by   the   network   operator.   However   the   three  
following   default   channels   must   be   implemented   in   every   EU868MHz   end-­device.   Those  
channels  are  the  minimum  set  that  all  network  gateways  should  always  be  listening  on.  

  
Modulation

Bandwidth [kHz]

Channel
Frequency
[MHz]

LoRa  

125  

868.10  
868.30  
868.50  

FSK
Bitrate or
LoRa DR
/ Bitrate
DR0  to  
DR5    
/  0.3-­5  
kbps  

Nb
Channels

Duty
cycle

3  

<1%  

13  

Table  12:  EU863-­870  default  channels  

14  
15  
16  
17  
18  
19  

In  order  to  access  the  physical  medium  the  ETSI  regulations  impose  some  restrictions  such  
maximum  time  the  transmitter  can  be  on  or  the  maximum  time  a  transmitter  can  transmit  per  
hour.    The  ETSI  regulations  allow  the  choice  of  using  either  a  duty-­cycle  limitation  or  a  so-­
called   Listen Before Talk Adaptive Frequency Agility   (LBT   AFA)   transmissions  
management.      The   current   LoRaWAN   specification   exclusively   uses   duty-­cycled   limited  
transmissions  to  comply  with  the  ETSI  regulations.  

20  
21  
22  
23  

The   LoRaWAN   enforces   a   per   sub-­band   duty-­cycle   limitation.   Each   time   a   frame   is  
transmitted   in   a   given   sub-­band,   the   time   of   emission   and   the   on-­air   duration   of   the   frame  
are   recorded   for   this   sub-­band.   The   same   sub-­band   cannot   be   used   again   during   the   next  
Toff  seconds  where:  
TimeOnAir
Toff;<==0>? = 	  
− TimeOnAir  
DutyCycle;<==0>?

24  
25  
26  
27  
28  

During  the  unavailable  time  of  a  given  sub-­band,  the  device  may  still  be  able  to  transmit  on  
another  sub-­band.  If  all  sub-­bands  are  unavailable,  the  device  has  to  wait  before  any  further  
transmission.   The   device   adapts   its   channel   hoping   sequence   according   to   the   sub-­band  
availability.  

29  
30  
31  

Example:  A  device  just  transmitted  a  0.5  s  long  frame  on  one  default  channel.  This  channel  
is  in  a  sub-­band  allowing  1%  duty-­cycle.  Therefore  this  whole  sub-­band  (868  –  868.6)  will  be  
unavailable  for  49.5  s.    

32  

EU868MHz  ISM  band  end-­devices  should  use  the  following  default  parameters  
©2015  LoRa™  Alliance  

Page  35  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  
•   Default  radiated  transmit  output  power:  14  dBm  

1  
2  
3  
4  
5  

EU868MHz   end-­devices   should   be   capable   of   operating   in   the   863   to   870   MHz   frequency  
band   and   should   feature   a   channel   data   structure   to   store   the   parameters   of   at   least   16  
channels.   A   channel   data   structure   corresponds   to   a   frequency   and   a   set   of   data   rates  
usable  on  this  frequency.  

6  
7  
8  
9  

The  first  three  channels  correspond  to  868.1,  868.3,  and  868.5  MHz  /  DR0  to  DR5  and  must  
be   implemented   in   every   end-­device.   Those   default   channels   cannot   be   modified   through  
the   NewChannelReq   command   and   guarantee   a   minimal   common   channel   set   between  
end-­devices  and  network  gateways.  

10  
11  
12  
13  

The   following   table   gives   the   list   of   frequencies   that   should   be   used   by   end-­devices   to  
broadcast   the   JoinReq   message.   The   JoinReq   message   transmit   duty-­cycle   should   never  
exceed  0.1%  
  
Modulation

Bandwidth [kHz]

Channel
Frequency
[MHz]

  
LoRa  

125  

868.10  
868.30  
868.50  

FSK
Bitrate
or LoRa
DR
/ Bitrate
DR0  –  
DR5  
  /  0.3-­5  
kbps  

Nb
Channels

Duty
cycle

3  

<0.1%  

14  

Table  13:  EU863-­870  JoinReq  Channel  List  

15  

7.1.3   EU863-­870  Data  Rate  and  End-­device  Output  Power  encoding  

16  
17  

The  following  encoding  is  used  for  Data  Rate  (DR)  and  End-­device  Output  Power  (TXPower)  
in  the  EU863-­870  band:  

18  

  
DataRate

Configuration

0  
1  
2  
3  
4  
5  
6  
7  

LoRa:  SF12  /  125  kHz  
LoRa:  SF11  /  125  kHz  
LoRa:  SF10  /  125  kHz  
LoRa:  SF9  /  125  kHz  
LoRa:  SF8  /  125  kHz  
LoRa:  SF7  /  125  kHz  
LoRa:  SF7  /  250  kHz  
FSK:  50  kbps  

8..15  

RFU  

19  
20  

Indicative physical
bit rate [bit/s]
250  
440  
980  
1760  
3125  
5470  
11000  
50000  

Table  14:  TX  Data  rate  table  

  

©2015  LoRa™  Alliance  

  

Page  36  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
1  

  

  
TXPower
0  

Configuration
20  dBm  (if  
supported)  
14  dBm  
11  dBm  
8  dBm  
5  dBm  
2  dBm  
RFU  

1  
2  
3  
4  
5  
6..15  

2  

Table  15:  TX  power  table  

3  

  

4  
5  

7.1.4   EU863-­870  JoinAccept  CFList  

6  
7  

The   EU   863-­870   ISM   band   LoRaWAN   implements   an   optional   channel   frequency   list  
(CFlist)  of  16  octets  in  the  JoinAccept    message.  

8  
9  
10  
11  

In   this   case   the   CFList   is   a   list   of   five   channel   frequencies   for   the   channels   four   to   eight  
whereby   each   frequency   is   encoded   as   a   24   bits   unsigned   integer   (three   octets).   All   these  
channels   are   usable   for   DR0   to   DR5   125kHz   LoRa   modulation.   The   list   of   frequencies   is  
followed  by  a  single  RFU  octet  for  a  total  of  16  octets.  

12  

  

  

Size
(bytes)
CFList

3  

3  

3  

3  

3  

1  

Freq  Ch4  

Freq  Ch5  

Freq  Ch6  

Freq  Ch7  

Freq  Ch8  

RFU  

13  
14  
15  
16  
17  
18  
19  
20  

The   actual   channel   frequency   in   Hz   is   100   x   frequency   whereby   values   representing  
frequencies  below  100  MHz  are  reserved  for  future  use.  This  allows  setting  the  frequency  of  
a  channel  anywhere  between  100  MHz  to  1.67  GHz  in  100  Hz  steps.  Unused  channels  have  
a   frequency   value   of   0.   The   CFList   is   optional   and   its   presence   can   be   detected   by   the  
length  of  the  join-­accept  message.  If  present,  the  CFList  replaces  all  the  previous  channels  
stored  in  the  end-­device  apart  from  the  three  default  channels  as  defined  in  Chapter  7.  The  
newly   defined   channels   are   immediately   enabled   and   usable   by   the   end-­device   for  
communication.  

21  

7.1.5   EU863-­870  LinkAdrReq  command    

22  
23  
24  

The   EU863-­870   LoRaWAN   only   supports   a   maximum   of   16   channels.   When   ChMaskCntl  
field  is  0  the  ChMask  field  individually  enables/disables  each  of  the  16  channels.    
  
ChMaskCntl
0  
1  
..  
4  
5  
6  

25  

7  

ChMask applies to
Channels  1  to  16  
RFU  
..  
RFU  
RFU  
All  channels  ON  
The  device  should  enable  all  currently  defined  
channels  independently  of  the  ChMask  field  
value.    
RFU  

Table  16:  ChMaskCntl  value  table  

©2015  LoRa™  Alliance  

Page  37  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  

  
If   the   ChMaskCntl   field   value   is   one   of   values   meaning   RFU,   the   end-­device   should   reject  
the  command  and  unset  the  “Channel  mask  ACK”  bit  in  its  response.  

3  

7.1.6   EU863-­870  Maximum  payload  size  

4  
5  
6  
7  
8  
9  

The  maximum  MACPayload  size  length  (M)  is  given  by  the  following  table.  It  is  derived  from  
limitation   of   the   PHY   layer   depending   on   the   effective   modulation   rate   used   taking   into  
account  a  possible  repeater  encapsulation  layer.  The  maximum  application  payload  length  in  
the   absence   of   the   optional   FOpt   control   field   (N)   is   also   given   for   information   only.   The  
value  of  N  might  be  smaller  if  the  FOpt  field  is  not  empty:  
  
DataRate
0  
1  
2  
3  
4  
5  
6  
7  
8:15  

M
59  
59  
59  
123  
230  
230  
230  
230  

N
51  
51  
51  
115  
222  
222  
222  
222  
Not  defined  

10  

Table  17:  EU863-­870  maximum  payload  size  

11  
12  
13  

If   the   end-­device   will   never   operate   with   a   repeater   then   the   maximum   application   payload  
length  in  the  absence  of  the  optional  FOpt  control  field  should  be:  
  
DataRate
0  
1  
2  
3  
4  
5  
6  
7  
8:15  

M
59  
59  
59  
123  
250  
250  
250  
250  

N
51  
51  
51  
115  
242  
242  
242  
242  
Not  defined  

14  

Table  18  :  EU863-­870  maximum  payload  size  (not  repeater  compatible)  

15  

7.1.7   EU863-­870  Receive  windows  

16  
17  
18  
19  

The  RX1  receive  window  uses  the  same  channel  than  the  preceding  uplink.  The  data  rate  is  
a  function  of  the  uplink  data  rate  and  the  RX1DROffset  as  given  by  the  following  table.  The  
allowed   values   for   RX1DROffset   are   in   the   [0:5]   range.   Values   in   the   [6:7]   range   are  
reserved  for  future  use.  

20  

  

21  

  
RX1DROffset  
Upstream  data  rate  

0  

1  

DR0  
DR1  
DR2  

DR0  
DR1  
DR2  

DR0  
DR0  
DR1  

©2015  LoRa™  Alliance  

2  
3  
4  
Downstream  data  rate  in  RX1  slot  
DR0  
DR0  
DR0  

Page  38  of  85  
  

DR0  
DR0  
DR0  

DR0  
DR0  
DR0  

5  

DR0  
DR0  
DR0  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

RX1DROffset  
Upstream  data  rate  

0  

1  

2  
3  
4  
Downstream  data  rate  in  RX1  slot  

DR3  
DR4  
DR5  
DR6  
DR7  

DR3  
DR4  
DR5  
DR6  
DR7  

DR2  
DR3  
DR4  
DR5  
DR6  

DR1  
DR2  
DR3  
DR4  
DR5  

DR0  
DR1  
DR2  
DR3  
DR4  

DR0  
DR0  
DR1  
DR2  
DR3  

5  

DR0  
DR0  
DR0  
DR1  
DR2  

1  

  

2  
3  

The  RX2  receive  window  uses  a  fixed  frequency  and  data  rate.  The  default  parameters  are  
869.525  MHz  /  DR0  (SF12,  125  kHz)  

4  

7.1.8   EU863-­870  Default  Settings  

5  

The  following  parameters  are  recommended  values  for  the  EU863-­870MHz  band.      

6  
7  
8  
9  
10  
11  
12  
13  

RECEIVE_DELAY1     
RECEIVE_DELAY2     
JOIN_ACCEPT_DELAY1  
JOIN_ACCEPT_DELAY2  
MAX_FCNT_GAP  
  
ADR_ACK_LIMIT  
  
ADR_ACK_DELAY     
ACK_TIMEOUT  
  

14  
15  
16  
17  
18  
19  

If  the  actual  parameter  values  implemented  in  the  end-­device  are  different  from  those  default  
values   (for   example   the   end-­device   uses   a   longer   RECEIVE_DELAY1   and  
RECEIVE_DELAY2   latency),   those   parameters   must   be   communicated   to   the   network  
server   using   an   out-­of-­band   channel   during   the   end-­device   commissioning   process.   The  
network  server  may  not  accept  parameters  different  from  those  default  values.  

©2015  LoRa™  Alliance  

  
  
  
  
  
  
  
  

1  s  
2  s  (must  be  RECEIVE_DELAY1  +  1s)  
5  s  
6  s  
16384  
64  
32  
2  +/-­  1  s  (random  delay  between  1  and  3  seconds)  

Page  39  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

7.2   US  902-­928MHz  ISM  Band  

2  

7.2.1   US902-­928  Preamble  Format  

3  
4  

The  following  synchronization  words  should  be  used:  
  
Modulation
LORA

Sync  word  
0x34  

Preamble  length  
8  symbols  

5  

LoRaWAN  does  not  make  use  of  GFSK  modulation  in  the  US902-­928  ISM  band.  

6  

7.2.2   US902-­928  Channel  Frequencies  

7  
8  
9  
10  
11  
12  
13  
14  
15  

The  915  MHz  ISM  Band  shall  be  divided  into  the  following  channel  plans.  
•   Upstream  –  64  channels  numbered  0  to  63  utilizing  LoRa  125  kHz  BW  varying  from  
DR0  to  DR3,  using  coding  rate  4/5,  starting  at  902.3  MHz  and  incrementing  linearly  
by  200  kHz  to  914.9  MHz  
•   Upstream  –  8  channels  numbered  64  to  71  utilizing  LoRa  500  kHz  BW  at  DR4  
starting  at  903.0  MHz  and  incrementing  linearly  by  1.6  MHz  to  914.2  MHz  
•   Downstream  –  8  channels  numbered  0  to  7  utilizing  LoRa  500  kHz  BW  at  DR8  to  
DR13)  starting  at  923.3  MHz  and  incrementing  linearly  by  600  kHz  to  927.5  MHz  
  
8x  downlink  channels

64  +  8    uplink  channels

….

….
902.3

903.0

904.6

914.2

923.3

923.9

927.5

16  
17  

Figure  10:  US902-­928  channel  frequencies  

18  
19  
20  
21  
22  
23  

915  MHz  ISM  band  end-­devices  should  use  the  following  default  parameters:  
•   Default  radiated  transmit  output  power:  20  dBm  
o   Devices,  when  transmitting  with  125  kHz  BW  may  use  a  maximum  of  
+30  dBm.  The  transmission  should  never  last  more  than  400  ms.  
o   Devices,  when  transmitting  with  500  kHz  BW  may  use  a  maximum  of  
+26  dBm  

24  
25  
26  
27  

US902-­928   end-­devices   should   be   capable   of   operating   in   the   902   to   928   MHz   frequency  
band  and  should  feature  a  channel  data  structure  to  store  the  parameters  of  72  channels.  A  
channel   data   structure   corresponds   to   a   frequency   and   a   set   of   data   rates   usable   on   this  
frequency.  

28  
29  
30  
31  

If  using  the  over-­the-­air  activation  procedure,  the  end-­device  should  broadcast  the  JoinReq  
message  alternatively  on  a  random  125  kHz  channel  amongst  the  64  channels  defined  using  
DR0  and  a  random  500  kHz  channel  amongst  the  8  channels  defined  using  DR4.  The  end-­
device  should  change  channel  for  every  transmission.  

32  

Personalized  devices  shall  have  all  72  channels  enabled  following  a  reset.  

©2015  LoRa™  Alliance  

Page  40  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  

  

  

1  

7.2.3   US902-­928  Data  Rate  and  End-­device  Output  Power  encoding  

2  
3  

The   following   encoding   is   used   for   Data   Rate   (DR)   and   End-­device   Output   Power  
(TXPower)  in  the  US902-­928  band:  

4  

  
DataRate

Configuration

0  
1  
2  
3  
4  
5:7  
8  
9  
10  
11  
12  
13  
14:15  

LoRa:  SF10  /  125  kHz  
LoRa:  SF9  /  125  kHz  
LoRa:  SF8  /  125  kHz  
LoRa:  SF7  /  125  kHz  
LoRa:  SF8  /  500  kHz  
RFU  
LoRa:  SF12  /  500  kHz  
LoRa:  SF11  /  500  kHz  
LoRa:  SF10  /  500  kHz  
LoRa:  SF9  /  500  kHz  
LoRa:  SF8  /  500  kHz  
LoRa:  SF7  /  500  kHz  
RFU  

5  
6  
7  
8  

Indicative
physical bit
rate [bit/sec]
980  
1760  
3125  
5470  
12500  
  
980  
1760  
3900  
7000  
12500  
21900  
  

Table  19:  TX  Data  rate  table  

Note:   DR4   is   purposely   identical   to   DR12,   DR8..13   must   be  
implemented  in  end-­devices  and  are  reserved  for  future  applications)  
  
TXPower
0  
1  
2  
3  :  9  
10  
11:15  

9  

Configuration
30  dBm  –  2*TXpower  
28  dBm  
26  dBm  
….  
10  dBm  
RFU  

Table  20:  TX  power  table  

10  
11  
12  

  
  
  

13  

7.2.4   US902-­928  JoinAccept  CFList  

14  
15  

The  US902-­928  LoRaWAN  does  not  support  the  use  of  the  optional  CFlist  appended  to  the  
JoinAccept  message.  If  the  CFlist  is  not  empty  it  is  ignored  by  the  end-­device.  

16  

7.2.5   US902-­928  LinkAdrReq  command    

17  
18  
19  

For   the   US902-­928   version   the   ChMaskCntl   field   of   the   LinkADRReq   command   has   the  
following  meaning:  
  
ChMaskCntl
0  
1  
..  
4  

ChMask applies to
Channels  0  to  15  
Channels  16  to  31  
..  
Channels  64  to  71  

©2015  LoRa™  Alliance  

Page  41  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
ChMaskCntl
5  
6  
7  

  

ChMask applies to
RFU  
All  125  kHz  ON  
ChMask  applies  to  
channels  64  to  71  
All  125  kHz  OFF  
ChMask  applies  to  
channels  64  to  71  

1  

Table  21:  ChMaskCntl  value  table  

2  
3  

If   ChMaskCntl   =   6   (resp   7)   then   125   kHz   channels   are   enabled   (resp   disabled).  
Simultaneously  the  channels  64  to  71  are  set  according  to  the  ChMask  bit  mask.  

4  
5  
6  
7  

Note:  FCC  regulation  requires  hopping  over  at  least  50  channels  when  
using   maximum   output   power.   It   is   possible   to   have   end-­devices   with  
less   channels   (at   least   six   125   kHz   channels)   when   limiting   the   end-­
device  transmit  power  to  21  dBm.  

8  
9  
10  
11  
12  
13  
14  

7.2.6   US902-­928  Maximum  payload  size  
The  maximum  MACPayload  size  length  (M)  is  given  by  the  following  table.  It  is  derived  from  
the   maximum   allowed   transmission   time   at   the   PHY   layer   taking   into   account   a   possible  
repeater   encapsulation.   The   maximum   application   payload   length   in   the   absence   of   the  
optional  FOpt  MAC  control  field  (N)  is  also  given  for  information  only.  The  value  of  N  might  
be  smaller  if  the  FOpt  field  is  not  empty:  
  
DataRate
0  
1  
2  
3  
4  
5:7  
8  
9  
10  
11  
12  
13  
14:15  

M
19  
61  
134  
250  
250  

N
11  
53  
126  
242  
242  
Not  defined  

41  
117  
230  
230  
230  
230  

33  
109  
222  
222  
222  
222  
Not  defined  

15  

Table  22:  US902-­928  maximum  payload  size  (repeater  compatible)  

16  
17  

The  greyed  lines  correspond  to  the  data  rates  that  may  be  used  by  an  end-­device  behind  a  
repeater.  

18  
19  
20  

If  the  end-­device  will  never  operate  under  a  repeater  then  the  maximum  application  payload  
length  in  the  absence  of  the  optional  FOpt  control  field  should  be:  
  
DataRate
0  
1  
2  
3  
4  
5:7  

M
19  
61  
134  
250  
250  

©2015  LoRa™  Alliance  

N
11  
53  
126  
242  
242  
Not  defined  

Page  42  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  

8  
9  
10  
11  
12  
13  
14:15  

  

61  
137  
250  
250  
250  
250  

53  
129  
242  
242  
242  
242  
Not  defined  

Table  23  :  US902-­928  maximum  payload  size  (not  repeater  compatible)  

©2015  LoRa™  Alliance  

Page  43  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
1  
2  
3  
4  
5  
6  
7  
8  

  

7.2.7   US902-­928  Receive  windows  
•   The  RX1  receive  channel  is  a  function  of  the  upstream  channel  used  to  initiate  the  
data  exchange.  The  RX1  receive  channel  can  be  determined  as  follows.  
o   RX1  Channel  Number  =  Transmit  Channel  Number  modulo  8  
•   The  RX1  window  data  rate  depends  on  the  transmit  data  rate  (see  Table  24  below).  
•   The  RX2  (second  receive  window)  settings  uses  a  fixed  data  rate  and  frequency.  
Default  parameters  are  923.3MHz  /  DR8    
  
Upstream  data  rate  

9  

Downstream  data  rate  

RX1DROffset  
DR0  
DR1  
DR2  
DR3  
DR4  
  
  
  
  
  
  
  

0  
DR10  
DR11  
DR12  
DR13  
DR13  
  
  
  
  
  
  

1  
DR9  
DR10  
DR11  
DR12  
DR13  
  
  
  
  
  
  

Table  24:  Data  rate  mapping  

2  
DR8  
DR9  
DR10  
DR11  
DR12  
  
  
  
  
  
  

3  
DR8  
DR8  
DR9  
DR10  
DR11  
  
  
  
  
  
  
  

10  
11  

The   allowed   values   for   RX1DROffset   are   in   the   [0:3]   range.   Values   in   the   range   [4:7]   are  
reserved  for  future  use.  

12  

7.2.8   US902-­928  Default  Settings  

13  
14  
15  
16  
17  
18  
19  
20  
21  

The  following  parameters  are  recommended  values  for  the  US902-­928  band.      
RECEIVE_DELAY1     
  
1  s  
RECEIVE_DELAY2     
  
2  s  (must  be  RECEIVE_DELAY1  +  1s)  
JOIN_ACCEPT_DELAY1  
  
5  s  
JOIN_ACCEPT_DELAY2  
  
6  s  
MAX_FCNT_GAP  
  
  
16384  
ADR_ACK_LIMIT  
  
  
64  
ADR_ACK_DELAY     
  
32  
ACK_TIMEOUT  
  
  
2  +/-­  1  s  (random  delay  between  1  and  3  seconds)  

22  
23  
24  
25  
26  
27  

If  the  actual  parameter  values  implemented  in  the  end-­device  are  different  from  those  default  
values   (for   example   the   end-­device   uses   a   longer   RECEIVE_DELAY1   &   2   latency),   those  
parameters   must   be   communicated   to   the   network   server   using   an   out-­of-­band   channel  
during   the   end-­device   commissioning   process.   The   network   server   may   not   accept  
parameters  different  from  those  default  values.  

©2015  LoRa™  Alliance  

Page  44  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

7.3   China  779-­787MHz  ISM  Band  

2  

7.3.1   CN779-­787  Preamble  Format  

3  
4  

The  following  synchronization  words  should  be  used  :  
  
Modulation
LORA
GFSK

Sync  word  
0x34  
0xC194C1  

Preamble  length  
8  symbols  
5  bytes  

5  

Table  25:  CN779-­787    synch  words  

6  
7  

7.3.2   CN779-­787  ISM  Band  channel  frequencies  

8  
9  

The  LoRaWAN  can  be  used  in  the  Chinese  779-­787MHz  band  as  long  as  the  radio  device  
EIRP  is  less  than  10mW  (or  10dBm).    

  

10  

The  end-­device  transmit  duty-­cycle  should  be  lower  than  1%.  

11  
12  
13  

The  LoRaWAN  channels  center  frequency  can  be  in  the  following  range:  
•   Minimum  frequency  :  779.5MHz  
•   Maximum  frequency  :  786.5  MHz  

14  
15  
16  
17  

CN780MHz   end-­devices   should   be   capable   of   operating   in   the   779   to   787   MHz   frequency  
band   and   should   feature   a   channel   data   structure   to   store   the   parameters   of   at   least   16  
channels.   A   channel   data   structure   corresponds   to   a   frequency   and   a   set   of   data   rates  
usable  on  this  frequency.  

18  
19  
20  
21  
22  

The   first   three   channels   correspond   to   779.5,   779.7   and   779.9   MHz   with   DR0   to   DR5   and  
must   be   implemented   in   every   end-­device.   Those   default   channels   cannot   be   modified  
through   the   NewChannelReq   command   and   guarantee   a   minimal   common   channel   set  
between  end-­devices  and  gateways  of  all  networks.  Other  channels  can  be  freely  distributed  
across  the  allowed  frequency  range  on  a  network  per  network  basis.  

23  
24  
25  
26  

The   following   table   gives   the   list   of   frequencies   that   should   be   used   by   end-­devices   to  
broadcast   the   JoinReq   message.   The   JoinReq   message   transmit   duty-­cycle   should   never  
exceed  0.1%  
  
Modulation

Bandwidth [kHz]

Channel
Frequency
[MHz]

  
LoRa  

125  

779.5  
779.7  
779.9  
780.5  
780.7  
780.9  

FSK
Bitrate
or LoRa
DR
/ Bitrate
DR0  –  
DR5  
  /  0.3-­5  
kbps  

Nb
Channels

Duty
cycle

6  

<0.1%  

27  

Table  26:  CN780  JoinReq  Channel  List  

28  

7.3.3   CN779-­787    Data  Rate  and  End-­device  Output  Power  encoding  

29  
30  

The  following  encoding  is  used  for  Data  Rate  (DR)  and  End-­device  Output  Power  (TXPower)  
in  the  CN780  band:  
©2015  LoRa™  Alliance  

Page  45  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

DataRate

Configuration

0  
1  
2  
3  
4  
5  
6  
7  

LoRa:  SF12  /  125  kHz  
LoRa:  SF11  /  125  kHz  
LoRa:  SF10  /  125  kHz  
LoRa:  SF9  /  125  kHz  
LoRa:  SF8  /  125  kHz  
LoRa:  SF7  /  125  kHz  
LoRa:  SF7  /  250  kHz  
FSK:  50  kbps  

8..15  

RFU  

1  

Indicative physical
bit rate [bit/s]
250  
440  
980  
1760  
3125  
5470  
11000  
50000  

TXPower

Configuration

  
  
  
  
  
  
  
  

0  
1  
2  
3  
4  
5  
6..15  
  

10  dBm    
7  dBm  
4  dBm  
1  dBm  
-­2  dBm  
-­5  dBm  
RFU  
  

  

  

  

Table  27:  Data  rate  and  TX  power  table  

2  

7.3.4   CN779-­787  JoinAccept  CFList  

3  
4  

The  CN780  ISM  band  LoRaWAN  implements  an  optional  channel  frequency  list  (CFlist)  of  
16  octets  in  the  JoinAccept    message.  

5  
6  
7  
8  

In   this   case   the   CFList   is   a   list   of   five   channel   frequencies   for   the   channels   four   to   eight  
whereby   each   frequency   is   encoded   as   a   24   bits   unsigned   integer   (three   octets).   All   these  
channels   are   usable   for   DR0   to   DR5   125kHz   LoRa   modulation.   The   list   of   frequencies   is  
followed  by  a  single  RFU  octet  for  a  total  of  16  octets.  

9  

  
Size
(bytes)
CFList

3  

3  

3  

3  

3  

1  

Freq  Ch4  

Freq  Ch5  

Freq  Ch6  

Freq  Ch7  

Freq  Ch8  

RFU  

10  
11  
12  
13  
14  
15  

The   actual   channel   frequency   in   Hz   is   100   x   frequency   whereby   values   representing  
frequencies  below  100  MHz  are  reserved  for  future  use.  This  allows  setting  the  frequency  of  
a  channel  anywhere  between  100  MHz  to  1.67  GHz  in  100  Hz  steps.  Unused  channels  have  
a   frequency   value   of   0.   The   CFList   is   optional   and   its   presence   can   be   detected   by   the  
length  of  the  join-­accept  message.  If  present,  the  CFList  replaces  all  the  previous  channels  
stored  in  the  end-­device  apart  from  the  three  default  channels  as  defined  in  Chapter  6.  

16  
17  

The   newly   defined   channels   are   immediately   enabled   and   usable   by   the   end-­device   for  
communication.  

©2015  LoRa™  Alliance  

Page  46  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  
4  
5  

  

7.3.5   CN779-­787    LinkAdrReq  command    
  
The  CN780  LoRaWAN  only  supports  a  maximum  of  16  channels.  When  ChMaskCntl  field  is  
0  the  ChMask  field  individually  enables/disables  each  of  the  16  channels.    
  
ChMaskCntl
0  
1  
..  
4  
5  
6  

7  

ChMask applies to
Channels  1  to  16  
RFU  
..  
RFU  
RFU  
All  channels  ON  
The  device  should  enable  all  currently  defined  
channels  independently  of  the  ChMask  field  
value.    
RFU  

6  

Table  28:  ChMaskCntl  value  table  

7  
8  

If  the  ChMask  field  value  is  one  of  values  meaning  RFU,  then  end-­device  should  reject  the  
command  and  unset  the  “Channel  mask  ACK”  bit  in  its  response.  

9  

7.3.6   CN779-­787    Maximum  payload  size  

10  
11  
12  
13  
14  
15  

The  maximum  MACPayload  size  length  (M)  is  given  by  the  following  table.  It  is  derived  from  
limitation   of   the   PHY   layer   depending   on   the   effective   modulation   rate   used   taking   into  
account  a  possible  repeater  encapsulation  layer.  The  maximum  application  payload  length  in  
the   absence   of   the   optional   FOpt   control   field   (N)   is   also   given   for   information   only.   The  
value  of  N  might  be  smaller  if  the  FOpt  field  is  not  empty:  
  
DataRate
0  
1  
2  
3  
4  
5  
6  
7  
8:15  

M
59  
59  
59  
123  
230  
230  
250  
230  

N
51  
51  
51  
115  
222  
222  
242  
222  
Not  defined  

16  

Table  29:  CN780  maximum  payload  size  

17  
18  
19  

If  the  end-­device  will  never  operate  with    a  repeater  then  the  maximum  application  payload  
length  in  the  absence  of  the  optional  FOpt  control  field  should  be:  
  
DataRate
0  
1  
2  
3  
4  
5  
6  
7  

M
59  
59  
59  
123  
250  
250  
250  
250  

©2015  LoRa™  Alliance  

N
51  
51  
51  
115  
242  
242  
242  
242  

Page  47  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
8:15  

  
Not  defined  

1  

Table  30  :  CN780  maximum  payload  size  (not  repeater  compatible)  

2  

7.3.7   CN779-­787  Receive  windows  

3  
4  
5  
6  

The  RX1  receive  window  uses  the  same  channel  than  the  preceding  uplink.  The  data  rate  is  
a  function  of  the  uplink  data  rate  and  the  RX1DROffset  as  given  by  the  following  table.  The  
allowed   values   for   RX1DROffset   are   in   the   [0:5]   range.   Values   in   the   range   [6:7]   are  
reserved  for  future  use  

7  

  

8  

RX1DROffset  
Upstream  data  rate  

0  

1  

2  
3  
4  
Downstream  data  rate  in  RX1  slot  

DR0  
DR1  
DR2  
DR3  
DR4  
DR5  
DR6  
DR7  

DR0  
DR1  
DR2  
DR3  
DR4  
DR5  
DR6  
DR7  

DR0  
DR0  
DR1  
DR2  
DR3  
DR4  
DR5  
DR6  

DR0  
DR0  
DR0  
DR1  
DR2  
DR3  
DR4  
DR5  

DR0  
DR0  
DR0  
DR0  
DR1  
DR2  
DR3  
DR4  

DR0  
DR0  
DR0  
DR0  
DR0  
DR1  
DR2  
DR3  

5  

DR0  
DR0  
DR0  
DR0  
DR0  
DR0  
DR1  
DR2  

  

9  
10  

The  RX2  receive  window  uses  a  fixed  frequency  and  data  rate.  The  default  parameters  are  
786  MHz  /  DR0.    

11  

7.3.8   CN779-­787    Default  Settings  

12  
13  
14  
15  
16  
17  
18  
19  
20  

The  following  parameters  are  recommended  values  for  the  CN779-­787MHz  band.      
RECEIVE_DELAY1     
  
1  s  
RECEIVE_DELAY2     
  
2  s  (must  be  RECEIVE_DELAY1  +  1s)  
JOIN_ACCEPT_DELAY1  
  
5  s  
JOIN_ACCEPT_DELAY2  
  
6  s  
MAX_FCNT_GAP  
  
  
16384  
ADR_ACK_LIMIT  
  
  
64  
ADR_ACK_DELAY     
  
32  
ACK_TIMEOUT  
  
  
2  +/-­  1  s  (random  delay  between  1  and  3  seconds)  

21  
22  
23  
24  
25  

If  the  actual  parameter  values  implemented  in  the  end-­device  are  different  from  those  default  
values   (for   example   the   end-­device   uses   a   longer   RECEIVE_DELAY1   and  
RECEIVE_DELAY2   latency),   those   parameters   must   be   communicated   to   the   network  
server   using   an   out-­of-­band   channel   during   the   end-­device   commissioning   process.   The  
network  server  may  not  accept  parameters  different  from  those  default  values.  

©2015  LoRa™  Alliance  

Page  48  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

7.4   EU  433MHz  ISM  Band  

2  

7.4.1   EU433  Preamble  Format  

3  
4  

The  following  synchronization  words  should  be  used  :  
  
Modulation
LORA
GFSK

Sync  word  
0x34  
0xC194C1  

Preamble  length  
8  symbols  
5  bytes  

5  

Table  31:  EU433  synch  words  

6  

7.4.2   EU433  ISM  Band  channel  frequencies  

7  
8  

The   LoRaWAN   can   be   used   in   the   ETSI   433-­434   MHz   band   as   long   as   the   radio   device  
EIRP  is  less  than  10  mW  (or  10  dBm).    

9  

The  end-­device  transmit  duty-­cycle  should  be  lower  than  1%1.  

10  
11  
12  

The  LoRaWAN  channels  center  frequency  can  be  in  the  following  range:  
•   Minimum  frequency  :  433.175  MHz  
•   Maximum  frequency  :  434.665  MHz  

13  
14  
15  
16  

EU433  end-­devices  should  be  capable  of  operating  in  the  433.05  to  434.79  MHz  frequency  
band   and   should   feature   a   channel   data   structure   to   store   the   parameters   of   at   least   16  
channels.   A   channel   data   structure   corresponds   to   a   frequency   and   a   set   of   data   rates  
usable  on  this  frequency.  

17  
18  
19  
20  
21  

The  first  three  channels  correspond  to  433.175,  433.375  and  433.575  MHz  with  DR0  to  DR5  
and  must  be  implemented  in  every  end-­device.  Those  default  channels  cannot  be  modified  
through   the   NewChannelReq   command   and   guarantee   a   minimal   common   channel   set  
between  end-­devices  and  gateways  of  all  networks.  Other  channels  can  be  freely  distributed  
across  the  allowed  frequency  range  on  a  network  per  network  basis.  

22  
23  
24  
25  

The   following   table   gives   the   list   of   frequencies   that   should   be   used   by   end-­devices   to  
broadcast   the   JoinReq   message.   The   JoinReq   message   transmit   duty-­cycle   should   never  
exceed  0.1%  
  
Modulation

Bandwidth [kHz]

Channel
Frequency
[MHz]

  
LoRa  

125  

433.175  
433.375  
433.575  
  

FSK
Bitrate or
LoRa DR
/ Bitrate
DR0  –  
DR5  
  /  0.3-­5  
kbps  

Nb
Channels

Duty
cycle

3  

<1%  

26  

Table  32:  EU433  JoinReq  Channel  List  

27  

7.4.3   EU433  Data  Rate  and  End-­device  Output  Power  encoding  

28  
29  

The  following  encoding  is  used  for  Data  Rate  (DR)  and  End-­device  Output  Power  (TXPower)  
in  the  EU433  band:  
                                                                                                 
1

  The  EN300220  ETSI  standard  limits  to  10%  the  maximum  transmit  duty-­cycle  in  the  433MHz  ISM  
band.  The  LoRaWAN  requires  a  1%  transmit  duty-­cycle  lower  than  the  legal  limit  to  avoid  network  
congestion.  

©2015  LoRa™  Alliance  

Page  49  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

DataRate

Configuration

0  
1  
2  
3  
4  
5  
6  
7  

LoRa:  SF12  /  125  kHz  
LoRa:  SF11  /  125  kHz  
LoRa:  SF10  /  125  kHz  
LoRa:  SF9  /  125  kHz  
LoRa:  SF8  /  125  kHz  
LoRa:  SF7  /  125  kHz  
LoRa:  SF7  /  250  kHz  
FSK:  50  kbps  

8..15  

RFU  

1  

Indicative physical
bit rate [bit/s]
250  
440  
980  
1760  
3125  
5470  
11000  
50000  

TXPower

Configuration

  
  
  
  
  
  
  
  

0  
1  
2  
3  
4  
5  
6..15  
  

10  dBm    
7  dBm  
4  dBm  
1  dBm  
-­2  dBm  
-­5  dBm  
RFU  
  

  

  

  

Table  33:  Data  rate  and  TX  power  table  

2  
3  
4  
5  

7.4.4   EU433  JoinAccept  CFList  

6  
7  
8  
9  

In   this   case   the   CFList   is   a   list   of   five   channel   frequencies   for   the   channels   four   to   eight  
whereby   each   frequency   is   encoded   as   a   24   bits   unsigned   integer   (three   octets).   All   these  
channels   are   usable   for   DR0   to   DR5   125   kHz   LoRa   modulation.   The   list   of   frequencies   is  
followed  by  a  single  RFU  octet  for  a  total  of  16  octets.  

10  

  
The  EU433  ISM  band  LoRaWAN  implements  an  optional  channel  frequency  list  (CFlist)  of  
16  octets  in  the  JoinAccept  message.  

  
Size
(bytes)
CFList

3  

3  

3  

3  

3  

1  

Freq  Ch4  

Freq  Ch5  

Freq  Ch6  

Freq  Ch7  

Freq  Ch8  

RFU  

11  
12  
13  
14  
15  
16  

The   actual   channel   frequency   in   Hz   is   100   x   frequency   whereby   values   representing  
frequencies  below  100  MHz  are  reserved  for  future  use.  This  allows  setting  the  frequency  of  
a  channel  anywhere  between  100  MHz  to  1.67  GHz  in  100  Hz  steps.  Unused  channels  have  
a   frequency   value   of   0.   The   CFList   is   optional   and   its   presence   can   be   detected   by   the  
length  of  the  join-­accept  message.  If  present,  the  CFList  replaces  all  the  previous  channels  
stored  in  the  end-­device  apart  from  the  three  default  channels  as  defined  in  Chapter  6.  

17  
18  

The   newly   defined   channels   are   immediately   enabled   and   usable   by   the   end-­device   for  
communication.  

©2015  LoRa™  Alliance  

Page  50  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

7.4.5   EU433  LinkAdrReq  command    

2  
3  
4  

The  EU433  LoRaWAN  only  supports  a  maximum  of  16  channels.  When  ChMaskCntl  field  is  
0  the  ChMask  field  individually  enables/disables  each  of  the  16  channels.    
  
ChMaskCntl
0  
1  
..  
4  
5  
6  

7  

ChMask applies to
Channels  1  to  16  
RFU  
..  
RFU  
RFU  
All  channels  ON  
The  device  should  enable  all  currently  defined  
channels  independently  of  the  ChMask  field  
value.    
RFU  

5  

Table  34:  ChMaskCntl  value  table  

6  
7  

If  the    ChMask  field  value  is  one  of  the  values  meaning    RFU,  then  end-­device  should  reject  
the  command  and  unset  the  “Channel  mask  ACK”  bit  in  its  response.  

8  

7.4.6   EU433  Maximum  payload  size  

9  
10  
11  
12  
13  
14  

The  maximum  MACPayload  size  length  (M)  is  given  by  the  following  table.  It  is  derived  from  
limitation   of   the   PHY   layer   depending   on   the   effective   modulation   rate   used   taking   into  
account  a  possible  repeater  encapsulation  layer.  The  maximum  application  payload  length  in  
the   absence   of   the   optional   FOpt   control   field   (N)   is   also   given   for   information   only.   The  
value  of  N  might  be  smaller  if  the  FOpt  field  is  not  empty:  
  
DataRate
0  
1  
2  
3  
4  
5  
6  
7  
8:15  

M
59  
59  
59  
123  
230  
230  
230  
230  

N
51  
51  
51  
115  
222  
222  
222  
222  
Not  defined  

15  

Table  35:  EU433  maximum  payload  size  

16  
17  
18  

If  the  end-­device  will  never  operate  with  a  repeater  then  the  maximum  application  payload  
length  in  the  absence  of  the  optional  FOpt  control  field  should  be:  
  
DataRate
0  
1  
2  
3  
4  
5  
6  
7  

M
59  
59  
59  
123  
250  
250  
250  
250  

©2015  LoRa™  Alliance  

N
51  
51  
51  
115  
242  
242  
242  
242  

Page  51  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
8:15  

  
Not  defined  

1  

Table  36  :  EU433  maximum  payload  size  (not  repeater  compatible)  

2  

  

3  

7.4.7   EU433  Receive  windows  

4  
5  
6  
7  

The  RX1  receive  window  uses  the  same  channel  than  the  preceding  uplink.  The  data  rate  is  
a  function  of  the  uplink  data  rate  and  the  RX1DROffset  as  given  by  the  following  table.  The  
allowed   values   for   RX1DROffset   are   in   the   [0:5]   range.   Values   in   the   range   [6:7]   are  
reserved  for  future  use.  

8  

  
RX1DROffset  
Upstream  data  rate  

0  

1  

2  
3  
4  
Downstream  data  rate  in  RX1  slot  

DR0  
DR1  
DR2  
DR3  
DR4  
DR5  
DR6  
DR7  

DR0  
DR1  
DR2  
DR3  
DR4  
DR5  
DR6  
DR7  

DR0  
DR0  
DR1  
DR2  
DR3  
DR4  
DR5  
DR6  

DR0  
DR0  
DR0  
DR1  
DR2  
DR3  
DR4  
DR5  

DR0  
DR0  
DR0  
DR0  
DR1  
DR2  
DR3  
DR4  

DR0  
DR0  
DR0  
DR0  
DR0  
DR1  
DR2  
DR3  

5  

DR0  
DR0  
DR0  
DR0  
DR0  
DR0  
DR1  
DR2  

9  

  

10  

  

11  

  

12  
13  

The  RX2  receive  window  uses  a  fixed  frequency  and  data  rate.  The  default  parameters  are  
434.665MHz  /  DR0  (SF12,  125kHz)  

14  

7.4.8   EU433  Default  Settings  

15  
16  
17  
18  
19  
20  
21  
22  
23  
24  
25  
26  
27  
28  
29  
30  

The  following  parameters  are  recommended  values  for  the  EU433band.      
RECEIVE_DELAY1     
  
1  s  
RECEIVE_DELAY2     
  
2  s  (must  be  RECEIVE_DELAY1  +  1s)  
JOIN_ACCEPT_DELAY1  
  
5  s  
JOIN_ACCEPT_DELAY2  
  
6  s  
MAX_FCNT_GAP  
  
  
16384  
ADR_ACK_LIMIT  
  
  
64  
ADR_ACK_DELAY     
  
32  
ACK_TIMEOUT  
  
  
2  +/-­  1  s  (random  delay  between  1  and  3  seconds)  
  
If  the  actual  parameter  values  implemented  in  the  end-­device  are  different  from  those  default  
values  (for  example  the  end-­device  uses  a  longer  RECEIVE_DELAY1  &  2  latency)  ,  those  
parameters  must  be  communicated  to  the  network  server  using  an  out-­of-­band  channel  
during  the  end-­device  commissioning  process.  The  network  server  may  not  accept  
parameters  different  from  those  default  values.  
  

©2015  LoRa™  Alliance  

Page  52  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  

  

8   Retransmissions  back-­off  
  
Uplink  frames  that:  
•   Require  an  acknowledgement  by  the  network  or  an  application  server,  and  are  
retransmitted  by  the  device  if  the  acknowledgement  is  not  received.  
and  
•   can  be  triggered  by  an  external  event  causing  synchronization  across  a  large  
(>100)  number  of  devices  (power  outage,  radio  jamming,  network  outage,  
earthquake…)  
can  trigger  a  catastrophic,  self-­persisting,  network  overload  situation.  
  

12  
13  
14  

Note:   An   example   of   such   uplink   frame   is   typically   the   JoinRequest   if  
the   implementation   of   a   group   of   end-­devices   decides   to   reset   the  
MAC  layer  in  the  case  of  a  network  outage.    

15  
16  
17  
18  
19  

The   whole   group   of   end-­device   will   start   broadcasting   JoinRequest  
uplinks   and   will   only   stops   when   receiving   a   JoinResponse   from   the  
network.  
  
  

20  
21  
22  
23  
24  

For  those  frame  retransmissions,  the  interval  between  the  end  of  the  RX2  slot  and  the  next  
uplink   retransmission   should   be   random   and   follow   a   different   sequence   for   every   device  
(For   example   using   a   pseudo-­random   generator   seeded   with   the   device’s   address)   .The  
transmission  duty-­cycle  of  such  message  shall  respect  the  local  regulation  and  the  following  
limits,  whichever  is  more  constraining:  

25  

  

26  
27  
28  
29  
30  
31  

Aggregated  during  the  first  hour  
following  power-­up  or  reset  

Duty-­cycle  <  1%  

Aggregated  during  the  next  10  hours  

Duty-­cycle  <0.1%  

After  the  first  11  hours  ,  measured  over  
a  sliding  24h  window  

Duty-­cycle  <0.01%  

  
  
  
Confirmed  uplinks  requiring  an  acknowledgement  from  the  network  and  signaling  an  event  
that  can  only  be  sensed  by  a  small  group  of  end-­devices  per  cell  (<100)  are  not  concerned  
by  this  rule.  Typical  examples  are  smoke  detectors  or  home  security  sensors.    

©2015  LoRa™  Alliance  

Page  53  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

  

CLASS  B  –  BEACON  

1  
2  
3  

LoRaWAN  Specification  

  
Class  B  must  be  considered  as  experimental  in  this  version  of  the  specification  

©2015  LoRa™  Alliance  

Page  54  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  

9   Introduction  to  Class  B  

2  
3  

This  section  describes  the  LoRaWAN  Class  B  layer  which  is  optimized  for  battery-­powered  
end-­devices  that  may  be  either  mobile  or  mounted  at  a  fixed  location.  

4  
5  
6  

End-­devices   should   implement   Class   B   operation   when   there   is   a   requirement   to   open  
receive  windows  at  fixed  time  intervals  for  the  purpose  of  enabling  server  initiated  downlink  
messages.  

7  

LoRaWAN  Class  B  option  adds  a  synchronized  reception  window  on  the  end-­device.  

8  
9  
10  
11  
12  
13  
14  
15  

One  of  the  limitations  of  LoRaWAN  Class  A  is  the  Aloha  method  of    sending  data  from  the  
end-­device;;  it  does  not  allow  for  a  known  reaction  time  when  the  customer  application  or  the  
server   wants   to   address   the   end-­device.   The   purpose   of   Class   B   is   to   have   an   end-­device  
available   for   reception   on   a   predictable   time,   in   addition   to   the   reception   windows   that  
follows  the  random  uplink  transmission    from    the  end-­device  of  Class  A.  Class  B  is  achieved  
by  having  the  gateway  sending  a  beacon  on  a  regular  basis  to  synchronize  the  all  the  end-­
devices  in  the  network  so  that    the  end-­device  can  opening  a  short  extra  reception  window  
(called  “ping  slot”)  at  a  predictable  time  during  a  periodic  time  slot.  

16  
17  
18  
19  
20  
21  
22  

Note:  The  decision  to  switch  from  Class  A  to  Class  B  comes  from  the  
application   layer   of   the   end-­device.   If   this   class   A   to   Class   B   switch  
needs  to  be  controlled  from  the  network  side,  the  customer  application  
must   use   one   of   the   end-­device’s   Class   A   uplinks   to   send   back   a  
downlink  to  the  application  layer,  and  it  needs  the  application  layer  on  
the  end-­device  to  recognize  this  request  –  this  process  is  not  managed  
at  the  LoRaWAN  level.  

©2015  LoRa™  Alliance  

Page  55  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  
1  
2  

LoRaWAN  Specification  
  

10   Principle  of  synchronous  network  initiated  downlink  (Class-­B  
option)  

3  
4  
5  
6  
7  
8  
9  
10  
11  
12  

For   a   network   to   support   end-­devices   of   Class   B,   all   gateways   must   synchronously  
broadcast   a   beacon   providing   a   timing   reference   to   the   end-­devices.   Based   on   this   timing  
reference   the   end-­devices   can   periodically   open   receive   windows,   hereafter   called   “ping  
slots”,  which  can  be  used  by  the  network  infrastructure  to  initiate  a  downlink  communication.  
A   network   initiated   downlink   using   one   of   these   ping   slots   is   called   a   “ping”.   The   gateway  
chosen   to   initiate   this   downlink   communication   is   selected   by   the   network   server   based   on  
the   signal   quality   indicators   of   the   last   uplink   of   the   end-­device.   For   this   reason,   if   an   end-­
device  moves  and  detects  a  change  in  the  identity  advertised  in  the  received  beacon,  it  must  
send  an  uplink  to  the  network  server  so  that  the  server  can  update  the  downlink  routing  path  
database.  

13  
14  

All   end-­devices   start   and   join   the   network   as   end-­devices   of   Class   A.   The   end-­device  
application  can  then  decide  to  switch  to  Class  B.  This  is  done  through  the  following  process:  

15  
16  
17  
18  
19  
20  

•   The  end-­device  application  requests  the  LoRaWAN  layer  to  switch  to  Class  B  mode.  
The   LoRaWAN   layer   in   the   end-­device   searches   for   a   beacon   and   returns   either   a  
BEACON_LOCKED   service   primitive   to   the   application   if   a   network   beacon   was  
found   and   locked   or   a   BEACON_NOT_FOUND   service   primitive.   To   accelerate   the  
beacon   discovery   the   LoRaWAN   layer   may   use   the   “BeaconTimingReq”   message  
described  later.  

21  
22  
23  

•   Based   on   the   beacon   strength   and   the   battery   life   constraints,   the   end-­device  
application  selects  a  ping  slot  data  rate  and  periodicity,  this  is  then  requested  them  
from  the  end-­device  LoRaWAN  layer.  

24  
25  
26  
27  
28  
29  
30  
31  
32  
33  

•   Once  in  Class  B  mode,  the  MAC  layer  sets  to  1  the  Class  B    bit  of  the  FCTRL  field  of  
every   uplink   frame   transmitted.   This   bit   signals   to   the   server   that   the   device   has  
switched  to  Class  B.  The  MAC  layer  will  autonomously  schedule  a  reception  slot  for  
each  beacon  and  each  ping  slot.  When  the  beacon  reception  is  successful  the  end-­
device  LoRaWAN  layer  forwards  the  beacon  content  to  the  application  together  with  
the   measured   radio   signal   strength.   The   end-­device   LoRaWAN   layer   takes   into  
account  the  maximum  possible  clock  drift  in  the  scheduling  of  the  beacon  reception  
slot  and  ping  slots.  When  a  downlink  is  successfully  demodulated  during  a  ping  slot,  
it   is   processed   similarly   to   a   downlink   as   described   in   the   LoRaWAN   Class   A  
specification.    

34  
35  
36  
37  
38  
39  
40  
41  

•   A   mobile   end-­device   must   periodically   inform   the   network   server   of   its   location   to  
update   the   downlink   route.   This   is   done   by   transmitting   a   normal   (possibly   empty)  
“unconfirmed”   or   “confirmed”   uplink.   The   end-­device   LoRaWAN   layer   will  
appropriately   set   the   Class   B   bit   to   1.   Optimally   this   can   be   done   more   efficiently   if  
the  application  detects  that  the  node  is  moving  by  analyzing  the  beacon  content.  In  
that   case   the   end-­device   must   apply   a   random   delay   (as   defined   in   Section   16.5  
between  the  beacon  reception  and  the  uplink  transmission  to  avoid  systematic  uplink  
collisions.  

42  
43  
44  
45  
46  
47  
48  

•   If  no  beacon  has  been  received  for  a  given  period  (as  defined  in  Section  13.2),  the  
synchronization  with  the  network  is  lost.  The  MAC  layer  must  inform  the  application  
layer   that   it   has   switched   back   to   Class   A.   As   a   consequence   the   end-­device  
LoRaWAN   layer   stops   setting   the   Class   B   bit   in   all   uplinks   and   this   informs   the  
network   server   that   the   end-­device   is   no   longer   in   Class   B   mode.   The   end-­device  
application  can  try  to  switch  back  to  Class  B  periodically.  This  will  restart  this  process  
starting  with  a  beacon  search.  
©2015  LoRa™  Alliance  

Page  56  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  

  
The  following  diagram  illustrates  the  concept  of  beacon  reception  slots  and  ping  slots.  
Network  beacon  
transmission

Network  beacon  
transmission
ping

gateway

End-­device

2  
3  
4  
5  
6  
7  
8  
9  
10  

End-­device  
response

End-­device  
RX  windows

Figure  11:  Beacon  reception  slot  and  ping  slots  

  

In   this   example,   given   the   beacon   period   is   128   s,   the   end-­device   also   opens   a   ping  
reception   slot   every   32   s.   Most   of   the   time   this   ping   slot   is   not   used   by   the   server   and  
therefore   the   end-­device   reception   window   is   closed   as   soon   as   the   radio   transceiver   has  
assessed   that   no   preamble   is   present   on   the   radio   channel.   If   a   preamble   is   detected   the  
radio   transceiver   will   stay   on   until   the   downlink   frame   is   demodulated.   The   MAC   layer   will  
then   process   the   frame,   check   that   its   address   field   matches   the   end-­device   address   and  
that  the  Message  Integrity  Check  is  valid  before  forwarding  it  to  the  application  layer.  

©2015  LoRa™  Alliance  

Page  57  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
1  
2  
3  
4  
5  

6  
7  
8  
9  
10  
11  
12  
13  

  

11   Uplink  frame  in  Class  B  mode  
The  uplink  frames  in  Class  B  mode  are  same  as  the  Class  A  uplinks  with  the  exception  of  
the  RFU  bit  in  the  FCtrl  field  in  the  Frame  header.  In  the  Class  A  uplink  this  bit  is  unused  
(RFU).    This  bit  is  used  for  Class  B  uplinks.    
  
Bit#

7  

6  

5  

4  

3..0  

FCtrl

ADR  

ADRACKReq  

ACK  

Class  B  

FOptsLen  

  
The  Class  B  bit  set  to  1  in  an  uplink  signals  the  network  server  that  the  device  as  switched  to  
Class  B  mode  and  is  now  ready  to  receive  scheduled  downlink  pings.  
  
The  signification  of  the  FPending  bit  for  downlink  is  unaltered  and  still  signals  that  one  or  
more  downlink  frames  are  queued  for  this  device  in  the  server  and  that  the  device  should  
keep  is  receiver  on  as  described  in  the  Class  A  specification.  
  

©2015  LoRa™  Alliance  

Page  58  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

12   Downlink  Ping  frame  format  (Class  B  option)  

2  

12.1  Physical  frame  format  

3  
4  

A   downlink   Ping   uses   the   same   format   as   a   Class   A   downlink   frame   but   might   follow   a  
different  channel  frequency  plan.  

5  
6  
7  
8  
9  
10  
11  

12.2  Unicast  &  Multicast  MAC  messages  

12  

12.2.1  Unicast  MAC  message  format  

13  
14  
15  
16  

The   MAC   payload   of   a   unicast   downlink   Ping   uses   the   format   defined   in   the   Class   A  
specification.   It   is   processed   by   the   end-­device   in   exactly   the   same   way.   The   same   frame  
counter  is  used  and  incremented  whether  the  downlink  uses  a  Class  B  ping  slot  or  a  Class  A  
“piggy-­back”  slot.  

17  

12.2.2  Multicast  MAC  message  format  

18  

The  Multicast  frames  share  most  of  the  unicast  frame  format  with  a  few  exceptions:  

Messages  can  be  “unicast”  or  “multicast”.  Unicast  messages  are  sent  to  a  single  end-­device  
and  multicast  messages  are  sent  to  multiple  end-­devices.  All  devices  of  a  multicast  group  
must  share  the  same  multicast  address  and  associated  encryption  keys.  The  LoRaWAN  
Class  B  specification  does  not  specify  means  to  remotely  setup  such  a  multicast  group  or  
securely  distribute  the  required  multicast  key  material.  This  must  either  be  performed  during  
the  node  personalization  or  through  the  application  layer.  

19  
20  
21  

•   They  are  not  allowed  to  carry  MAC  commands,  neither  in  the  FOpt  field,  nor  in  the  
payload  on  port  0  because  a  multicast  downlink  does  not  have  the  same  
authentication  robustness  as  a  unicast  frame.  

22  
23  

•   The  ACK  and  ADRACKReq  bits  must  be  zero.  The  MType  field  must  carry  the  value  
for  Unconfirmed  Data  Down.  

24  
25  
26  
27  

•   The   FPending   bit   indicates   there   is      more   multicast   data   to   be   sent.   If   it   is   set   the  
next  multicast  receive  slot  will  carry  a  data  frame.  If  it  is  not  set  the  next  slot  may  or  
may   not   carry   data.   This   bit   can   be   used   by   end-­devices   to   evaluate   priorities   for  
conflicting  reception  slots.  

28  

  

©2015  LoRa™  Alliance  

Page  59  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

13   Beacon  acquisition  and  tracking  

2  
3  

Before   switching   from   Class   A   to   Class   B,   the   end-­device   must   first   receive   one   of   the  
network  beacons  to  align  his  internal  timing  reference  with  the  network.  

4  
5  

Once  in  Class  B,  the  end-­device  must  periodically  search  and  receive  a  network  beacon  to  
cancel  any  drift  of  its  internal  clock  time  base,  relative  to  the  network  timing.  

6  
7  
8  
9  

A   Class   B   device   may   be   temporarily   unable   to   receive   beacons   (out   of   range   from   the  
network   gateways,   presence   of   interference,   ..).   In   this   event,   the   end-­device   has   to  
gradually  widen  its  beacon  and  ping  slots  reception  windows  to  take  into  account  a  possible  
drift  of  its  internal  clock.  

10  
11  

Note:  For  example,  a  device  which  internal  clock  is  defined  with  a  +/-­
10ppm  precision  may  drift  by  +/-­1.3mSec  every  beacon  period.    

12  

13.1  Minimal  beacon-­less  operation  time  

13  
14  
15  
16  

In  the  event  of  beacon  loss,  a  device  shall  be  capable  of  maintaining  Class  B  operation  for  2  
hours   (120   minutes)   after   it   received   the   last   beacon.   This   temporary   Class   B   operation  
without  beacon  is  called  “beacon-­less”  operation.  It  relies  on  the  end-­device’s  own  clock  to  
keep  timing.  

17  
18  
19  

During   beacon-­less   operation,   unicast,   multicast   and   beacon   reception   slots   must   all   be  
progressively  expanded  to  accommodate  the  end-­device’s  possible  clock  drift.  
  
Reception  window  
enlarges  to  
accommodate  clock  drift

Beacon  reception  
window

End-­device

End-­device  
receives  the  
beacon

20  
21  

End-­device  receives  a  
beacon  and  resets  the  
reception  window  length

End-­device  
temporarily  stop  
receiving  beacon

Figure  12  :  beacon-­less  temporary  operation  

  

22  

13.2  Extension  of  beacon-­less  operation  upon  reception  

23  
24  
25  

During  this  120  minutes  time  interval  the  reception  of  any  beacon  directed  to  the  end-­device,  
should  extend  the  Class  B  beacon-­less  operation  further  by  another  120  minutes  as  it  allows  
to  correct  any  timing  drift  and  reset  the  receive  slots  duration.  

26  

13.3  Minimizing  timing  drift  

27  
28  
29  
30  

The  end-­devices  may  use  the  beacon’s  (when  available)  precise  periodicity  to  calibrate  their  
internal   clock   and   therefore   reduce   the   initial   clock   frequency   imprecision.   As   the   timing  
oscillator’s   exhibit   a   predictable   temperature   frequency   shift,   the   use   of   a   temperature  
sensor  could  enable  further  minimization  of  the  timing  drift.  

©2015  LoRa™  Alliance  

Page  60  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

14   Class  B  Downlink  slot  timing  

2  

14.1  Definitions  

3  
4  

To   operate   successfully   in   Class   B   the   end-­device   must   open   reception   slots   at   precise  
instants  relative  to  the  infrastructure  beacon.  This  section  defines  the  required  timing.  

5  
6  
7  
8  
9  
10  
11  
12  

The  interval  between  the  start  of  two  successive  beacons  is  called  the  beacon  period.    The  
beacon   frame   transmission   is   aligned   with   the   beginning   of   the   BEACON_RESERVED  
interval.  Each  beacon  is  preceded  by  a  guard  time  interval  where  no  ping  slot  can  be  placed.  
The  length  of  the  guard  interval  corresponds  to  the  time  on  air  of  the  longest  allowed  frame.  
This   is   to   insure   that   a   downlink   initiated   during   a   ping   slot   just   before   the   guard   time   will  
always   have   time   to   complete   without   colliding   with   the   beacon   transmission.   The   usable  
time  interval  for  ping  slot  therefore  spans  from  the  end  of  the  beacon  reserved  time  interval  
to  the  beginning  of  the  next  beacon  guard  interval.  

13  
14  

Figure  13:  Beacon  timing  

15  

Beacon_period  
Beacon_reserved  
Beacon_guard  
Beacon-­window  

  

128  s  
2.120  s  
3.000  s  
122.880  s  

Table  37:  Beacon  timing  

16  
17  

The   beacon   frame   time   on   air   is   actually   much   shorter   than   the   beacon   reserved   time  
interval  to  allow  appending  network  management  broadcast  frames  in  the  future.  

18  
19  

The   beacon   window   interval   is   divided   into   212   =   4096   ping   slots   of   30   ms   each   numbered  
from  0  to  4095.  

20  
21  
22  

An  end-­device  using  the  slot  number  N  must  turn  on  its  receiver  exactly  Ton  seconds  after  
the  start  of  the  beacon  where:  
Ton  =  beacon_reserved  +  N  *  30  ms  

23  

N  is  called  the  slot  index.  

24  
25  

The   latest   ping   slot   starts   at   beacon_reserved   +   4095   *   30   ms   =   124  970   ms   after   the  
beacon  start  or  3030  ms  before  the  beginning  of  the  next  beacon.  

©2015  LoRa™  Alliance  

Page  61  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  

14.2  Slot  randomization  

2  
3  

To   avoid   systematic   collisions   or   over-­hearing   problems   the   slot   index   is   randomized   and  
changed  at  every  beacon  period.  

4  

The  following  parameters  are  used:  

5  

  
DevAddr  
pingNb  
pingPeriod  
pingOffset  
beaconTime  

6  

slotLen  
  

Device  32  bit  network  unicast  or  multicast  address  
Number  of  ping  slots  per  beacon  period.  This  must  be  a  power  of  2  
integer:  pingNb  =  2k  where  1  <=  k  <=7  
  
Period  of  the  device  receiver  wake-­up  expressed  in  number  of  slots:  
pingPeriod  =  212  /  pingNb  
  
Randomized  offset  computed  at  each  beacon  period  start.  Values  
can  range  from  0  to  (pingPeriod-­1)  
The  time  carried  in  the  field  BCNPayload.Time  of  the  immediately  
preceding  beacon  frame  
Length  of  a  unit  ping  slot  =  30  ms  

7  
8  
9  
10  
11  
12  

At  each  beacon  period  the  end-­device  and  the  server  compute  a  new  pseudo-­random  offset  
to   align   the   reception   slots.   An   AES   encryption   with   a   fixed   key   of   all   zeros   is   used   to  
randomize:  
  
Key  =  16  x  0x00  
  
Rand  =  aes128_encrypt(Key,  beaconTime  |  DevAddr  |  pad16)  
pingOffset  =  (Rand[0]  +  Rand[1]x  256)  modulo  pingPeriod  

13  
14  

The  slots  used  for  this  beacon  period  will  be:  
pingOffset  +  N  x  pingPeriod  with  N=[0:pingNb-­1]  

15  

The  node  therefore  opens  receive  slots  starting  at  :  
First  slot  
Slot  2  
Slot  3    
…  

Beacon_reserved  +  pingOffset  x  slotLen  
Beacon_reserved  +  (pingOffset  +  pingPeriod)  x  slotLen  
Beacon_reserved  +  (pingOffset  +  2  x  pingPeriod)  x  slotLen  
…  

16  
17  
18  

If   the   end-­device   serves   simultaneously   a   unicast   and   one   or   more   multicast   slots   this  
computation  is  performed  multiple  times  at  the  beginning  of  a  new  beacon  period.  Once  for  
the  unicast  address  (the  node  network  address)  and  once  for  each  multicast  group  address.  

19  
20  
21  
22  

In  the  case  where  a  multicast  ping  slot  and  a  unicast  ping  slot  collide  and  cannot  be  served  
by   the   end-­device   receiver   then   the   end-­device   should   preferentially   listen   to   the   multicast  
slot.  If  there  is  a  collision  between  multicast  reception  slots  the  FPending  bit  of  the  previous  
multicast  frame  can  be  used  to  set  a  preference.    

23  
24  
25  

The   randomization   scheme   prevents   a   systematic   collision   between   unicast   and   multicast  
slots.  If  collisions  happen  during  a  beacon  period  then  it  is  unlikely  to  occur  again  during  the  
next  beacon  period.  

©2015  LoRa™  Alliance  

Page  62  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

15   Class  B  MAC  commands  

2  
3  

All   commands   described   in   the   Class   A   specification   shall   be   implemented   in   Class   B  
devices.  The  Class  B  specification  adds  the  following  MAC  commands.  

4  

  
CID

Command

Transmitted by
End-­
Gateway  
device  
x  
  

0x10  

PingSlotInfoReq  

0x10  

PingSlotInfoAns  

  

x  

0x11  

PingSlotChannelReq  

  

x  

0x11  

PingSlotFreqAns  

x  

  

0x12  

BeaconTimingReq  

x  

  

0x12  

BeaconTimingAns  

  

x  

0x13  

BeaconFreqReq  

  

x  

0x13  

BeaconFreqAns  

x  

  

Short Description
Used  by  the  end-­device  to  communicate  
the  ping  unicast  slot  data  rate  and  
periodicity  to  the  network  server  
Used  by  the  network  to  acknowledge  a  
PingInfoSlotReq  command  
Used  by  the  network  server  to  set  the  
unicast  ping  channel  of  an  end-­device  
Used  by  the  end-­device  to  acknowledge  a  
PingSlotChannelReqcommand  
Used  by  end-­device  to  request  next  
beacon  timing  &  channel  to  network  
Used  by  network  to  answer  a  
BeaconTimingReq  uplink  
Command  used  by  the  network  server  to  
modify  the  frequency  at  which  the  end-­
device  expects  to  receive  beacon  
broadcast  
Used  by  the  end-­device  to  acknowledge  a  
BeaconFreqReq  command  

5  

15.1  PingSlotInfoReq  

6  
7  
8  
9  

With   the   PingSlotInfoReq   command   an   end-­device   informs   the   server   of   its   unicast   ping  
slot   periodicity   and   expected   data   rate.   This   command   must   only   be   used   to   inform   the  
server  of  the  parameters  of  a  UNICAST  ping  slot.  A  multicast  slot  is  entirely  defined  by  the  
application  and  should  not  use  this  command.  

10  

  
Size (bytes)
PingSlotInfoReq Payload

11  

  
Bit#
Periodicity & data rate

12  
13  
14  

1  
Periodicity  &  data  rate  
7  

[6:4]  

[3:0]  

RFU  

Periodicity  

Data  rate  

The  Periodicity  subfield  is  an  unsigned  3  bits  integer  encoding  the  ping  slot  period  currently  
used  by  the  end-­device  using  the  following  equation.    
𝑝𝑖𝑛𝑔𝑆𝑙𝑜𝑡𝑃𝑒𝑟𝑖𝑜𝑑 = 2UVWXYZX[X\]   in  seconds  

15  

•   Periodicity  =  0  means  that  the  end-­device  opens  a  ping  slot  every  second  

16  
17  

•   Periodicity  =  7  ,  every  128  seconds  which  is  the  maximum  ping  period  supported  by  
the  LoRaWAN  Class  B  specification.  

18  
19  
20  

The  Data  rate  subfield  encodes  the  data  rate  at  which  the  end-­device  expects  any  ping.  This  
uses  the  same  encoding  scheme  that  the  LinkAdrReq  command  described  in  the  Class  A  
specification.  
©2015  LoRa™  Alliance  

Page  63  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  
4  
5  
6  
7  

  
The  server  needs  to  be  aware  of  the  end-­device  ping  slot  periodicity  or  expected  data  rate  
else  Class  B  downlinks  will  not  happen  successfully.  For  that  purpose  the  PingSlotInfoReq  
MAC   command   must   be   acknowledged   with   a   PingSlotInfoAns   before   the   device   can  
switch   from   class   A   to   Class   B.   To   change   its   ping   slot   scheduling   or   data   rate   a   device  
should   first   revert   to   Class   A   ,   send   the   new   parameters   through   a   PingSlotInfoReq  
command  and  get  an  acknowledge  from  the  server  through  a  PinSlotInfoAns  .  It  can  then  
switch  back  to  Class  B  with  the  new  parameters.  

8  
9  

This  command  can  be  concatenated  with  any  other  MAC  command  in  the  FHDRFOpt  field  
as  described  in  the  Class  A  specification  frame  format.  

10  

15.2  BeaconFreqReq  

11  
12  

This  command  is  sent  by  the  server  to  the  end-­device  to  modify  the  frequency  on  which  this  
end-­device  expects  the  beacon.  

13  

  

14  

Octets
PingSlotChannelReqPay
load

3  
Frequency  
  

15  
16  

The   Frequency   coding   is   identical   to   the   NewChannelReq   MAC   command   defined   in   the  
Class  A.  

17  
18  
19  
20  

Frequency  is  a  24bits  unsigned  integer.  The  actual  beacon  channel  frequency  in  Hz  is  100  
x  frequ.  This  allows  defining  the  beacon  channel  anywhere  between  100  MHz  to  1.67  GHz  
by   100   Hz   step.   The   end-­device   has   to   check   that   the   frequency   is   actually   allowed   by   its  
radio  hardware  and  return  an  error  otherwise.  

21  
22  
23  

A  valid  non-­zero  Frequency  will  force  the  device  to  listen  to  the  beacon  on  a  fixed  frequency  
channel   even   if   the   default   behavior   specifies   a   frequency   hopping   beacon   (i.e   US   ISM  
band).  

24  
25  
26  

A  value  of  0  instructs  the  end-­device  to  use  the  default  beacon  frequency  plan  as  defined  in  
the   “Beacon   physical   layer”   section.   Where   applicable   the   device   resumes   frequency  
hopping  beacon  search.  

27  

15.3  PingSlotChannelReq  

28  
29  

This  command  is  sent  by  the  server  to  the  end-­device  to  modify  the  frequency  on  which  this  
end-­device  expects  the  downlink  pings.  

30  

  
Octets
PingSlotChannelReq
Payload

3  
Frequency  

1  
DrRange  

31  

  

32  
33  

The   Frequency   coding   is   identical   to   the   NewChannelReq   MAC   command   defined   in   the  
Class  A.  

34  
35  
36  
37  

Frequency  is  a  24bits  unsigned  integer.  The  actual  ping  channel  frequency  in  Hz  is  100  x  
frequ.   This   allows   defining   the   ping   channel   anywhere   between   100MHz   to   1.67GHz   by  
100Hz  step.  The  end-­device  has  to  check  that  the  frequency  is  actually  allowed  by  its  radio  
hardware  and  return  an  error  otherwise.  

38  

A  value  of  0  instructs  the  end-­device  to  use  the  default  frequency  plan.  
©2015  LoRa™  Alliance  

Page  64  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  

  
DrRange  is  the  data  rate  range  allowed  on  this  channel.  This  byte  is  split  in  two  4-­bit  
indexes.  
  
7:4  

3:0  

Max  data  rate  

Min  data  rate  

Bits
DrRange

4  

  

5  
6  
7  
8  
9  
10  

Following  the  convention  defined  in  the  “Physical  layer”  section  of  the  Class  A  specification,  
the   “Min   data   rate”   subfield   designates   the   lowest   data   rate   allowed   on   this   channel.   For  
example   0   designates   DR0   /   125   kHz   in   the   EU   physical   layer.   Similarly   “Max   data   rate”  
designates  the  highest  data  rate.  For  example  in  the  EU  spec,  DrRange  =  0x77  means  that  
only  50  kbps  GFSK  is  allowed  on  a  channel  and  DrRange  =  0x50  means  that  DR0  /  125  kHz  
to  DR5  /  125  kHz  are  supported.  

11  
12  

Upon   reception   of   this   command   the   end-­device   answers   with   a   PingSlotFreqAns  
message.  The  MAC  payload  of  this  message  contains  the  following  information:  

13  

  
1  
Status  

Size (bytes)
pingSlotFreqAns Payload

14  

The  Status  bits  have  the  following  meaning:  
Bits
Status

15  

  
  
Data  rate  range  ok  

Channel  frequency  ok  

7:2  

1  

0  

RFU  

Data  rate  range  
ok  

Channel  
frequency  ok  

Bit  =  0  
The  designated  data  rate  
range  exceeds  the  ones  
currently  defined  for  this  end  
device,  the  previous  range  is  
kept  
The  device  cannot  use  this  
frequency,  the  previous  ping  
frequency  is  kept  

Bit  =  1  
The  data  rate  range  is  
compatible  with  the  
possibilities  of  the  end  device  
The  device  is  able  to  use  this  
frequency.  

16  

15.4  BeaconTimingReq  

17  
18  
19  
20  

This   command   is   sent   by   the   end-­device   to   request   the   next   beacon   timing   and   channel.  
This   MAC   command   has   no   payload.   The   BeaconTimingReq   &   BeaconTimingAns  
mechanism   is   only   meant   to   accelerate   the   initial   beacon   search   to      lower   the   end-­device  
energy  requirement.    

21  
22  
23  
24  

The  network  may  answer  only  a  limited  number  of  requests  per  a  given  time  period.  An  end-­
device   must   not   expect   that   BeaconTimingReq   is   answered   immediately   with   a  
BeaconTimingAns.  Class  A  end-­devices  wanting  to  switch  to  Class  B  should  not  transmit  
more  than  one  BeaconTimingReq  per  hour.  

25  
26  

End-­devices   requiring   a   fast   beacon   lock   must   implement   an   autonomous   beacon   finding  
algorithm.  

©2015  LoRa™  Alliance  

Page  65  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

15.5  BeaconTimingAns  

2  

This  command  is  sent  by  the  network  to  answer  a  BeaconInfoReq  request.  
Size (bytes)
BeaconInfoReqPayload

2  
Delay  

1  
Channel  

3  
4  
5  

The  “Delay”  field  is  a  16bits  unsigned  integer.  If  the  remaining  time  between  the  end  of  the  
current  downlink  frame  and  the  start  of  the  next  beacon  frame  is  noted  RTime  then:  
30  ms  x  (Delay+1)  >  RTime  >=  30  ms  x  Delay  

6  
7  
8  
9  

In  networks  where  the  beacon  uses  alternatively  several  channels,  the  “Channel”  field  is  the  
index  of  the  beaconing  channel  on  which  the  next  beacon  will  be  broadcasted.  For  networks  
where  the  beacon  broadcast  frequency  is  fixed  then  this  field  content  is  0.  
  

©2015  LoRa™  Alliance  

Page  66  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

16   Beaconing  (Class  B  option)  

2  

16.1  Beacon  physical  layer  

3  
4  
5  
6  
7  
8  

Besides   relaying   messages   between   end-­devices   and   network   servers,   all   gateways  
participate   in   providing   a   time-­synchronization   mechanisms   by   sending   beacons   at   regular  
fixed  intervals  configurable  per  network  (BEACON_INTERVAL).    All  beacons  are  transmitted  
in  radio  packet  implicit  mode,  that  is,  without  a  LoRa  physical  header  and  with  no  CRC  being  
appended  by  the  radio.  
  
Preamble  

PHY

BCNPayload  

9  
10  

The   beacon   Preamble   begins   with   (a   longer   than   default)   10   unmodulated   symbols.   This  
allows  end-­devices  to  implement  a  low  power  duty-­cycled  beacon  search.  

11  
12  
13  

The   beacon   frame   length   is   tightly   coupled   to   the   operation   of   the   radio   Physical   layer.  
Therefore  the  actual  frame  length  might  change  from  one  region  implementation  to  another.  
The  changing  fields  are  highlighted  in  Bold  in  the  following  sections.    

14  

16.1.1  EU  863-­870MHz  ISM  Band  

15  

The  beacons  are  transmitted  using  the  following  settings  
DR  
3  
Corresponds  to  SF9  spreading  factor  with  
125  kHz  BW  
CR    
1  
Coding  rate  =  4/5  
frequency  
869.525  MHz  
This  is  the  recommended  frequency  allowing  
+27  dBm  EIRP.  Network  operators  may  use  
a  different  frequency  as  long  as  ETSI  
compliance  is  achieved  

16  

The  beacon  frame  content  is:  
Size (bytes)
BCNPayload

3  
NetID  

4  
Time  

1  
CRC  

7  
GwSpecific  

2  
CRC  

17  

16.1.2  US  902-­928MHz  ISM  Band  

18  

The  beacons  are  transmitted  using  the  following  settings:  
DR  
10  
Corresponds  to  SF10  spreading  factor  
with  500kHz  bw  
CR    
1  
Coding  rate  =  4/5  
frequencies  
923.3  to  927.5MHz  
Beaconing  is  performed  on  the  same  
with  600kHz  steps   channel  that  normal  downstream  traffic  as  
defined  in  the  Class  A  specification  

19  
20  

The  downstream  channel  used  for  a  given  beacon  is:  
_V`[Ya_\XcV
Channel  =   𝑓𝑙𝑜𝑜𝑟

21  
22  
23  
24  
25  

_V`[Ya_dVWXYZ

	  𝑚𝑜𝑑𝑢𝑙𝑜	  8  

•   whereby  beacon_time  is  the  integer  value  of  the  4  bytes  “Time”  field  of  the  beacon  
frame  
•   whereby  beacon_period  is  the  periodicity  of  beacons  ,  128  seconds  
•   whereby  floor(x)  designates  rounding  to  the  integer  immediately  inferior  to  x  
  

©2015  LoRa™  Alliance  

Page  67  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  
Example:   the   first   beacon   will   be   transmitted   on   923.3MHz   ,   the  
second  on  923.9MHz,    the  9th  beacon  will  be  on  923.3MHz  again.  

1  
2  
3  
4  
5  
6  

  
  
  
  
Beacon  channel  nb  
0  
1  
2  
3  
4  
5  
6  
7  

7  
8  
9  

Frequency  [MHz]  
923.3  
923.9  
924.5  
925.1  
925.7  
926.3  
926.9  
927.5  

  
  
The  beacon  frame  content  is:  
Size (bytes)
BCNPayload

3  
NetID  

4  
Time  

2  
CRC  

7  
GwSpecific  

1  
RFU  

2  
CRC  

10  

  

11  

16.2  Beacon  frame  content  

12  
13  

The   beacon payload BCNPayload   consists   of   a   network   common   part   and   a   gateway-­
specific  part.  

14  

  
Size (bytes)
BCNPayload

3  
NetID  

4  
Time  

1/2  
CRC  

7  
GwSpecific  

0/1  
RFU  

2  
CRC  

15  
16  
17  
18  
19  
20  

The   network   common   part   contains   a   network identifier NetID   to   uniquely   identify   the  
network   for   which   the   beacon   is   sent,   and   a   timestamp Time   in   seconds   since   00:00:00  
Coordinated  Universal  Time  (UTC),  1  January  1970.    The  integrity  of  the  beacon’s  network  
common  part  is  protected  by  an  8  or  16  bits  CRC  depending  on  PHY  layer  parameters.  The  
CRC-­16  is  computed  on  the  NetID+Time  fields  as  defined  in  the  IEEE  802.15.4-­2003  section  
7.2.1.8.  When  an  8  bits  CRC  is  required  then  the  8  LSBs  of  the  computed  CRC-­16  are  used.  

21  
22  

For  example:  This  is  a  valid  EU868  beacon  frame:  
AA	  BB	  CC	  |	  00	  00	  02	  CC	  |	  7E	  |	  00	  |	  01	  20	  00	  |	  00	  81	  03	  |	  DE	  55	  

23  

Bytes  are  transmitted  left  to  right.  The  corresponding  field  values  are:  

24  

  
Field
Value Hex

NetID  
CCBBAA  

Time  
CC020000  

CRC  
7E  

InfoDesc  
0  

lat  
002001  

long  
038100  

CRC  
55DE  

25  

The  CRC-­16  of  the  NetID+Time  fields  is  0xC87E  but  only  the  8LSBs  are  used  in  that  case  

26  

  

27  
28  
29  

The   seven   LSB   of   the   NetID   are   called   NwkID   and   match   the   seven   MSB   of   the   short  
address   of   an   end-­device.   Neighboring   or   overlapping   networks   must   have   different  
NwkIDs.  

©2015  LoRa™  Alliance  

Page  68  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  
4  

  
The   gateway   specific   part   provides   additional   information   regarding   the   gateway   sending   a  
beacon   and   therefore   may   differ   for   each   gateway.   The   RFU   field   when   applicable   (region  
specific)  should  be  equal  to  0.  The  optional  part  is  protected  by  a  CRC-­16  computed  on  the  
GwSpecific+RFU  fields.  The  CRC-­16  definition  is  the  same  as  for  the  mandatory  part.  

5  

For  example:  This  is  a  valid  US900  beacon:  
NetID  
CCBBAA  

Field
Value Hex

6  
7  

Time  
CC020000  

CRC  
C87E  

InfoDesc  
0  

lat  
002001  

long  
038100  

RFU  
00  

CRC  
D450  

Over  the  air  the  bytes  are  sent  in  the  following  order:  
AA	  BB	  CC	  |	  00	  00	  02	  CC	  |	  7E	  C8	  |	  00	  |	  01	  20	  00	  |	  00	  81	  03	  |00	  |	  50	  D4	  

8  
9  
10  
11  

Listening  and  synchronizing  to  the  network  common  part  is  sufficient  to  operate  a  stationary  
end-­device   in   Class   B   mode.   A   mobile   end-­device   should   also   demodulate   the   gateway  
specific  part  of  the  beacon  to  be  able  to  signal  to  the  network  server  whenever  he  is  moving  
from  one  cell  to  another.  

12  
13  
14  
15  
16  
17  
18  
19  

Note: As  mentioned  before,  all  gateways  send  their  beacon  at  exactly  
the   same   point   in   time   (i.e.,   time-­synchronously)   so   that   for   network  
common   part   there   are   no   visible   on-­air   collisions   for   a   listening   end-­
device   even   if   the   end-­device   simultaneously   receives   beacons   from  
several  gateways.    With  respect  to  the  gateway  specific  part,  collision  
occurs   but   an   end-­device   within   the   proximity   of   more   than   one  
gateway   will   still   be   able   to   decode   the   strongest   beacon   with   high  
probability.      

20  

16.3  Beacon  GwSpecific  field  format  

21  

The  content  of  the  GwSpecific  field  is  as  follow:  
Size (bytes)
GwSpecific

1  
InfoDesc  

6  
Info  

22  
23  

The   information descriptorInfoDesc   describes   how   the   information   field   Info   shall   be  
interpreted.    

24  

  
InfoDesc  
0  
1  
2  
3:127  
128:255  
  

25  
26  
27  
28  

Meaning  
GPS  coordinate  of  the  gateway  first  
antenna  
GPS  coordinate  of  the  gateway  second  
antenna  
GPS  coordinate  of  the  gateway  third  
antenna  
RFU  
Reserved  for  custom  network  specific  
broadcasts  
  

For   a   single   omnidirectional   antenna   gateway   the   InfoDesc   value   is   0   when   broadcasting  
GPS   coordinates.   For   a   site   featuring   3   sectored   antennas   for   example,   the   first   antenna  
broadcasts   the   beacon   with   InfoDesc   equals   0,   the   second   antenna   with   InfoDesc   field  
equals  1,  etc  …  

©2015  LoRa™  Alliance  

Page  69  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

16.3.1  Gateway  GPS  coordinate:InfoDesc  =  0,  1  or  2  

2  
3  

For  InfoDesc  =  0  ,1  or  2,  the  content  of  the  Info  field  encodes  the  GPS  coordinates  of  the  
antenna  broadcasting  the  beacon  
Size (bytes)
Info

3  

3  

Lat  

Lng  

4  
5  

The   latitude   and   longitude   fields   (Lat   and   Lng,   respectively)   encode   the   geographical  
location  of  the  gateway  as  follows:  

6  
7  
8  

•   The   north-­south   latitude   is   encoded   using   a   signed   24   bit   word   where   -­223  
corresponds   to   90°   south   (the   South   Pole)   and   223   corresponds   to   90°   north   (the  
North  Pole).    The  equator  corresponds  to  0.  

9  
10  
11  

•   The   east-­west   longitude   is   encoded   using   a   signed   24   bit   word   where   -­  
223corresponds   to   180°   west   and   223   corresponds   to   180°   east.      The   Greenwich  
meridian  corresponds  to  0.  

12  

16.4  Beaconing  precise  timing  

13  
14  
15  

The   beacon   is   sent   every   128   seconds   starting   at   00:00:00   Coordinated   Universal   Time  
(UTC),  1  January  1970  plus  NwkID  plus  TBeaconDelay.  Therefore    the  beacon  is  sent  at  
  
BT  =  k  *  128  +  NwkID  +  TBeaconDelay  

16  

seconds  after  00:00:00  Coordinated  Universal  Time  (UTC),  1  January  1970  

17  
18  

wherebyk  is  the  smallest  integer  for  which  
  
k  *  128  +  NwkID>T  

19  
20  

whereby  
  
T  =  seconds  since  00:00:00  Coordinated  Universal  Time  (UTC),  1  January  1970.  

21  
22  
23  
24  
25  
26  
27  
28  
29  
30  

Note: T is not  (!)  Unix  time.  Similar  to  GPS  time  and  unlike  Unix  time,  
T   is   strictly   monotonically   increasing   and   is   not   influenced   by   leap  
seconds.  
Whereby  TBeaconDelay  is  a  network  specific  delay  in  the  [0:50]  ms  range.  
TBeaconDelay  may  vary  from  one  network  to  another  and  is  meant  to  allow  a  slight  
transmission  delay  of  the  gateways.  TBeaconDelay  must  be  the  same  for  all  gateways  of  a  
given  network.    TBeaconDelay  must  be  smaller  than  50  ms.  All  end-­devices  ping  slots  use  
the  beacon  transmission  time  as  a  timing  reference,  therefore  the  network  server  as  to  take  
TBeaconDelay  into  account  when  scheduling  the  class  B  downlinks.  
  

31  

16.5  Network  downlink  route  update  requirements  

32  
33  
34  
35  

When   the   network   attempts   to   communicate   with   an   end-­device   using   a   Class   B   downlink  
slot,   it   transmits   the   downlink   from   the   gateway   which   was   closest   to   the   end-­device   when  
the  last  uplink  was  received.  Therefore  the  network  server  needs  to  keep  track  of  the  rough  
position  of  every  Class  B  device.  

36  
37  
38  

Whenever   a   Class   B   device   moves   and   changes   cell,   it   needs   to   communicate   with   the  
network  server  in  order  to  update  its  downlink  route.    This  update  can  be  performed  simply  
by  sending  a  “confirmed”  or  “unconfirmed”  uplink,  possibly  without  applicative  payload.    

39  

The  end-­device  has  the  choice  between  2  basic  strategies:  

©2015  LoRa™  Alliance  

Page  70  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  

  
•   Systematic  periodic  uplink:  simplest  method  that  doesn’t  require  demodulation  of  the  
“gateway  specific”  field  of  the  beacon.  Only  applicable  to  slowly  moving  or  stationery  
end-­devices.  There  are  no  requirements  on  those  periodic  uplinks.  
•   Uplink  on  cell  change:  The  end-­device  demodulates  the  “gateway  specific”  field  of  
the  beacon,  detects  that  the  ID  of  the  gateway  broadcasting  the  beacon  it  
demodulates  has  changed,  and  sends  an  uplink.  In  that  case  the  device  should  
respect  a  pseudo  random  delay  in  the  [0:120]  seconds  range  between  the  beacon  
demodulation  and  the  uplink  transmission.    This  is  required  to  insure  that  the  uplinks  
of  multiple  Class  B  devices  entering  or  leaving  a  cell  during  the  same  beacon  period  
will  not  systematically  occur  at  the  same  time  immediately  after  the  beacon  
broadcast.  
Failure  to  report  cell  change  will  result  in  Class  B  downlink  being  temporary  not  operational.  
The   network   server   may   have   to   wait   for   the   next   end-­device   uplink   to   transmit   downlink  
traffic.  
  
  

©2015  LoRa™  Alliance  

Page  71  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  

17   Class  B  unicast  &  multicast  downlink  channel  frequencies  

2  

17.1  EU  863-­870MHz  ISM  Band  

3  
4  

All   unicast&multicastClass   B   downlinks   use   a   single   frequency   channel   defined   by   the  
“PingSlotChannelReq”  MAC  command.  The  default  frequency  is  869.525MHz  

5  

17.2  US  902-­928MHz  ISM  Band  

6  
7  

By  default  Class  B  downlinks  use  a  channel  function  of  the  Time  field  of  the  last  beacon  (see  
Beacon  Frame  content)  and  the  DevAddr.  
Class	  B	  downlink	  channel = DevAddr + floor	  

8  
9  

Beacon_Time	  
Beacon_period

	  modulo	  8  

•   Whereby  Beacon_Time  is  the  32  bit  Time  field  of  the  current  beacon  period  

10  
11  

•   Beacon_period   is   the   length   of   the   beacon   period   (defined   as   128sec   in   the  
specification)  

12  

•   Floor  designates  rounding  to  the  immediately  lower  integer  value  

13  

•   DevAddr  is  the  32  bits  network  address  of  the  device  

14  
15  

Class   B   downlinks   therefore   hop   across   8   channels   in   the   ISM   band   and   all   Class   B   end-­
devices  are  equally  spread  amongst  the  8  downlink  channels.    

16  
17  
18  

If   the   “PingSlotChannelReq”   command   with   a   valid   non-­zero   argument   is   used   to   set   the  
Class  B  downlink  frequency  then  all  subsequent  ping  slots  should  be  opened  on  this  single  
frequency  independently  of  the  last  beacon  frequency.  

19  
20  

If   the   “PingSlotChannelReq”   command   with   a   zero   argument   is   sent,   the   end-­device  
should  resume  the  default  frequency  plan,  id  Class  B  ping  slots  hoping  across  8  channels.  

21  
22  
23  

The   underlying   idea   is   to   allow   network   operators   to   configure   end-­devices   to   use   a   single  
proprietary  dedicated  frequency  band  for  the  Class  B  downlinks  if  available,  and  to  keep  as  
much  frequency  diversity  as  possible  when  the  ISM  band  is  used.  

24  

  

©2015  LoRa™  Alliance  

Page  72  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

1  

LoRaWAN  Specification  
  

CLASS  C  –  CONTINUOUSLY  LISTENING  

©2015  LoRa™  Alliance  

Page  73  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

18   Class  C:  Continuously  listening  end-­device  

2  
3  

The  end-­devices  implanting  the  Class  C  option  are  used  for  applications  that  have  sufficient  
power  available  and  thus  do  not  need  to  minimize  reception  time.  

4  

Class  C  end-­devices  cannot  implement  Class  B  option.  

5  
6  
7  
8  
9  
10  
11  

The  Class  C  end-­device  will  listen  with  RX2  windows  parameters  as  often  as  possible.  The  
end-­device   listens   on   RX2   when   it   is   not   either   (a)   sending   or   (b)   receiving   on   RX1,  
according   to   Class   A   definition.   To   do   so,   it   will   open   a   short   window   on   RX2   parameters  
between  the  end  of  the  uplink  transmission    and  the  beginning  of  the  RX1  reception  window  
and   it   will   switch   to   RX2   reception   parameters   as   soon   as   the   RX1   reception   window   is  
closed;;  the  RX2  reception  window  will  remain  open  until  the  end-­device  has  to  send  another  
message.  

12  
13  
14  
15  

Note:  There  is  not  specific  message  for  a  node  to  tell  the  server  that  it  
is  a  Class  C  node.  It  is  up  to  the  application  on  server  side  to  know  that  
it   manages   Class   C   nodes   based   on   the   contract   passed   during   the  
join  procedure.  

16  

18.1  Second  receive  window  duration  for  Class  C  

17  
18  
19  
20  
21  
22  

Class  C  devices  implement  the  same  two  receive  windows  as  Class  A  devices,  but  they  do  
not  close  RX2  window  until  they  need  to  send  again.  Therefore  they  may  receive  a  downlink  
in   the   RX2   window   at   nearly   any   time,   including   downlinks   sent   for   the   purpose   of   MAC  
command  or  ACK  transmission.  A  short  listening  window  on  RX2  frequency  and  data  rate  is  
also   opened   between   the   end   of   the   transmission   and   the   beginning   of   the   RX1   receive  
window.  

Transmit

RX1
RX2

Transmit	  On	  Air	  Time

RX2

RECEIVE_DELAY1

Extends	  to	  next	  uplink

RECEIVE_DELAY2

23  
24  

Figure  14:  Class  C  end-­device  receive  slot  timing.  

25  

18.2  Class  C  Multicast  downlinks  

26  
27  
28  

Similarly  to  Class  B,  Class  C  devices  may  receive  multicast  downlink  frames.  The  multicast  
address   and   associated   network   session   key   and   application   session   key   must   come   from  
the  application  layer.  The  same  limitations  apply  for  Class  C  multicast  downlink  frames:  

29  
30  
31  

•   They  are  not  allowed  to  carry  MAC  commands,  neither  in  the  FOpt  field,  nor  in  the  
payload  on  port  0  because  a  multicast  downlink  does  not  have  the  same  
authentication  robustness  as  a  unicast  frame.  

32  
33  

•   The  ACK  and  ADRACKReq  bits  must  be  zero.  The  MType  field  must  carry  the  value  
for  Unconfirmed  Data  Down.  

34  
35  
36  

•   The   FPending   bit   indicates   there   is   more   multicast   data   to   be   sent.   Given   that   a  
Class  C  device  keeps  its  receiver  active  most  of  the  time,  the  FPending  bit  does  not  
trigger  any  specific  behavior  of  the  end-­device.  
©2015  LoRa™  Alliance  

  

Page  74  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

SUPPORT  INFORMATION  

1  
2  

This  sub-­section  is  only  a  recommendation.  

3  

  

©2015  LoRa™  Alliance  

Page  75  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  

1  

19   Examples  and  Application  Information  

2  
3  

Examples  are  illustrations  of  the  LoRaWAN  spec  for  information,  but  they  are  not  part  of  the  
formal  specification.  

4  

19.1  Uplink  Timing  Diagram  for  Confirmed  Data  Messages  

5  
6  
7  

The  following  diagram  illustrates  the  steps  followed  by  an  end-­device  trying  to  transmit  two  
confirmed  data  frames  (Data0  and  Data1):  
  
Receive  slots

gateway

ok

ACK  

ok

{Cd}

ACK  

ok

{Cd+1}

Data  +  ACK  

{Cd+2}

ok
End-­point

Confirmed  Data0  
{Cu}

ko

Confirmed  Data0

{Cu}

Confirmed  Data1

ok

{Cu+1}

(diag 1)

8  
9  

  

Figure  15:  Uplink  timing  diagram  for  confirmed  data  messages  

10  
11  
12  
13  
14  
15  
16  
17  
18  

The   end-­device   first   transmits   a   confirmed   data   frame   containing   the   Data0   payload   at   an  
arbitrary   instant   and   on   an   arbitrary   channel.   The   frame   counter   Cu   is   simply   derived   by  
adding   1   to   the   previous   uplink   frame   counter.   The   network   receives   the   frame   and  
generates  a  downlink  frame  with  the  ACK  bit  set  exactly  RECEIVE_DELAY1  seconds  later,  
using   the   first   receive   window   of   the   end-­device.   This   downlink   frame   uses   the   same   data  
rate   and   the   same   channel   as   the   Data0   uplink.   The   downlink   frame   counter   Cd   is   also  
derived   by   adding   1   to   the   last   downlink   towards   that   specific   end-­device.   If   there   is   no  
downlink   payload   pending   the   network   shall   generate   a   frame   without   a   payload.   In   this  
example  the  frame  carrying  the  ACK  bit  is  not  received.  

19  
20  
21  
22  
23  
24  
25  

If   an   end-­device   does   not   receive   a   frame   with   the   ACK   bit   set   in   one   of   the   two   receive  
windows   immediately   following   the   uplink   transmission   it   may   resend   the   same   frame   with  
the   same   payload   and   frame   counter   again   at   least   ACK_TIMEOUT   seconds   after   the  
second  reception  window.  This  resend  must  be  done  on  another  channel  and  must  obey  the  
duty  cycle  limitation  as  any  other  normal  transmission.    If  this  time  the  end-­device  receives  
the  ACK  downlink  during  its  first  receive  window,  as  soon  as  the  ACK  frame  is  demodulated,  
the  end-­device  is  free  to  transmit  a  new  frame  on  a  new  channel.  

26  
27  
28  
29  

19.2  The  third  ACK  frame  in  this  example  also  carries  an  application  
payload.  A  downlink  frame  can  carry  any  combination  of  ACK,  MAC  
control  commands  and  payload.  Downlink  Diagram  for  Confirmed  
Data  Messages  

30  
31  
32  

The  following  diagram  illustrates  the  basic  sequence  of  a  “confirmed”  downlink.  
  
  

©2015  LoRa™  Alliance  

Page  76  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

  
Receive  slots

gateway

ok

Confirmed  Data  

ok

{Cd}

ok
End-­point

ACK  

Unconfirmed  data  
{Cu}

{Cu+1}

1  
2  

Figure  16:  Downlink  timing  diagram  for  confirmed  data  messages  

  

3  
4  
5  
6  
7  
8  
9  

The  frame  exchange  is  initiated  by  the  end-­device  transmitting  an  “unconfirmed”  application  
payload  or  any  other  frame  on  channel  A.  The  network  uses  the  downlink  receive  window  to  
transmit   a   “confirmed”   data   frame   towards   the   end-­device   on   the   same   channel   A.   Upon  
reception   of   this   data   frame   requiring   an   acknowledgement,   the   end-­device   transmits   a  
frame  with  the  ACK  bit  set  at  its  own  discretion.  This  frame  might  also  contain  piggybacked  
data  or  MAC  commands  as  its  payload.  This  ACK  uplink  is  treated  like  any  standard  uplink,  
and  as  such  is  transmitted  on  a  random  channel  that  might  be  different  from  channel  A.  

10  
11  
12  
13  
14  
15  

Note:  To  allow  the  end-­devices  to  be  as  simple  as  possible  and  have  
keep   as   few   states   as   possible   it   may   transmit   an   explicit   (possibly  
empty)   acknowledgement   data   message   immediately   after   the  
reception   of   a   data   message   requiring   an   acknowledgment.  
Alternatively   the   end-­device   may   defer   the   transmission   of   an  
acknowledgement  to  piggyback  it  with  its  next  data  message.  

16  

19.3  Downlink  Timing  for  Frame-­Pending  Messages  

17  
18  
19  

The   next   diagram   illustrates   the   use   of   the   frame   pending   (FPending)   bit   on   a   downlink.  
The  FPending  bit  can  only  be  set  on  a  downlink  frame  and  informs  the  end-­device  that  the  
network  has  several  frames  pending  for  him;;  the  bit  is  ignored  for  all  uplink  frames.  

20  
21  
22  
23  

If  a  frame  with  the  FPending  bit  set  requires  an  acknowledgement,  the  end-­device  shall  do  
so   as   described   before.   If   no   acknowledgment   is   required,   the   end-­device   may   send   an  
empty  data  message  to  open  additional  receive  windows  at  its  own  discretion,  or  wait  until  it  
has  some  data  to  transmit  itself  and  open  receive  windows  as  usual.  

24  
25  

Note:   The   FPending   bit   is   independent   to   the   acknowledgment  
scheme.  
(*)  F_P  means  ‘frame  pending’  bit  set

Receive  slots

gateway

ok

Confirmed  
Data0+F_P  

Confirmed  
Data1  

ok

{cd}

End-­point

26  
27  

ok

{cd+1}

Data  uplink

ACK  

ACK  

{cu}

{cu+1}

{cu+2}

Figure  17:  Downlink  timing  diagram  for  frame-­pending  messages,  example  1  

©2015  LoRa™  Alliance  

Page  77  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  

  

1  
2  
3  
4  
5  
6  
7  
8  

  
In   this   example   the   network   has   two   confirmed   data   frames   to   transmit   to   the   end-­device.  
The   frame   exchange   is   initiated   by   the   end-­device   via   a   normal   “unconfirmed”   uplink  
message  on  channel  A.  The  network  uses  the  first  receive  window  to  transmit  the  Data0  with  
the  bit  FPending  set  as  a  confirmed  data  message.  The  device  acknowledges  the  reception  
of  the  frame  by  transmitting  back  an  empty  frame  with  the  ACK  bit  set  on  a  new  channel  B.  
RECEIVE_DELAY1   seconds   later,   the   network   transmits   the   second   frame   Data1   on  
channel   B,   again   using   a   confirmed   data   message   but   with   the   FPending   bit   cleared.   The  
end-­device  acknowledges  on  channel  C.    
ok

gateway

ok

Data0+F_P  

Data1+F_P

{cd}

End-­point

ok

{cd}

Data  uplink

void

{cu}

{cu+1}

void  

void

{cu+2}

{cu+3}

9  
10  

Figure  18:  Downlink  timing  diagram  for  frame-­pending  messages,  example  2  

11  
12  
13  
14  
15  
16  

In   this   example,   the   downlink   frames   are   “unconfirmed”   frames,   the   end-­device   does   not  
need   to   send   back   and   acknowledge.   Receiving   the   Data0   unconfirmed   frame   with   the  
FPending  bit  set  the  end-­device  sends  an  empty  data  frame.  This  first  uplink  is  not  received  
by  the  network.  If  no  downlink  is  received  during  the  two  receive  windows,  the  network  has  
to   wait   for   the   next   spontaneous   uplink   of   the   end-­device   to   retry   the   transfer.   The   end-­
device  can  speed  up  the  procedure  by  sending  a  new  empty  data  frame.  

17  

  

Note:  An  acknowledgement  is  never  sent  twice.    

18  
19  

The  FPending  bit,  the  ACK  bit,  and  payload  data  can  all  be  present  in  the  same  downlink.  
For  example,  the  following  frame  exchange  is  perfectly  valid.  

20  

	  
Receiving  a  frame  without  the  ACK  bit  set  ,  server  
retransmits  Data1

ok

gateway

Confirmed  
Data0+F_P+ACK

Confirmed  
Data1+F_P

ok

{cd}

End-­point

ok

{cd+1}

Confirmed  
Data  uplink

ACK  

{cu}

{cu+1}

Confirmed  
Data1+F_P

{cd+1}

void

{cu+2}

ACK  

{cu+3}

(diag 2)

	  

21  
22  

Figure  19:  Downlink  timing  diagram  for  frame-­pending  messages,  example  3  

23  
24  
25  

The  end-­device  sends  a  “confirmed  data”  uplink.  The  network  can  answer  with  a  confirmed  
downlink   containing   Data   +   ACK   +   “Frame   pending”   then   the   exchange   continues   as  
previously  described.  

26  

19.4  Data-­Rate  Adaptation  during  Message  Retransmissions  

27  
28  
29  

When  an  end-­device  attempts  the  transmission  of  a  “confirmed’  frame  toward  the  network  it  
expects   to   receive   an   acknowledgement   in   one   of   the   subsequent   reception   slot.   In   the  
absence   of   the   acknowledgement   it   will   try   to   re-­transmit   the   same   data   again.   This   re-­
©2015  LoRa™  Alliance  

Page  78  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  

1  
2  
3  

  
transmission  happens  on  a  new  frequency  channel,  but  can  also  happen  at  a  different  data  
rate   (preferable   lower)   than   the   previous   one.   It   is   strongly   recommended   to   adopt   the  
following  re-­transmission  strategy.  

4  
5  

The  first  transmission  of  the  “confirmed”  frame  happens  with  a  data  rate  DR.  
  
Transmission  nb  
Data  Rate  
1  (first)  
DR  
2  
DR  
3  
max(DR-­1,0)  
4  
max(DR-­1,0)  
5  
max(DR-­2,0)  
6  
max(DR-­2,0)  
7  
max(DR-­3,0)  
8  
max(DR-­3,0)  

6  

The  Data  Rate  max(a,b)  stands  for  maximum  of  a  and  b  values.    

7  
8  

If   after   a   recommended   8   transmissions,   the   frame   has   not   been   acknowledged   the   MAC  
layer  should  return  an  error  code  to  the  application  layer.  

9  
10  

Note:      For   each   re-­transmission,   the   frequency   channel   is   selected  
randomly  as  for  normal  transmissions.  

11  

Any  further  transmission  uses  the  last  data  rate  used.  

12  
13  

For   example   if   an   end-­device   sends   a   “confirmed”   frame   first   using   DR5   and   has   to  
retransmit  3  times  (twice  at  DR5  then  twice  at  DR4),  the  next  frame  transmitted  will  use  DR4  

14  
15  
16  
17  

Other   example,   if   an   end-­device   sends   a   “confirmed”   frame   first   using   DR5   and   does   not  
receive  an  acknowledge  after  8  transmissions  (2  at  DR5,  2  at  DR4,  …  ,  2  at  DR2),  and  the  
application  of  this  end-­device  re-­initiates  a  “confirmed”  transmission  a  little  later,  the  first  two  
transmission  will  be  tentatively  at  DR2,  then  switch  to  DR1,  then  to  DR0.  

©2015  LoRa™  Alliance  

Page  79  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  
2  

20   Recommendation  on  contract  to  be  provided  to  the  network  
server  by  the  end-­device  provider  at  the  time  of  provisioning  

3  
4  
5  
6  

Configuration   data   related   to   the   end-­device   and   its   characteristics   must   be   known   by   the  
network   server   at   the   time   of   provisioning.   –This   provisioned   data   is   called   the   “contract”.  
This  contract  cannot  be  provided  by  the  end-­device  and  must  be  supplied  by  the  end-­device  
provider  using  another  channel  (out-­of-­band  communication).  

7  
8  

This   end-­device   contract   is   stored   in   the   network   server.   It   can   be   used   by   the   application  
server  and  the  network  controller  to  adapt  the  algorithms.  

9  
10  
11  
12  
13  

This  data  will  include:  
•   End-­device  specific  radio  parameters  (device  frequency  range,  device  maximal  
output  power,  device  communication  settings  -­  RECEIVE_DELAY1,  
RECEIVE_DELAY2)  
•   Application  type  (Alarm,  Metering,  Asset  Tracking,  Supervision,  Network  Control)  

©2015  LoRa™  Alliance  

Page  80  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  

21   Recommendation  on  finding  the  locally  used  channels  

2  
3  
4  

End-­devices   that   can   be   activated   in   territories   that   are   using   different   frequencies   for  
LoRaWAN   will   have   to   identify   what   frequencies   are   supported   for   join   message   at   their  
current  location  before  they  send  any  message.  The  following  methods  are  proposed:  

5  
6  

•   A   GPS   enabled   end-­device   can   use   its   GPS   location   to   identify   which   frequency  
band  to  use.  

7  

•   End-­device  can  search  for  a  beacon  and  use  its  frequency  to  identify  its  region  

8  
9  

•   End-­device   can   search   for   a   beacon   and   if   this   one   is   sending   the   antenna   GPS  
coordinate,  it  can  use  this  to  identify  its  region  

10  
11  

•   End-­device   can   search   for   a   beacon   and   if   this   one   is   sending   a   list   of   join  
frequencies,  it  can  use  this  to  send  its  join  message  

©2015  LoRa™  Alliance  

Page  81  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

LoRaWAN  Specification  

  
1  

22   Revisions    

2  
3  

22.1  Revision  1.0  

4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  
17  
18  
19  
20  
21  
22  

  

•   Approved  version  of  LoRaWAN1.0  

22.2  Revision  1.0.1  
•  
•  
•  
•  
•  
•  
•  

•  
•  
•  
•  

Clarified  the  RX  window  start  time  definition  
Corrected    the  maximum  payload  size  for  DR2  in  the  NA  section  
Corrected  the  typo  on  the  downlink  data  rate  range  in  7.2.2  
Introduced  a  requirement  for  using  coding  rate  4/5  in  7.2.2  to  guarantee  a  maximum  
time  on  air  <  400mSec  
Corrected  the  JoinAccept  MIC  calculation  in  6.2.5  
Clarified  the  NbRep  field  and  renamed  it  to  NbTrans  in  5.2  
Removed  the  possibility  to  not  encrypt  the  Applicative  payload  in  the  MAC  layer  ,  
removed  the  paragraph  4.3.3.2.  If  further  security  is  required  by  the  application  ,  the  
payload  will  be  encrypted,  using  any  method,  at  the  application  layer  then  re-­
encrypted  at  the  MAC  layer  using  the  specified  default  LoRaWAN  encryption  
Corrected  FHDR  field  size  typo  
Corrected  the  channels  impacted  by  ChMask  when  chMaskCntl  equals  6  or  7  in  
7.2.5  
Clarified  6.2.5  sentence  describing  the  RX1  slot  data  rate  offset  in  the  JoinResp  
message  
Removed  the  second  half  of  the  DRoffset  table  in  7.2.7  ,  ellaborate  

  

©2015  LoRa™  Alliance  

Page  82  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  
1  
2  
3  
4  
5  
6  
7  
8  
9  
10  
11  
12  
13  
14  
15  
16  
17  
18  
19  
20  
21  
22  
23  
24  
25  
26  
27  
28  
29  
30  
31  
32  
33  
34  

LoRaWAN  Specification  
  

23   Glossary  
  
ADR  
AES  
AFA  
AR  
CBC  
CMAC  
CR  
CRC  
DR  
ECB  
ETSI  
EIRP  
FSK  
GPRS  
HAL  
IP  
LBT  
LoRa™  
LoRaWAN™  
MAC  
MIC  
RF  
RFU  
Rx  
RSSI  
SF  
SNR  
SPI  
SSL  
Tx  
USB  
  

Adaptive  Data  Rate  
Advanced  Encryption  Standard  
Adaptive  Frequency  Agility  
Acknowledgement  Request  
Cipher  Block  Chaining  
Cipher-­based  Message  Authentication  Code  
Coding  Rate  
Cyclic  Redundancy  Check  
Data  Rate  
Electronic  Code  Book  
European  Telecommunications  Standards  Institute  
Equivalent  Isotropically  Radiated  Power  
Frequency  Shift  Keying  modulation  technique  
General  Packet  Radio  Service  
Hardware  Abstraction  Layer  
Internet  Protocol  
Listen  Before  Talk  
Long  Range  modulation  technique  
Long  Range  Network  protocol  
Medium  Access  Control  
Message  Integrity  Code  
Radio  Frequency  
Reserved  for  Future  Usage  
Receiver  
Received  Signal  Strength  Indicator  
Spreading  Factor  
Signal  Noise  Ratio  
Serial  Peripheral  Interface  
Secure  Socket  Layer  
Transmitter  
Universal  Serial  Bus  

©2015  LoRa™  Alliance  

Page  83  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  

24   Bibliography  

2  

24.1  References  

3  
4  
5  

[IEEE802154]:   IEEE   Standard   for   Local   and   Metropolitan   Area   Networks—Part   15.4:   Low-­
Rate  Wireless  Personal  Area  Networks  (LR-­WPANs),  IEEE  Std  802.15.4TM-­2011  (Revision  
of  IEEE  Std  802.15.4-­2006),  September  2011.  

6  

[RFC4493]:  The  AES-­CMAC  Algorithm,  June  2006.  

©2015  LoRa™  Alliance  

Page  84  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

  

LoRaWAN  Specification  
  

1  

25   NOTICE  OF  USE  AND  DISCLOSURE  

2  

Copyright  ©  LoRa  Alliance,  Inc.  (2015).  All  Rights  Reserved.    

3  
4  
5  

The   information   within   this   document   is   the   property   of   the   LoRa   Alliance   (“The   Alliance”)   and   its   use   and  
disclosure   are   subject   to   LoRa   Alliance   Corporate   Bylaws,   Intellectual   Property   Rights   (IPR)   Policy   and  
Membership  Agreements.  

6  
7  
8  
9  

Elements   of   LoRa   Alliance   specifications   may   be   subject   to   third   party   intellectual   property   rights,   including  
without  limitation,  patent,  copyright  or  trademark  rights  (such  a  third  party  may  or  may  not  be  a  member  of  LoRa  
Alliance).  The  Alliance  is  not  responsible  and  shall  not  be  held  responsible  in  any  manner  for  identifying  or  failing  
to  identify  any  or  all  such  third  party  intellectual  property  rights.  

10  
11  
12  
13  
14  
15  

This   document   and   the   information   contained   herein   are   provided   on   an   “AS   IS”   basis   and   THE   ALLIANCE  
DISCLAIMS   ALL   WARRANTIES   EXPRESS   OR   IMPLIED,   INCLUDING   BUT   NOT   LIMITED   TO   (A)   ANY  
WARRANTY  THAT  THE  USE  OF  THE  INFORMATION  HEREIN  WILL  NOT  INFRINGE  ANY  RIGHTS  OF  THIRD  
PARTIES   (INCLUDING   WITHOUT   LIMITATION   ANY   INTELLECTUAL   PROPERTY   RIGHTS   INCLUDING  
PATENT,   COPYRIGHT   OR   TRADEMARK   RIGHTS)   OR   (B)   ANY   IMPLIED   WARRANTIES   OF  
MERCHANTABILITY,  FITNESS  FOR  A  PARTICULAR  PURPOSE,  TITLE  OR  NONINFRINGEMENT.  

16  
17  
18  
19  
20  

IN  NO  EVENT  WILL  THE  ALLIANCE  BE  LIABLE  FOR  ANY  LOSS  OF  PROFITS,  LOSS  OF  BUSINESS,  LOSS  
OF  USE  OF  DATA,  INTERRUPTION  OFBUSINESS,  OR  FOR  ANY  OTHER  DIRECT,  INDIRECT,  SPECIAL  OR  
EXEMPLARY,  INCIDENTIAL,  PUNITIVE  OR  CONSEQUENTIAL  DAMAGES  OF  ANY  KIND,  IN  CONTRACT  OR  
IN  TORT,  IN  CONNECTION  WITH  THIS  DOCUMENT  OR  THE  INFORMATION  CONTAINED  HEREIN,  EVEN  IF  
ADVISED  OF  THE  POSSIBILITY  OF  SUCH  LOSS  OR  DAMAGE.    

21  

The  above  notice  and  this  paragraph  must  be  included  on  all  copies  of  this  document  that  are  made.  

22  

LoRa  Alliance,  Inc.  

23  

2400  Camino  Ramon,  Suite  375  

24  

San  Ramon,  CA  94583  

25  
26  

Note:  All  Company,  brand  and  product  names  may  be  trademarks  that  are  the  sole  property  of  their  respective  
owners.  

©2015  LoRa™  Alliance  

Page  85  of  85  
  

The  authors  reserve  the  right  to  change  
specifications  without  notice.  

