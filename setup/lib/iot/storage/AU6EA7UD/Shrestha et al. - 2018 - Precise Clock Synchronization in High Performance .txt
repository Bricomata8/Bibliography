SPECIAL SECTION ON KEY TECHNOLOGIES FOR SMART FACTORY OF INDUSTRY 4.0
Received December 12, 2017, accepted February 4, 2018, date of publication February 12, 2018, date of current version March 13, 2018. Digital Object Identifier 10.1109/ACCESS.2018.2805378

Precise Clock Synchronization in High Performance Wireless Communication for Time Sensitive Networking
DEEP SHRESTHA1, (Student Member, IEEE), ZHIBO PANG 2, (Senior Member, IEEE), AND DACFEY DZUNG3, (Member, IEEE)
1Communication Technologies Division, Centre Tecnològic de Telecomunicacions de Catalunya, 08860 Castelldefels, Spain 2ABB Corporate Research, SE-721 78 Västerås, Sweden 3ABB Corporate Research, 5405 Baden-Dättwil, Switzerland
Corresponding author: Zhibo Pang (pang.zhibo@se.abb.com)
This work was supported in part by the European Union’s Seventh Framework Programme for Research, Technological Development, and Demonstration under Grant 607774 ADVANTAGE, in part by the Generalitat de Catalunya under Grants 2014 SGR 1551 and 2014 SGR 1567, and in part by Vinnova (Swedish Innovation Agency) under Grants 2015-06548 and 2017-02822.

ABSTRACT In this paper, an enhanced precision time protocol (PTP) to enable precise clock synchronization between the nodes within an industrial wireless sensor network deployed for critical control and automation applications is proposed. As it will be shown, by incorporating clock drift factor, the accuracy of clock offset estimation of conventional PTP scheme can be signiﬁcantly improved. Furthermore, in order to enhance the application of proposed clock synchronization scheme, typically in non-line-of-sight industrial communication environment, the problem of efﬁcient symbol timing synchronization is also studied, and a simpliﬁed, yet efﬁcient, start of the frame detector that enables robust timestamp message decoding during clock synchronization period is also proposed.
INDEX TERMS Clock synchronization, clock drift factor, industrial wireless sensor network, precision time protocol.

I. INTRODUCTION Smart factory of Industry 4.0 envisions an industrial ecosystem as a cyber-physical entity. The physical infrastructure in the smart factory will have to rely on communication technologies to deliver critical control and automation services [1]. Wireless communication technology because of its easy and economic deployment is considered as one of the vital technologies to support communication in an industrial environment. To serve as a communication backbone, wireless communication, however, has to fulﬁll stringent requirements of industrial applications in terms of ultra-low latency and ultra-high reliability [1]. To reduce the data transmission latency for critical information exchange, schemes based on preemption and time aware shaping like the ones proposed in [2] and [3] can be used. Moreover, high-performance wireless communication (wirelessHP) as proposed in [4] promises signiﬁcant reduction of physical layer overheads and provides drastic reduction in transmission time duration and data transmission time latency to enable communication in real-time.

Apart from the low data transmission latency, reliable data exchange between the nodes in an industrial network also plays a vital role in the critical control and automation applications. The industrial network, in contrast to other communication networks, typically exploits deterministic data transmission and reception to operate in real-time. The data transmission and reception timings along with the locations of the nodes within such network are pre-engineered. And in order to maintain a reliable information exchange between the participating nodes, a precise clock synchronization between the master node clock and slave node clock, in such network, is of utmost importance. Lack of synchronization between the clocks of the nodes affects deterministic data exchange and leads towards the failure of the whole control system. In order to ensure accurate clock synchronization between the data exchanging entities, clock synchronization schemes based on network time protocol (NTP), generic precise time protocol (G-PTP) and precision time protocol (PTP) are widely used [5], [6]. Among these schemes, PTP offers better accuracy and has been considered for timing synchronization

8944

2169-3536 
 2018 IEEE. Translations and content mining are permitted for academic research only. Personal use is also permitted, but republication/redistribution requires IEEE permission.
See http://www.ieee.org/publications_standards/publications/rights/index.html for more information.

VOLUME 6, 2018

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking

in most of the modern communication technologies [7]. The implications of PTP have been veriﬁed in many recent works, where the clock synchronization plays a vital role for realtime data communications [7]–[10], and will be also be analyzed and studied in this paper.
The conventional PTP algorithm is a node-to-node based synchronization scheme, where the clock of the master node in the network is considered as a reference clock. The slave nodes in the network adapt and synchronize their times with respect to the master’s clock time during the clock synchronization period initiated by the master node. In order to facilitate slave nodes estimate offsets between their clocks and the master clock, the master node during the synchronization period transmits multiple messages. Each message that is exchanged, contains the timestamp information based on which the slave estimates the timing offset of its clock with respect to the master’s clock and rectiﬁes its time in order to bear an accurately synchronized time with respect to the master clock time [8]. By virtue of well-synchronized nodes within a network, a pre-engineered data transmission and reception timings can be organized in an industrial network for efﬁcient and real-time delivery of the control signals.
In order to maintain real-time communication between the nodes in an industrial communication network, in this paper we study two crucial issues namely:
• precise clock synchronization between the clocks of the participating nodes,
• precise start of the frame detection to enable accurate timestamp message decoding,
and propose • enhanced PTP for high-performance wireless communication for time sensitive networking, • simple, yet robust, symbol timing synchronization for the accurate timestamp message decoding during the enhanced PTP execution.
To concisely elaborate the presented work, this article is divided into six sections. Section II deﬁnes the conventional PTP scheme. Section III identiﬁes the challenges of accurate synchronization based on PTP. Section IV illustrates the enhanced PTP and the symbol timing synchronization approach proposed in this paper. Section V veriﬁes the propositions made by the means of numerical validations, for which the simulation results are shown and analyzed in detail. Finally, the paper is concluded by providing a brief summary of the work in section VI of this manuscript.
II. PRECISE CLOCK TIME SYNCHRONIZATION PROTOCOL The solution to the problem of network-wide clock synchronization to enable communication in real-time has been proposed in many research works [7]–[11]. Among the available schemes, two promising protocols namely network time protocol (NTP) and precision time protocol (PTP) are widely preferred. Nonetheless, PTP scheme that is designed to synchronize clocks of the nodes in a distributed system that communicate using a network provides better accuracy than NTP and has been adopted in modern communication systems.
VOLUME 6, 2018

FIGURE 1. The conventional message passing PTP scheme.
Owing to its better accuracy, in this paper, we consider PTP as a candidate scheme for clock synchronization in industrial wireless sensor network deployed for critical control and automation services and propose an enhanced version of it for wirelessHP communication.
In conventional PTP scheme, to perform clock synchronization between a master node and a slave node, the master node initiates the clock synchronization period and transmits timestamp messages. The slave node, after receiving these timestamp messages, estimates offset of its clock with respect to the master’s clock and then adjusts its time accordingly. A schematic of such timestamp messaging protocol is shown in Fig. 1 [12].
To proceed further to synchronize the clock, the slave node, after receiving the sequence of messages Sync_Followup, Delay_Response and Delay_Followup from the master node, draws the timestamps T1, T6 and T7 sent by the master node. In the meantime, the slave also takes note of the timestamps T2 and T4, referring to the times when it received the Sync_Request and Sync_Followup messages, respectively, from the master node. Besides, the slave is also aware of the timestamps T8 and T10, that is when it received the Delay_Response and Delay_Followup messages from the master node. Based on the achieved timestamps when the master node initiated the synchronization protocol, and the timestamps, when the slave node received the synchronization request messages, the slave now calculates its clock’s timing offset considering the master clock time as a reference time [12]. The estimation of the clock offset ( ) by the slave node is now done in two steps.
• Step 1: As a ﬁrst step, the propagation delay (Td), that is deﬁned as the time taken by the timestamped messages to reach from the master node to the slave node, is calculated.
• Step 2: After estimating Td, the slave node then estimates its clock offset ( ).
8945

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking

Mathematically, both steps can be expressed as [12]:

Td

=

T8

−

T7

+ 2

T6

−

T5 ,

(1)

= T2 − T1 − Td.

(2)

After estimating , the slave now adjusts its clock to have synchronized time with the master clock [12]. However, the following assumptions that are made during the clock synchronization period in conventional PTP, make this approach susceptible to errors:
• The oscillation frequencies of clocks in master node and slave node are accurately aligned, making exactly similar time counts in both clocks.
• The propagation delays for the messages exchanged between master and slave nodes and the messages exchanged between slave and master nodes are symmetric [7].
In an industrial setup, symmetric propagation delay might be a valid assumption, as the distance between the master and static slave node within the network do not change and hence similar time is taken by a message to reach from a master node to a slave node and vice-versa [4]. But different factors such as temperature, aging of the oscillator, drive level, retracing capability of the oscillator, have a severe effect on the clock’s oscillation frequency and two clocks (even with same oscillation frequencies) will have different time counts [13]. This difference in the oscillations between the clocks in master and slave nodes results in clock-drift-factor (δ) and hence the clock-offset estimation using conventional PTP is not accurate.
To better understand the effect of δ, a generic demonstration is done in Fig. 2. In the presence of frequency error, the true time counts t1 is reﬂected by the two clocks, assumed to be oscillating with frequency f, at different instances because of the deviations in their oscillations. The corresponding errors in the clocks, denoted by eA and eB, modify their actual time count frequencies from f to f(1 + eA) for the clock A, and from f to f(1 − eB) for the clock B. In such a scenario, the clock-drift-factor (δ) exists between two clocks, such that the relative clock-oscillation frequency deviation can be characterized as [7]:

δ = 1 − f(1 + eA) = 1 − a,

(3)

f(1 − eB)

where a is the oscillation factor. If both clocks experience a similar amount of drifts or are oscillating exactly with same frequencies, i.e., eA = eB, then a = 0 and the clock-drift is equal to 1, concluding that both clocks are experiencing similar time counts. Owing to the effect of clock-drift-factor on clock-offset estimation, an enhanced PTP over the conventional one is required to precisely synchronize clocks of the nodes within an industrial wireless sensor network deployed for real-time control and automation applications.

8946

FIGURE 2. The effect of clock drift on two identical clocks oscillating with same frequencies.
III. IMPLICATIONS FOR EFFICIENT TIMESTAMP MESSAGE DECODING FOR PRECISE CLOCK SYNCHRONIZATION The timing synchronization accuracy for the wirelessHP is very demanding in the sense that the communication should always take place in real-time. For that, the clocks in the wireless communication network nodes should be synchronized with a high level of accuracy. The conventional PTP does not sufﬁce to meet this criteria [7]. Therefore, in order to achieve this stringent requirement that is imposed by the critical industrial communication applications, two issues need to be addressed. First, an efﬁcient symbol timing synchronization scheme needs to be identiﬁed that allows accurate timestamp message detection and decoding at slave nodes. Secondly, an enhanced version of PTP scheme is required that should also incorporate clock-drift-factor during clock-offset estimation, such that the accuracy offered by the conventional PTP algorithm is improved [7].
As shown in Fig. 1, signiﬁcant number of messages bearing the timestamp information is exchanged between the master and the slave node. Based on the decoded values of the timestamps, propagation delay and clock-offset are estimated by the slave node. Lack of precise timestamp message detection and decoding, erroneous timestamp information extraction will take place at the slave node [14]–[17]. In order to extract correct timestamps during the clock synchronization period, an accurate symbol timing synchronization scheme is required to determine precise start and end of the frame containing timestamps. As modern communication systems exploit orthogonal frequency division multiplexing (OFDM) to modulate and demodulate the transmitted data, imprecise symbol timing synchronization will severely affect the timestamp extraction. To better understand the effect of imprecise symbol time synchronization in an OFDM based system,
VOLUME 6, 2018

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking

FIGURE 3. Error due to inaccurate symbol timing synchronization in an OFDM based system when decoding timestamp messages during clock offset estimation implementing PTP scheme.
a graph showing the relation between bit error rate (depicting error in data extraction) and the estimation of the frame start time is shown in Fig. 3.
In order to perform accurate clock synchronization, in the section to follow an enhanced PTP scheme is proposed along with the precise symbol time synchronization algorithm. Apart from these, there exists another important aspect that considers the effect of the instance when the timestamps information are drawn for timing offset estimation. The discussion in [10], concludes that the timestamps should be drawn closer to the PHY layer to eliminate any possible jitter in clock synchronization. Since this issue is beyond the scope of this article, we do not discuss this in this paper. Readers for more information, can refer [10], [18], and references therein.
IV. ENHANCED PTP AND SYMBOL TIMING SYNCHRONIZATION As discussed in section II, the conventional PTP scheme does not consider the difference in clock-oscillation frequencies at master and slave nodes during the synchronization period. In practice, the master and slave nodes in a network bear similar clock hardware and have the same oscillation frequencies. However, due to the frequency errors of the clocks, the oscillation frequencies of both master and slave clocks may differ [7]. In the text to follow, the true oscillating frequencies of both clocks are denoted by f. The frequency error of the clock is denoted by e, due to which the oscillating frequencies of the master clock and slave clock can bear any values between f(1 − e) and f(1 + e). To distinguish between the frequency errors in master and slave clocks, the subscripted notation em is used for the master clock and es is used for the slave clock. In the presence of frequency error, the oscillation frequencies are hence denoted by f(1 + em) and f(1 + es) for the master and slave clocks respectively, where em ∈ [−e, e] and es ∈ [−e, e].
VOLUME 6, 2018

Following the conventional PTP approach, the clock-offset is determined by calculating the difference between the time when the slave starts its time count and the time when the master node initiates the synchronization request as (see Fig.1):

PTP = T1 − T0.

(4)

However, in the presence of clock drift, the effective clockoffset perceived by the slave deviates from (4) and is equal to

actual = T1(1 ± em) − T0(1 ± es).

(5)

Similarly, the propagation delay following conventional PTP is calculated as:

TdPTP

=

T8

−

T7

+ 2

T6

−

T5 .

(6)

Which, in the presence of clock-drift is equivalent to

Tdactual

=

(T8 − T5)(1 ± es) − (T7 − T6)(1 ± em) . 2

(7)

Hence, in order to estimate clock-offset with enhanced accuracy the clock oscillation frequency error during the synchronization period needs to be estimated and incorporated.
As deﬁned in the conventional PTP scheme, the master clock during the whole synchronization period serves as the source of a reference time. Therefore, the slave node participating in the synchronization must bear the same time count as the master clock in order to precisely estimate the actual clock timing-offset. It is worth mentioning here that the proposed approach does not consider correcting the master clock time against its drift, rather it allows the participating slave node to adjust its time with respect to the master clock time despite the clock-drift that master clock bears. By doing this, even the actual offset perceived by the slave node is not equal to the true one, the slave will still have the synchronized time count with respect to the master clock time count.

A. ENHANCED PTP FOR PRECISE CLOCK OFFSET ESTIMATION As elaborated in the section II, the conventional PTP scheme comprises of two levels of hierarchical calculations that are performed by evaluating Td followed by estimation. Both Td and estimators are shown in the equations (1) and (2). The enhanced PTP scheme owing to the conventional approach, as shown in Fig.4, segregates the propagation delay calculation and the timing-offset estimation by dividing the message passing scheme into two groups. In order to precisely estimate the actual timing-offset estimation, it is required to ﬁrst perform a precise effective propagation delay estimation.
The propagation delay estimation relies on the timestamps T8, T7, T6 and T5, among which T8 and T5 are drawn by the slave node. Now, in order to estimate precise actual propagation delay by the slave, the oscillation factor needs to be incorporated. The enhanced Td approximation can, hence,
8947

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking

FIGURE 4. Enhanced PTP message passing scheme.

be done by correcting the timestamps T8 and T5 by the factor

a as:

Tdproposed

=

a(T8

−

T5) − 2

(T7

−

T6) .

(8)

Similarly, the actual timing-offset can now be evaluated in

terms of the corrected timestamp T2 and exploiting Tdproposed from equation (8) by the slave as:

proposed = aT2 − T1 − Tdproposed.

(9)

In practice, the correction that needs to be applied, in terms

of a, to the timestamps drawn by the slave node is not known

in advance. Therefore, it becomes customary to estimate

the oscillation factor during the synchronization period. The

clock drift, as a result of different factors affecting the oscilla-

tion frequencies of the clocks, changes over time. So the oscil-

lation factor for the accurate clock synchronization should

also be estimated during each synchronization period.

From the equation (3), the clock-drift-factor δ is deﬁned

as:

δ = 1 − a = 1 − f(1 ± em) .

(10)

f(1 ± es)

In the absence of (or equal) clock-drift, the value of a

becomes 1 and hence the clock-drift-factor, δ, becomes zero.

In order to counter the effect of the clock-drift, the correction

factor in terms of a can hence be evaluated as:

a = f(1 ± em) = 1, f(1 ± es)

a = Ts(1 ± em) = 1, Tm(1 ± es)

a = 1 ± em = Tm ,

(11)

1 ± es Ts

where Tm

=

1 f

and Ts

=

1 f

are the time count periods of

the master and slave clocks respectively. From (11) we can

8948

see that, provided the time count periods of the master and slave clocks corresponding to the equivalent durations are known, then the oscillation-factor between the master and slave clock can be determined by evaluating ratio between them. Referring to Fig. 4, the timestamps:

• during the exchange of Sync_Request message and Sync_Followup message, corresponding to the timestamps T1, T2, T3 and T4,
• during the exchange of Delay_Response and Delay_Followup messages, corresponding to the timestamps T7, T8, T9 and T10,

that are available to the slave node can be exploited to calculate the correction factor a as:

a

=

T9 − T7 T10 − T8

=

T3 T4

− −

T1 . T2

(12)

Now the enhanced actual delay propagation and the clockoffset can be estimated by plugging the value of a from (12) in equations (8) and (9).

1) PROPOSITION
In an ideal situation when there is no clock-drift in both the master and slave clocks (em = es = 0) or if both clocks are oscillating precisely with same frequencies (em = es), such that a = 1 as Tm = Ts, resulting into δ = 0. The enhanced offset and propagation delay estimation reported in equations (8) and (9) takes the form of the conventional PTP that are reported in the equations (1) and (2) respectively as:

Tdproposed

=

a(T8 − T5) − T7 − T6 , 2

= (T8 − T5) − (T7 − T6) ,

(13)

2

and

proposed = aT2 − T1 − Td = T2 − T1 − Td. (14)

Therefore the conventional PTP scheme is a special case of the proposed scheme when both clocks have precisely the same oscillation frequencies.

B. PRECISE SYMBOL TIMING SYNCHRONIZATION FOR EFFECIENT TIMESTAMP MESSAGE DECODING
As perceived from the enhanced PTP scheme reported in Fig.4, the clock-offset estimation heavily relies on accurate reception and decoding of the timestamp messages that are exchanged between the master node and slave node during the synchronization period. As shown in Fig. 3, the imprecise detection of frame boundary in terms of the start time has a severe effect on correct detection of the timestamp messages. In this subsection, we explore symbol timing synchronization schemes and propose an efﬁcient start of the frame detector. Needless to mention, in the proposed scheme slave plays the key role in successful clock synchronization as all the calculations are performed on the slave side. Therefore the

VOLUME 6, 2018

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking

implementation of the proposed precise symbol timing synchronization has more signiﬁcance in the slave node than the master node during the synchronization period.
The symbol timing synchronization for an OFDM based wireless communication systems is a well-explored domain. Different schemes and proposals can be found in the literature [14]–[17] that offer robust synchronization in the multipath environment for wireless LANs. The existing schemes can be divided into two broad categories [17]:
• dirty template based schemes, • cross-correlation based schemes.
The cross-correlation schemes use the known preamble waveform to identify the symbol reception and start of the frame detection [17]. In contrast to this, the dirty template based schemes exploit auto-correlation among the time domain samples of received signal to determine the packet reception and the frame start and end times [19]. Since the cross-correlation based schemes outperform auto-correlation based schemes, they are widely exploited for the precise symbol timing synchronization in wireless communication systems [20].
The conventional cross-correlation based schemes rely on the coefﬁcients resulting from the cross-correlation performed between the received signal and the preamble waveform that is known to the receiver. This approach takes the form [17]:

N −1

R(n) = p∗(m)y(n + m),

(15)

m=0

where y(n) denotes the nth sample of the received signal and p(m) denotes the mth sample of transmitted training sequence of length N . The notation ∗ deﬁnes the complex conjugate operation done over p. Having determined the cross correlation coefﬁcients as in (15), the receiver estimates the frame start time as [20]:

nˆ = argmaxn|R(n)|,

(16)

where the value of nˆ in (16) is the sample in the received signal corresponding to the start of the frame. This scheme has better performance in a LOS environment than in the non-line of sight (N-LOS) scenario [17]. Since in an industrial wireless communication the N-LOS conditions are unavoidable, a robust symbol timing synchronization scheme speciﬁcally for this purpose needs to be determined.
In an N-LOS multi-path environment, the largest peak in the correlator output is not always the ﬁrst multi-path component [17]. Rather, the signiﬁcant reception is contained in the sample prior to the received sample that yields the peak value in (16). To address this complexity, here we propose a robust start of the frame detector that ﬁrst performs the summation of L consecutive coefﬁcients of correlator output as:

L−1

S(n) = |R(n + t)|,

(17)

t =0

VOLUME 6, 2018

FIGURE 5. Comparison of propagation delay estimation by conventional PTP and enhanced PTP.

where L is typically the length of the channel [21] and then determines the start of the frame, received by the receiver. The summation of the coefﬁcients denoted by S(n) in (17) captures most of the channel energy that is conﬁned in the correlator’s output by taking L samples at a time. By exploiting the coefﬁcients of S, the start of the frame can now be estimated in an N-LOS condition as:

n˜ = argmaxn(|S(n)|),

n¯ = argminn||S(n)| ≥ θ × |S(n˜)||,

(18)

where n˜ is the sample index of S locating the window having most of the channel energy conﬁned [21], n¯ is the estimated frame start sample in the received signal and θ is the threshold value. The value of θ is chosen such that any noise sample is avoided while the frame start time is being estimated and the ﬁrst signiﬁcant reception in N-LOS condition is captured.

V. NUMERICAL RESULTS The performance of proposed enhanced PTP and robust symbol timing synchronization is veriﬁed numerically. The simulation results for both schemes are shown and a detailed analysis is presented in this section. The evaluation of clockoffset estimation is done by considering a master and a slave node having similar clock hardwares. The oscillation frequencies of both clocks are assumed 50 MHz with frequency error between ±80 ppm. To depict different oscillation drift scenarios, different combinations of frequency errors between the master clock and the slave clock are considered. The performance of the oscillation factor estimation by the slave node during the synchronization period is reported in Table 1, assuming no timestamping jitter.
In Fig. 5, comparison of effective propagation delay estimation done by the conventional PTP scheme and the proposed enhanced PTP scheme is reported. As shown, in the presence of different clock drifts at master and slave clocks, the actual propagation delay perceived by the slave node is different to the true delay. The propagation delay estimated following the conventional PTP approach highly devi-

8949

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking TABLE 1. Oscillation factor estimation based on enhanced PTP.

FIGURE 7. WirelessHP frame structure and simulation implementation for the symbol timing synchronization performance assessment.

FIGURE 6. Comparison of clock offset estimation by conventional PTP and enhanced PTP.

ates from the actual delay. In contrast, the enhanced PTP by employing the oscillation-factor to correct the slave time improves the performance drastically. The accuracy, as can be seen, is very high and outperforms the classical approach. Nevertheless, when both the clocks are oscillating with precisely the same frequencies, both approaches should perform in similar fashion. This proposition made during the derivation of the enhanced PTP scheme in section IV is also veriﬁed by the numerical result. However, the propagation delay estimated by both approaches coincides with the true delay when the oscillation factor is equal to 1.
The performance comparison of both conventional and enhanced PTP for clock-offset estimation is shown in Fig. 6. The actual offset perceived by the slave is not correctly estimated by the classical PTP approach. The signiﬁcant gain in terms of accurate clock-offset estimation is achieved by the enhance PTP by incorporating the precisely estimated oscillation factor between the master and slave clock. Obvious from the result of propagation delay estimation, the clock-offset estimated by both approaches align with the true offset in the absence of clock-drift or when both clocks are experiencing the same frequency errors resulting into same oscillation frequencies.
To support the enhanced PTP for accurate clock timing synchronization, a robust symbol timing synchronization to adopt a reliable and efﬁcient timestamped message reception
8950

FIGURE 8. Comparison of symbol timing synchronization schemes accuracies at different signal to background noise ratios in IEEE 802.11ac channel model B.
and decoding has also been proposed. The performance of the presented symbol timing synchronization scheme has been assessed in different communication environments via simulations. To depict typical wireless communication scenarios, channel models proposed for wireless local area network (WLAN) systems operating at 5 GHz band are exploited. Based on the communication environment, IEEE 802.11ac categorizes WLAN channels into 5 groups, namely: Channel-A, Channel-B, Channel-C, Channel-D, Channel-E and Channel-F. Among them, we rule out exploiting channel models A and F for the purpose of simulations. The channel model A with a single signiﬁcant tap in its channel impulse response offers a very optimistic transmission medium for an industrial communication setup. In contrast, the channel model F offering 1050 nsecs of the maximum channel delay spread makes it a very pessimistic communication opportunity. The PHY layer design implemented for the symbol timing synchronization simulation is based on the wirelessHP protocol proposed in [4], whose parameters are reported
VOLUME 6, 2018

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking TABLE 2. Paramters of OFDM based PHY.

FIGURE 11. Comparison of symbol timing synchronization schemes accuracies at different signal to background noise ratios in IEEE 802.11ac channel model E.

FIGURE 9. Comparison of symbol timing synchronization schemes accuracies at different signal to background noise ratios in IEEE 802.11ac channel model C.

FIGURE 12. Comparison of symbol timing synchronization schemes accuracies at different signal to background noise ratios in an industrial open area test site communication environment.

FIGURE 10. Comparison of symbol timing synchronization schemes accuracies at different signal to background noise ratios in IEEE 802.11ac channel model D.
in Table 2. A generic frame structure of transmission is shown in Fig. 7. Between every transmitted frame from the master node, and the corresponding reception at the slave, a random delay is imposed to depict a realistic network deployment in a multi-path environment.
The simulation results corresponding to the performance of the proposed scheme under the WLAN channels are shown in Fig. 8, Fig. 9, Fig. 10 and Fig. 11. In order to compare the performance of the proposed symbol timing synchronization
VOLUME 6, 2018

scheme with the performance of other candidate schemes proposed for IEEE 802.11ac based systems, the performance of schemes like max, threshold and sum are also assessed via simulations. The max scheme in the simulation graphs corresponds to the estimator proposed in [20] and is equivalent to estimator in equation (16). The threshold scheme in the results shows the performance of the enhanced version of max scheme proposed in [17]. And the sum scheme in the simulation graphs corresponds to the estimator proposed in [21]. As veriﬁed by the numerical results, the proposed symbol timing synchronization scheme shows superior performance and provides a signiﬁcant gain in terms of the accurate frame start time estimation over the conventional schemes.
To gain more insight into the effect of real-industrial channels over the proposed symbol timing synchronization scheme, two channels measured in the actual industrial setup have also been considered for the purpose of simulation [22]. The simulation result considering the multi-path propagation
8951

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking

FIGURE 13. Comparison of symbol timing synchronization schemes accuracies at different signal to background noise ratios in an industrial automotive assembly plant environment.

FIGURE 15. Effect of symbol timing synchronization schemes on accurate decoding of timestamp messages during enhanced PTP execution.

FIGURE 14. Performance of proposed symbol timing synchronization scheme in different wireless communication environments.
environment corresponding to the open area test site is shown in Fig. 12. The performance is more or less similar to what has been observed when the channel models C and E were implemented for numerical test runs. In contrast, when the channel measured in an active industrial automotive assembly site is considered, the performance differs from the previous results. Nevertheless, the proposed scheme still performs with the accuracy in sub-nanosecond range and provides signiﬁcant gain over other candidate schemes as shown in Fig. 13 and Fig. 14.
Since the enhanced symbol timing synchronization scheme has to support the accurate and reliable timestamp message reception and decoding during the synchronization period. The reliability of the proposed scheme in terms of bit error rate (BER) at different signal to noise ratio (SNR) is also evaluated. The BER performance is shown in Fig. 15. In the region when the SNR is sufﬁciently high, the proposed scheme performs close to the additive white Gaussian noise (AWGN) limit. This signiﬁes that the proposition made for the accurate symbol timing synchronization holds true for
8952

the wirelessHP implementation and provides reliable data reception and detection for accurate enhanced PTP execution during the synchronization period.
VI. CONCLUSION An enhanced version of the precision time protocol has been presented in this paper. In the practical implementation, the drifts experienced by the clocks of the participating nodes within a network cannot be controlled. By estimating the clock-drift-factor and incorporating it during the clock-offset estimation, the proposed approach corrects the slave clock time-count considering the master clock as a reference time. As shown by the simulation results, the proposed approach shows superior performance in comparison to the conventional PTP and provides a signiﬁcant gain in terms of high accuracy in clock-offset estimation.
REFERENCES
[1] M. Wollschlaeger, T. Sauter, and J. Jasperneite, ‘‘The future of industrial communication: Automation networks in the era of the Internet of Things and industry 4.0,’’ IEEE Ind. Electron. Mag., vol. 11, no. 1, pp. 17–27, Mar. 2017.
[2] H. Lee, J. Lee, C. Park, and S. Park, ‘‘Time-aware preemption to enhance the performance of audio/video bridging (AVB) in IEEE 802.1 TSN,’’ in Proc. 1st IEEE Int. Conf. Comput. Commun. Internet (ICCCI), Oct. 2016, pp. 80–84.
[3] IEEE Standard for Local and Metropolitan Area Networks—Bridges and Bridged Networks—Amendment 25: Enhancements for Scheduled Trafﬁc, IEEE Standard 802.1Qbv-2015 (Amendment to IEEE Standard 802.1Q-As Amended by IEEE Standard 802.1Qca-2015, IEEE Standard 802.1Qcd2015, and IEEE Standard 802.1Q/Cor 1-2015), Mar. 2016, pp. 1–57.
[4] M. Luvisotto, Z. Pang, D. Dzung, M. Zhan, and X. Jiang, ‘‘Physical layer design of high performance wireless transmission for critical control applications,’’ IEEE Trans. Ind. Informat., vol. 13, no. 6, pp. 2844–2854, Dec. 2017.
[5] L. Wang, J. Fernandez, J. Burgett, R. W. Conners, and Y. Liu, ‘‘An evaluation of network time protocol for clock synchronization in wide area measurements,’’ in Proc. IEEE Power Energy Soc. General Meeting Convers. Del. Electr. Energy 21st Century, Jul. 2008, pp. 1–5.
[6] Y. J. Kim, B. M. Cheon, J. H. Kim, and J. W. Jean, ‘‘Time synchronization method of IEEE 802.1AS through automatic optimal sync message period adjustment for in-car network,’’ in Proc. IEEE Int. Conf. Inf. Autom., Aug. 2015, pp. 1485–1490.
VOLUME 6, 2018

D. Shrestha et al.: Precise Clock Synchronization in High-Performance Wireless Communication for Time Sensitive Networking

[7] D. K. Lam, K. Yamaguchi, Y. Nagao, M. Kurosaki, and H. Ochi, ‘‘An improved precision time protocol for industrial WLAN communication systems,’’ in Proc. IEEE Int. Conf. Ind. Technol. (ICIT), Mar. 2016, pp. 824–829.
[8] X. Yang, S. Zhang, and H. Li, ‘‘Research and implementation of precise time synchronization system of microgrid based on IEEE 1588,’’ in Proc. IEEE Adv. Inf. Manage., Commun., Electron. Autom. Control Conf. (IMCEC), Oct. 2016, pp. 258–261.
[9] J. L. Gutiérrez-Rivas, C. Prados, and J. Díaz, ‘‘Sub-nanosecond synchronization accuracy for time-sensitive applications on industrial networks,’’ in Proc. Eur. Freq. Time Forum (EFTF), Apr. 2016, pp. 1–4.
[10] A. Mahmood, R. Exel, H. Trsek, and T. Sauter, ‘‘Clock synchronization over IEEE 802.11—A survey of methodologies and protocols,’’ IEEE Trans. Ind. Informat., vol. 13, no. 2, pp. 907–922, Apr. 2017.
[11] M. Haghighi et al., ‘‘Agent-based decentralised data-acquisition and timesynchronisation in critical healthcare applications,’’ in Proc. IEEE 2nd World Forum Internet Things (WF-IoT), Dec. 2015, pp. 81–86.
[12] IEEE Standard for a Precision Clock Synchronization Protocol for Networked Measurement and Control Systems, IEEE Standard 1588-2008 (Revision IEEE Standard 1588-2002), Jul. 2008, pp. 1–269.
[13] H. Zhou, C. Nicholls, T. Kunz, and H. Schwartz, ‘‘Frequency accuracy & stability dependencies of crystal oscillators,’’ Dept. Syst. Comput. Eng., Carleton Univ., Ottawa, ON, Canada, Tech. Rep. SCE-08-12, Nov. 2008.
[14] K.-W. Yip, T.-S. Ng, and Y.-C. Wu, ‘‘Impacts of multipath fading on the timing synchronization of IEEE 802.11a wireless LANs,’’ in Proc. IEEE Int. Conf. Commun. Conf. (ICC), vol. 1. Apr. 2002, pp. 517–521.
[15] J. Yang, K. Cheun, and J. Kim, ‘‘Symbol timing synchronization algorithm for wireless LAN systems in multipath channels,’’ in Proc. Asia–Paciﬁc Conf. Commun., Aug. 2006, pp. 1–5.
[16] J. Sun, H. M. A. Issa, and P. Qiu, ‘‘Frequency and timing synchronization and channel estimation in preamble based OFDM system,’’ in Proc. IEEE Int. Conf. Commun., Circuits Syst. West Sino Expo., vol. 2. Jun. 2002, pp. 1063–1068.
[17] A. Fort, J. W. Weijers, V. Derudder, W. Eberle, and A. Bourdoux, ‘‘A performance and complexity comparison of auto-correlation and cross-correlation for OFDM burst synchronization,’’ in Proc. IEEE Int. Conf. Acoust., Speech, Signal Process., (ICASSP), vol. 2. Apr. 2003, pp. II-341–II-344.
[18] A. Mahmood, G. Gaderer, and P. Loschmidt, ‘‘Software support for clock synchronization over IEEE 802.11 wireless LAN with open source drivers,’’ in Proc. IEEE Int. Symp. Precision Clock Synchronization Meas., Control Commun., Sep. 2010, pp. 61–66.
[19] H. Minn and V. K. Bhargava, ‘‘A simple and efﬁcient timing offset estimation for OFDM systems,’’ in Proc. IEEE 51st Veh. Technol. Conf., vol. 1. May 2000, pp. 51–55.
[20] F. Tufvesson, O. Edfors, and M. Faulkner, ‘‘Time and frequency synchronization for OFDM using PN-sequence preambles,’’ in Proc. IEEE Veh. Technol. Conf., vol. 4. Sep. 1999, pp. 2203–2207.
[21] L. Hazy and M. El-Tanany, ‘‘Synchronization of OFDM systems over frequency selective fading channels,’’ in Proc. IEEE 47th Veh. Technol. Conf., vol. 3. May 1997, pp. 2094–2098.
[22] R. Candell et al., ‘‘Industrial wireless systems: Radio propagation measurements,’’ Nat. Inst. Standards Technol., Gaithersburg, MD, USA, NIST Tech. Note 1951, 2017.
DEEP SHRESTHA received the master’s degree in wireless communication circuits and systems from the Tampere University of Technology in 2014. He is currently pursuing the Ph.D. degree with the Department of Signal Theory and Communications Engineering, Universitat Politècnica de Catalunya, Spain. He is currently an early stage Researcher with the Communication Technologies Division, Centre Tecnològic de Telecomunicacions de Catalunya. His research interest includes signal processing algorithm development and optimization for communication systems.

ZHIBO PANG received the B.Eng. degree in electronic engineering from Zhejiang University, Hangzhou, China, in 2002, the M.B.A. degree in innovation and growth from the University of Turku, Turku, Finland, in 2012, and the Ph.D. degree in electronic and computer systems from the Royal Institute of Technology (KTH), Stockholm, Sweden, in 2013. He is currently a Principal Scientist and a Project Manager on industrial Internet-of-Things (IoT) with ABB Corporate Research, Västerås, Sweden, leading research projects on digitalization solutions for smart homes and buildings, factory and manufacturing, and power systems. He is also serving as an Adjunct Professor or similar roles at universities, such as Royal Institute of Technology (KTH), Tsinghua University, China, and the Beijing University of Posts and Telecommunications, China. He also involved in the business technology joint research, such as strategy, business model, value chain, and entrepreneurship. His current research interests include the Industry4.0, real-time cyber physical systems, IoT, wireless control network, industrial communication, real-time embedded system, high-accuracy localization and navigation, enterprise systems, automation and robotics, multicore system on chip, and network on chip. He serves as the Chair for Sub TC in the Technical Committee on Industrial Informatics, IEEE Industrial Electronics Society. He is an Associate Editor of the IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, the IEEE JOURNAL OF BIOMEDICAL AND HEALTH INFORMATICS, and the IEEE REVIEW ON BIOMEDICAL ENGINEERING, a Guest Editor of the IEEE ACCESS, and an Editorial Board of the Journal of Management Analytics (Taylor & Francis), Journal of Industrial Information Integration (Elsevier), and International Journal of Modeling, Simulation, and Scientiﬁc Computing (WorldScientiﬁc).
DACFEY DZUNG received the M.Sc. and Ph.D. degrees in electrical engineering from the Swiss Federal Institute of Technology (ETH) in 1975 and 1981, respectively. He was with Brown-Boveri, Alcatel, Ascom, Bosch Telecom. Since 1997, he has been with ABB Corporate Research, Baden, Switzerland, where he is currently an ABB Corporate Research Fellow in industrial and utility communication. He has involved in a variety of communication systems, including satellite and cellular mobile radio, industrial wireless sensors, and powerline communications. His main technical contributions are in the design of communication protocols and of modem signal processing algorithms. He has also studied cyber security issues in industrial and utility communication systems. His current technical interest is in communication networks for factory automation, process automation, and the smart grid, with a focus on networks using heterogeneous technologies, such as wireless and powerline communications. He was a member of the working groups of the European Telecommunication Standards Institute (ETSI) specifying the digital cellular standard GSM, digital microwave links (RES), and the trunked mobile radio system TETRA. He is member of the IEEE P1901.2 working group on narrowband powerline communication, the Swiss national delegate to the IEC working group SC65c/WG16 on industrial wireless networks, and ETSI and CENELEC working groups on standardization and regulation of industrial wireless applications. He is in the program committees of the conference series on Emerging Technologies and Factory Automation and Workshops on Factory Communication Systems. He has served as an Associate Editor of the IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS.

VOLUME 6, 2018

8953

