An introduction to fault-tolerant quantum computation and its overhead reduction schemes

Il Kwon Sohn
School of Electrical Engineering Korea University Seoul, Korea
d2estiny@korea.ac.kr

Jun Heo
School of Electrical Engineering Korea University Seoul, Korea
junheo@korea.ac.kr

Abstract‚Äî A quantum computer is a powerful machine that provides a new approach to information processing based on quantum mechanics. However, basically, qubits are very vulnerable to errors, thus a quantum error correction code (QECC) is needed to build a reliable quantum computer. Moreover, simply using QECCs is not sufficient in order that a quantum computer can tolerate errors. In quantum computation, each operation must be performed on the encoded states. Even when the gates used to perform these operations are noisy, the quantum computation must be tolerable to the errors. This is called fault-tolerant quantum computation and it is an essential condition for implementing a quantum computer. However, considering the fault tolerance, the overhead of the quantum computer increases exponentially. In this paper, we introduce fault-tolerant quantum computation and schemes to reduce the its overhead.
Keywords ‚Äî Fault-tolerant quantum computation, Universal quantum computation, Quantum error correction code, Overhead of quantum computation
I. INTRODUCTION
Quantum computers are information processing systems based on quantum mechanics. They are expected to be used for solving various problems that classical computers cannot handle using quantum characteristics such as quantum parallelism and quantum interference [1]. Universal quantum computers can theoretically construct all systems that can be configured with classical computers [2]. It does not mean, however, that quantum computers show better performance than classical computers in all areas. Nonetheless, quantum computers in several areas show results that cannot be achieved with classical information processing systems [1, 3].
Despite the advantages of quantum information processing, there are various limitations to construct a quantum computing system. The quantum algorithm assumes that there is no error in the operation used in it. However, quantum information is not easy to deal with than classical information, and loss of information can easily occur due to interaction with environment. Therefore, schemes are needed for protecting quantum information from errors caused by interaction with the environment and operations.
Quantum error-correcting codes (QECCs) are a key tool for combating quantum mechanical errors in quantum computations and quantum communications [4-7]. It was first demonstrated by Shor that quantum errors can be detected and corrected using

a QECC [4]. Subsequently, various QECCs have been developed and studied [5-7]. Using these QECCs can protect quantum information, but another approach is needed to perform all operations while in encoded state and to perform QECCs with noisy gates. The protocol to solve these problems is called fault tolerance. Shor first proposed a protocol for fault-tolerant quantum computation [8].
The fault-tolerant protocol should include components that perform fault-tolerant error correction, fault-tolerant state preparation, fault-tolerant measurements, and fault-tolerant universal gates. Most of these components focus on preventing error propagation. QECCs can only correct a limited number of errors per block thus, we should be careful not to spread the error within the block. In general, this problem is solved using a transversal gate. However, considering the fault-tolerance, the amount of resources for quantum computation increases significantly. To solve this overhead problem, several studies have been carried out in various perspective. In this paper, we describe fault-tolerant quantum computation and its overhead and introduces techniques to reduce the overhead.
II. FAULT-TOLERANT QUANTUM COMPUTATION
QECCs are only useful if quantum gates are perfect, thus we need to supplement QECC with fault-tolerant protocols. The fault-tolerant protocol should include components for the universal quantum computation that perform fault-tolerant error correction, fault-tolerant state preparation, fault-tolerant measurements, and fault-tolerant universal gates. Usually this component set is dedicated to solving the problem error propagation. A single faulty gate can cause errors only in the qubits associated with the gate; a faulty single-qubit gate will cause errors at most one qubit and a faulty two-qubit gate cause errors on at most two qubits. Even a perfect two-qubit gate can propagate an existing error to the qubits involved in the gate. Therefore, even errors occurring from a faulty single-qubit gate can cause errors in many qubits in the final stage of quantum computation. Since QECC can only correct a limited number of errors per block, we should be especially careful not to cause error propagation. Generally, this error propagation problem can be solved by using transversal gates (See Figure 1). If the quantum computation system consists only of transversal gates, there will be only one error per block if there is a faulty gate anywhere in the system. Then these errors will be corrected by QECC.

978-1-5386-4646-5/18/$31.00 ¬©2018 IEEE

44

ICUFN 2018

Unfortunately, universal quantum computation is not possible with only transversal gates in most QECCs.

Using concatenation for QECCs as mentioned above can improve the error rate as follows. When we concatenate Ì†µÌ±òÌ†µÌ±ò times, the error rate Ì†µÌ±ùÌ†µÌ±ùÌ†µÌ±òÌ†µÌ±ò is as follows.

Ì†µÌ±ùÌ†µÌ±ùÌ†µÌ±òÌ†µÌ±ò

=

(Ì†µÌ±êÌ†µÌ±ê)2Ì†µÌ±òÌ†µÌ±ò Ì†µÌ±êÌ†µÌ±ê

We roughly estimate Ì†µÌ±êÌ†µÌ±ê‚àí1 as the threshold of the QECC Ì†µÌ±ùÌ†µÌ±ùÌ†µÌ±°Ì†µÌ±°‚Ñé. If the value of Ì†µÌ±ùÌ†µÌ±ùÌ†µÌ±°Ì†µÌ±°‚Ñé is small, it is possible to use qecc only if the performance of the physical qubit is improved accordingly.

Figure 1 An example of transversal gates
In the digital system, a universal gate is a gate that can be used to construct all other logic gates such as a NAND gate or a NOR gate. However, in quantum computation, unlike the digital system, all gates cannot be constructed with only one gate. In addition, some gates should be approximated because the number of possible quantum gates is uncountable, whereas the number of finite sequences from a finite set is countable. Thus, there are quantum universal gates sets such as {H, T, CNOT}, {T, Toffoli}. For example, T gate in the [[7,1,3]] Steane code is a non-transversal gate. These non-transversal gates cause overhead problems to be discussed later.
Let Ì†µÌ±ùÌ†µÌ±ù be the probability of an error occurring in a single physical gate, then the probability of two errors occurring in two physical gates is Ì†µÌ±ùÌ†µÌ±ù2. Let Ì†µÌ±êÌ†µÌ±ê be the position in the block at which two errors that cannot be corrected by the error correction code occur. Thus, the total probability of accumulating two errors becomes Ì†µÌ±êÌ†µÌ±ê2 per logic gate by using QECCs and fault-tolerant protocol. If the physical error rate Ì†µÌ±ùÌ†µÌ±ù is less than 1/Ì†µÌ±êÌ†µÌ±ê , then a logical error rate can be improved by using QECCs. This logical error rate can be further improved by using other schemes.
In QECC, there is a scheme to reduce the error rate through concatenation as well as classical error correction code. Concatenation is the scheme that apply the encoding circuit of QECCs recursively to construct QECCs hierarchically. Figure 2 briefly shows concatenation.

III. OVERHEAD REDUCTION SCHMEM OF FAULT-TOLERANT
QUANTUM COMPUTATION
Considering the aforementioned QECC and fault-tolerance, the resource used for quantum computation is seriously increased. For example, as shown in Figure 3, the number of ancilla qubits used to obtain one bit of syndrome in the [[7,1,3]] Steane code is increased to six-qubit.
Figure 3 Example of overhead increase due to fault tolerance
Non-transversal gates also make the problem worse. For example, the circuit for T| +‚ü©Ì†µÌ∞øÌ†µÌ∞ø magic state distillation of [[9,1,3]] Bacon-Shor code is as follows.

Figure 2 Schematic picture of concatenation

Figure 4 Distillation circuit for the Ì†µÌ∞ìÌ†µÌ∞ì| +‚ü©Ì†µÌ±≥Ì†µÌ±≥

45

Since one magic state T| +‚ü©Ì†µÌ∞øÌ†µÌ∞ø consists of 9 qubits, simply 135 qubits are needed to create a magic state, even if the twirl processes are excluded.
To solve this overhead problem, several studies have been carried out in various perspective. First, there are schemes that reduce the resources of the magic state distillation [9, 10]. In case of Ref. [9], lowering the overhead by encoding the magic state for concatenated QECCs stepwise from the physical qubit level to the logical level. Because of the small size of the intermediate code, resource overhead is expected to be lower than previous methods based on distillation at the logic level [9]. Bravyi et al in Ref. 10, proposed a method to construct stabilizer codes in which T gate is transversal. This code allows distillation of the magic state with a small overhead. By introducing the notion of a triorthogonal matrix, a code which have a transversal T gate on all logical qubits can be constructed.
As mentioned before, overhead caused by considering faulttolerance is not only a magic state problem. Ref. 11, 12 suggested methods of lowering the overhead by optimizing the logical zero state preparation circuit.

most burdensome. Therefore, although the fidelity loss of quantum computation is allowable, it is a waste of resources to perform error correction for every gate operation. Ref 17 and 18 suggested a method to use error correction periodically instead of every gate operation. Weinstein, Yaakov S showed that when using logical qubits encoded with Steane code for quantum computation, error correction is performed for every 50 singlequbit gates without applying QEC after every gate. Ref. 18 analyzes each best QEC cycle of 3-qubit QECC and 9-qubit QECC by analyzing the best memory time of them, and numerically analyzes possible implementations of QEC on quantum-dot and superconductor qubit technologies
IV. CONCLUSIONS
In this paper, we describe the fault tolerance used to implement quantum computation reliably. It is important to prevent error propagation because quantum error correction codes can only correct a limited number of errors for each block. Therefore, several techniques such as transversal gates are needed to prevent error propagation. However, this fault-tolerance greatly increases the resources of quantum computation. Thus, we introduced schemes to reduce the overhead.

ACKNOWLEDGMENT
This work was supported by the National Research Foundation of Korea (NRF) grant funded by the Korea government (MSIT) (No. 2015R1A2A2A01006301). This research was supported by Basic Science Research Program through the National Research Foundation of Korea (NRF) funded by the Ministry of Education (2016R1A6A3A11936376)

Figure 5 Optimized preparation circuit of Steane code. [11]
By optimizing the stabilizer generators of QECCs through Steane‚Äôs Latin rectangle method, the gates of the preparation circuit can be reduced. This optimized stabilizer generators also reduce the number of ancilla qubits used for the fault-tolerant syndrome extraction.
Chamberland, C. et al. showed that universal quantum computation is possible without using magic state distillation by concatenating [[7,1,3]] Steane code and [[15,1,3]] RM code [13, 14]. Since Steane codes has transversal H and CNOT gates, and [[15,1,3]] RM codes has transversal T gate, many studies combining two codes have been made. Ref. 15 also showed that universal quantum computation is possible without magic state distillation by non-uniformly concatenating Steane code or [[5,1,3]] code with [[15,1,3]] RM codes. There is another method using the codes which have different transversal gate sets. In Ref. 16, a scheme is proposed lowering the overhead through the conversion between the Steane code and the RM code family.
Less use of the measurement would also reduce the overhead of quantum computation because the performance and operating time of the measurement among the quantum operations are the

REFERENCES
[1] P.W. Shor, Proceedings 35th Annual Symposium on Foundations of computer Science, IEEE Computer Society Press, CA, p. 124, (1994).
[2] A. Barenco, et al., Phys. Rev. A, 52, pp. 3457-3467, (1995).
[3] Grover, L. K., Proceedings of the 28th Annual ACM Symposium on the Theory of Computing, STOC‚Äô96, ACM, New York, p. 212, (1996).
[4] P.W. Shor, Phys. Rev. A 52, R2493 (1995). [5] D. Gottesman, eprint arXiv:quant-ph/9705052 (1997). [6] A.R. Calderbank, P.W. Shor, Phys. Rev. A 54, 1098 (1996). [7] A.M. Steane, Phys. Rev. Lett. 77, 793 (1996).
[8] P.W. Shor, Proceedings 37th Annual Symposium on Foundations of computer Science, IEEE Computer Society Press, pp. 56-65, (1996).
[9] Goto, H., Scientific Reports 4, 7501 (2014). [10] Bravyi, S. & Haah, Phys. Rev. A 86, 052329 (2012). [11] Goto, H., Scientific Reports 6, 19578 (2016). [12] Paetznick, Adam., Ph.D. thesis (2014). [13] Chamberland, C., Jochym-O‚ÄôConnor, T. & Laflamme, R., Phys. Rev.
Lett. 117, 010501 (2016).
[14] Chamberland, C., Jochym-O‚ÄôConnor, T. & Laflamme, R., Phys. Rev. A 95, 022313 (2017).
[15] Nikahd, E., Sedighi, M. & Saheb Zamani, M., Phys. Rev. A 96, 032337 (2017).
[16] Anderson, J. T., Duclos-Cianci, G. & Poulin, D., Phys. Rev. Lett. 113, 080501 (2014).
[17] Weinstein, Yaakov S., Phys. Rev. A, 89, 020301 (2014) [18] IlKwon, Sohn, Seigo, Tarucha, and Byung-Soo, Choi, Phys. Rev. A, 95,
012306, (2017)

46

