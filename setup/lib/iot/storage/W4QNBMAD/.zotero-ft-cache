Viewpoint Networking for Trusted Reality

Tae Yeon Kim, Pyungkoo Park, Ho Sun Yoon, Sung Hyun Yoon, Jung Yeon Hwang and Sung Back Hong,
Network Research Division Electronics and Telecommunications Research Institute
Daejeon, Republic of Korea Email: {tykim, parkpk, yhs, shy72, iyhwang, sbhong}@etri.re.kr

Abstract— With the advancement of immersive applications, edge computing and IoT technologies to deliver application service in an intuitive, immediate and reliable manner, we propose a viewpoint networking framework for Trusted Reality which is to bridge the real-cyber world based on trust by integrating individual preferences and surrounding objects to provide users with desired application services and perform a preliminary proof of concept to verify the feasibility of the proposed framework.
Keywords—edge;IoT; viewpoint networking; trusted reality
I. INTRODUCTION
The future of mobile service is increasingly gaining traction with wearables as post-smartphones, especially as immersive applications such as mobile augmented reality solutions are expected to hit the market beyond all doubt [1].
Mobile edge computing is a new networking paradigm in which computing nodes are placed in close proximity to mobile devices for highly responsive cloud services. Leveraging MEC, cloud-based immersive application can further improve their responsiveness and potentially enable large-scale services. Internet of Things (IoT) is another paradigm that will connect a plethora of physical objects to the Internet and enable them to make intelligent decisions [2-5].
With the advancement of AR, Edge computing and IoT technologies to deliver application service in an intuitive, immediate and reliable manner, we propose a viewpoint networking framework for Trusted Reality which is to bridge the real-cyber world based on trust by integrating individual preferences and surrounding objects to provide users with desired application services.

II. Trusted Reality Viewpoint Networking Framework
In this chapter, we introduce novel concept of Viewpoint Networking for Trusted Reality, dubbed Trusted Reality Viewpoint Networking (TRVN) as an innovative framework for the post smartphone era.
A. Concept of Trusted Reality Viewpoint Networking
Trusted Reality introduced in this paper is defined as a customized immersive application service experience with realtime communication and recognition of knowledge and information in a safe and convenient way for anyone throughout the automated connection of physical and cyber world. There are key principles in the definition of Trusted Reality.
Viewpoint networking technology for the Trusted Reality enables the organic conjunction of physical objects and cyber objects. Viewpoint has two distinct meanings: the way one thinks about a particular thing, and a point of view of something through eyes of someone. The first one indicates the logical concept of something from someone’s mind while the second represents cognitive scene from one’s eyes.
With those dictionary definitions, TRVN could be defined in a duplicated sense. TRVN might be for intuitive networking between visible physical objects firstly or customized individual networking service environment tailored to user context secondly. Also TRVN could be used for organic networking between cyber-physical world by integrating both viewpoints and perspectives based on the concept of Trusted Reality as shown in Fig. 1.

Fig. 1. Conceptual diagram of Trusted Reality Viewpoint Networking

978-1-7281-1340-1/19/$31.00 ©2019 IEEE

538

ICUFN 2019

B. TRVN Framework
We have designed framework architecture of TRVN in terms of layer, plane and constituent subsystems as illustrated in Fig. 2. There are 2 hierarchical layers and 2 independent planes with 4 subsystems which extended both layers and planes.
1) Layers To simplify the framework, TR Edge layer consists of distributed edge node as a point of presence of network service which can takes advantage of the proximity to provide service at a location close to the user. TR Edge layer can be configured hierarchically, and each layer is optimized for virtualizationbased micro services under the consideration of the characteristics of the service.
TR Core layer oversees the distributed TR Edge nodes to provide network service across the edge network. It also has a role of integration and management of the network service from a point of global view by gathering data from each nodes involved in network service instances. Integrated data for network service includes operational and management data while network service is up and running for end users.
2) Planes There are two planes in TRVN framework, operational plane and management plane. Management plane covers ranging from provider’s network management to virtual resource management to lifecycle management of each network service instances. By the request of application, management plane sets up the network service instance across the TR Edge nodes and performs orchestration and management of the created network service instances by the administrative policy.
Operational plane is working more on the side of application level. Events occurred while the application service is running are collected at the edge layer and gathered at the core layer to determine next operation or command to the internal or external entities by the application policy.
3) Subsystems We have identified four subsystems for TRVN framework. TRVN service management subsystem (SM), residing at core layer and belonging to management plane, is a virtual service management subsystem that models virtual services and manages lifecycle using real-time resource and policy information. Technically it has a feature set of closed-loop virtual service modelling, micro-service based viewpoint networking, cyber-physical system management and virtual service mobility management technologies.
TRVN edge management subsystem (EM) in the edge layer as a component of management plane is an infrastructure management subsystem that creates a virtual network between various virtual objects based on glasses, point of view objects, and augmentation function virtualization, and manages virtual infrastructure resources. It has a technical requirements of dynamic infrastructure virtualization based on viewpoint networking, real-time monitoring over virtual entities and tenant management of virtual group.

Applications

TR Core Layer
TR Edge Layer

TRVN Application Broker (AB)
• Authentication • Service Discovery • Service policy/ rule • Data / Information
TRVN Edge Broker (EB)
• Event from things • Control over Things • SDN for Things
Things & Gateways (+ TR Devices)
Operational Plane

TRVN Service Management (SM)
• Resource management • Placement/ Offloading • VE management • Network management
TRVN Edge Management (EM)
• VIM • Resource Monitor • Inter-Edge networking
Virtualization Infrastructure
Management Plane

Fig. 2. Framework architecture of TRVN

TRVN application broker subsystem (AB) working at the core layer as a component of operational plane has a role of application level operational management, policy based application enablement and real-time control over application service. It has a set of functions including user profile management, authentication and service profile management, active policy enforcement based on data gathering from the edge layer.
TRVN edge broker subsystem (EB) is for physical and virtual entities created corresponding, and manages the transfer and exchange of information exchanged according to the type of service to be provided in the edge layer on the operational plane. Its main role is brokering between entities involved in the specific network service instance by tracking context of entities from incoming events defined previously.

III. Preliminary PoC
We have performed the preliminary proof of concept to verify the feasibility and efficiency of the proposed TRVN framework based on the prior study [6-7]. To this end, we set up TR Core and TR Edge respectively. Both are equipped with a quad-core Intel processor at 2.4 GHz with 4GB of RAM, and runs the Ubuntu operating system.
A. Testbed
To evaluate the performance of the different cases of service environment, we have set up four disparate types of testing environment: Amazon cloud, OpenStack based VM, OpenStack Docker container and Kubernetes with Docker container.
As shown in the Fig. 3, an application broker (AB) and a service manager (SM) in the TR Core are interfaced with TR Edge where an Edge Broker (EB) with Brokering Controller and User Guidance function and an Edge Manager (EM) subsystem for deploying and operating the service in conjunction with SM are operated. The Cognitive Engines (CE) which is provisioned through SM and EM, can include various application services. In this test bed, we run face swapping, object recognition (OR), and character recognition (OCR) engine respectively. The same CE also run on the same machine on the Amazon cloud via the Internet in order to make performance comparisons when running at the TR Edge.

539

Application Broker

Application TR Core

Service Manager

Streaming Assistance
UE

Edge Broker
Brokering Controller
User Guidance

TR Edge
Cognitive Engines

Edge Manager

Internet

Fig. 3. Testbed for TRVN preliminary PoC
The flow of the service is as follows. TR Edge includes an EB which has a role of service routing from a user device to a cognitive engine created in a tailored way rather than VMbased static service deployment. In this testbed EB is to verify the function and performance among various platforms on the assumption that the CE can be dynamically driven in the infrastructure.
In the first place the applications to be used in the terminal are dynamically arranged in the TR Edge node through the SM and the EM based on the application service workflow through the AB. It is aimed to expand the efficiency of resources by allowing different CE to be deployed according to individual and terminal. The deployed CE may be dependent on one service user or shared among different users, but the service session is dedicate to the service user.
TR Edge's Brokering Controller connects with user and CE to establish the path to provide service and route user's service request. The path between the user and the CE is set at the time of provisioning, and the assistance information output from the CE goes through the User Guidance. In this case, it is important that Brokering Controller and User Guidance, which are the unit functions of Edge Broker, and CE are managed by lifecycle according to need, and can be expanded or optimized by scaling or chaining as needed.
B. Results
For the results of TRVN preliminary PoC, we could quantitatively confirm the effect of low latency due to fast response at the user's nearest location from the remote cloud as illustrated in Fig. 4. The latency is largely divided into computing and network latency. Computing latency translated into processing time in the figure turned out to be dependent upon application service. Character recognition and object recognition were relatively delayed due to processing required for reasoning.
In simple image processing application such as face swapping, there was little computing latency. However, in case of providing three application services, we can confirm that there is not much difference in computing latency in remote cloud or edge in VM environment excluding Kubernetes container which has outperformed. Network latency, on the other hand, has been observed to be more affected by network conditions at the time of testing than application services.

Fig. 4. Test results of TRVN preliminary PoC
On the average, we have observed that the edge has a network latency of about 20 ~ 30ms excluding the processing time, and when the cloud is used, the network latency of less than 300ms and largely more than 400ms occurs.
IV. Conclusion
We presented newly employed concept of Trusted Reality for the post smartphone era with the Viewpoint Networking to offer intuitive networking between cyber-physical objects by integrating viewpoints and perspectives. Also from the preliminary PoC for TRVN under the testbed combining management and operation, we were able to compare the performance of the latency in various environments. We will extend the study by incorporating application driven brokering and agile management of TRVN infrastructure for the post smartphone era.
ACKNOWLEDGMENT
This research was partially supported by the IT R&D program of MSIT completed and standardization (Ministry of Science and ICT) [2018-0-00226, Development of Trusted Reality core technology for the era of post smartphone] and [2018-0-01502, A Development for Intellectualized Edge Networking based on AI.].
REFERENCES
[1] Q. Liu, S. Huang, J. Opadere and T. Han, “An Edge Network Orchestrator for Mobile Augmented Reality,” IEEE Infocom 2018, DOI:10.1109/INFOCOM.2018.8486241.
[2] J. Liu, K. Luo, Z. Zhou and X. Chen, “A D2D offloading approach to efficient mobile edge resource pooling,” IEEE WiOpt 2018, DOI: 10.23919/WIOPT.2018.8362882.
[3] B. Lorenzo, J. García-Rois, X. Li, J. González-Castaño, and Y. Fang, “A Robust Dynamic Edge Network Architecture for the Internet of Things,” IEEE Networks, 2018, vol. 1, pp. 8-15.
[4] S. Wang, X, Zhang, Y. Zhang, L. Wang, J. Yang, and W. Wang, “A survey on mobile edge networks: convergence of computing, caching and communications,” IEEE Access, 2017, vol. 5, pp. 6757-6779.
[5] N. Ahmed, H, Rahman, and Md.I. Hussain, “A comparison of 802.11ah and 802.15.4 for IoT,” ICT Express, Vol.2, No. 3, 2016, pp. 100-102
[6] K. Ha, Z. Chen, W. Hu, W. Richeter, P. Pillai and M. Satyanarayanan, “Towards Wearable Cognitive Assistance,” MobiSys, June 2014.
[7] M. Satyanarayanan, “Edge computing for situational awareness,” IEEE LANMAN, June 2017.

540

