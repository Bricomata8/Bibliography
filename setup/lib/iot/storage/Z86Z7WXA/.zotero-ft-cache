Proceedings of the 12th International IEEE Conference

WeBT1.2

on Intelligent Transportation Systems, St. Louis, MO,

USA, October 3-7, 2009
On using Petri nets for representing and controlling

signalized urban areas: new model and results

Angela Di Febbraro and Nicola Sacco DIMSET – University of Genova
Via Montallegro 1, 16145 – Genova, Italy Email: {angela.difebbraro,nicola.sacco}@unige.it

Davide Giglio DIST – University of Genova Via Opera Pia 13, 16145 – Genova, Italy Email: davide.giglio@unige.it

Abstract—A microscopic model of signalized urban areas and its representation by means of stochastic-timed Petri nets are described in this paper, where a trafﬁc-responsive control strategy, whose objective is the optimization of green duration of each stage, is also proposed. The Petri net representation here proposed is the new version of a previously proposed one, which was based on deterministic-timed Petri nets. The motivations of the need of proposing a new version and the differences between the two Petri net representations are clearly described. In addition, some results on the application of the proposed methodology to a single signalized intersection are included in the paper.
I. INTRODUCTION
Signalized intersections within urban areas are considered in this paper with the objective of optimizing the duration of each stage. In trafﬁc signalling control, changing the duration (or the relative duration) of each stage is one of the way to inﬂuence trafﬁc conditions via trafﬁc signals operations, according to the time-varying behaviour of trafﬁc; other ways include the change of stage speciﬁcation, the cycle time, and/or the offset between cycles in case of multiple intersections [22]. In general, control strategies employed for trafﬁc signalling control are divided into ﬁxed-time strategies and trafﬁc-responsive strategies. Fixed-time strategies consider a given time of a speciﬁc day and determine the optimal splits, the optimal cycle time, or even the optimal staging, based on historical values about the trafﬁc demand over the considered signalized urban area [1], [16], [24]; on the other hand, trafﬁc-responsive strategies make use of real-time measurements (typically acquired by means of inductive loops or pattern-recognition digital cameras) to calculate in realtime the suitable signal settings. In the last two decades, some tools have been developed in order to apply trafﬁc-responsive strategies to signalized urban areas [13], [15]. The control strategy proposed in this paper falls within the class of trafﬁcresponsive strategies.
The proposed model belongs to the class of microscopic trafﬁc representations [17], [18]. In such a class of models, the behaviour of each vehicle is distinctly modelled in the trafﬁc stream. In order to properly model trafﬁc congestions, in the proposed model each intersection is divided into several crossing sections [4], used by vehicles to approach the roads downstream with respect to the intersection itself. Moreover, an intersection includes a multi-stage trafﬁc signal, whose

stage matrix (i.e., the sequence of signal stages) is ﬁxed. The proposed microscopic trafﬁc model is represented by means of timed Petri nets, with the purpose of providing a suitable modelling tool for trafﬁc management and signalling control. As a matter of fact, a network of trafﬁc lights regulating the urban mobility can be viewed as a complex discrete-event system (DES), with such peculiar characteristics to require dedicated models and control methods. Among the many modelling formalisms proposed for DESs, Petri nets (PNs) [20], [23] have been proved to be a valuable and powerful tool for design, analysis, and control of DESs, since they are able to capture the precedence relations and interactions among the concurrent and asynchronous events typical of such systems. The idea of applying PN capabilities to trafﬁc modelling and control was introduced in [3]; then, some other works have been published in the related literature [12], [19], [27], [28]. In this context, speciﬁc class of Petri nets have been also adopted to model and control intersections (e.g., hybrid or continuous PNs [9], [10], [26], coloured PNs [11], [14], diods/max-plus algebra [2], [21]).
The model considered in this paper and its representation by means of Petri nets are not totally new. As a matter of fact, deterministic-timed Petri nets were previously adopted by the authors to represent signalized urban areas [4]–[8]. However, some tests on those nets and their application to some case studies showed that a completely deterministic model leads, in most cases, to undesired behaviours of the Petri net itself. In particular, the deterministic-timed Petri net representing signalized intersections and roads and all untimed Petri nets necessary to solve “structural conﬂicts” (see [4] for details) caused the occurrence of deadlock states which have no correspondence in the represented system. In the new model, proposed in this paper, stochastic times are considered to model interarrival times of vehicles entering the trafﬁc area, the minimum time necessary to pass through a crossing section, and the minimum time necessary to travel along a road. Moreover, the timed Petri net (not deterministic but stochastic) representing signalized intersections and roads now considers separately all trafﬁc streams involved in the intersections, thus preventing the occurrence of unreal deadlock states. Finally, structural conﬂicts are now solved making use of simpler nets (not untimed but stochastic-timed) which guarantee the turning rates characterizing the model.

771 978-1-4244-5521-8/09/$26.00 ©2009 IEEE

It is worth ﬁnally observing that the proposed methodology falls in the class of coordinated strategies as it considers an urban zone, or even a whole network, and not only a single intersection. Moreover, the control strategy is applicable not only to undersaturated trafﬁc conditions, but also to oversaturated trafﬁc conditions, which represent a crucial aspect to be considered in trafﬁc management (only few strategies in the literature are suitable for oversaturated trafﬁc conditions). Basically, the undersaturated condition corresponds to low trafﬁc in which queues that grow during the red phases are entirely drained during the green phases; on the contrary, under the oversaturated condition queues increase and in many cases reach the upstream intersections thus blocking the area.
II. THE NEW MODEL
In this section, the main differences of this new model with respect to that initially proposed in [4], and subsequently modiﬁed in [5]–[7], are described.
The basic components of the model of a signalized area are again the signalized intersections and the roads, as in the previous works. Intersections are divided into crossing sections in order to model the behaviour of vehicles when crossing an intersection (see Fig. 1). In the new model and in its representation by means of Petri nets, the different turning movements (which are followed according with the relevant turning rates αj(k),l(h)) are separately taken into account. This avoids the occurrence of deadlock states which have no correspondence in the represented system. However, “real” deadlock states (for example, with reference to Fig. 1, a deadlock occurs when each crossing section is occupied by a vehicle that want to go straight) are correctly represented in the model, and a speciﬁc deadlock recovery strategy is embedded in the Petri net (in order to model the fact that, in a real situation, vehicles resolve the deadlock in some manner). A further consequence of separately considering turning movements is that there is no more the need of calculating speciﬁc turning rate values associated with crossing sections, as introduced in [4] (then, also the volume rate parameter in unnecessary).

R7(1) R8(1)

R1(1) R2(1)

S1,1 S1,3 S1,2 S1,4

R6(1) R5(1)

R4(1) R3(1)

N

W

E

S

Fig. 1. A two-stages isolated intersection.

Another difference in the model of intersections regards time aspect. In the previous model all times associated with an intersection (interarrival times and travel times of crossing sections) were deterministic; now, stochastic times are

considered: in particular, the interarrival times of vehicles in the trafﬁc network is a stochastic value with exponential distribution and the time necessary to travel a crossing section is a stochastic value with Erlang distribution. This makes the new model more realistic. Roads, which connect intersections, are still mainly characterized by their capacity and, in case of multiple lanes, by the exit percentages βj(k). However, in the new model, the minimum travel time of a road is a stochastic value with Erlang distribution.

red light green light

40 ≤ ψ1,1 ≤ 80 (ψ1,1 = 65) 20 ≤ ψ1,2 ≤ 60 (ψ1,2 = 35)
R2(1) R6(1)
R4(1) R8(1)

ψ1,1

ψ1,2

Fig. 2. Stage speciﬁcation for the isolated intersection of Fig. 1.

An important difference is relevant to trafﬁc signals. Cycle times were considered ﬁxed in all previous works. In particular, it was assumed that a global cycle time did exist, and such a global cycle time was used to synchronize the three phases which characterized the old optimization algorithm. The optimization algorithm is now different (see Section III) and then such a constraint has been removed. It is only assumed that the duration of stage s of signalized area v (it is recalled that, in the proposed model, trafﬁc signals are grouped in V signalized areas, whose stage speciﬁcations can be easily obtained from the stage speciﬁcations of all trafﬁc signals included in the signalized area), namely ψv,s, is constrained between a lower and an upper bound (ψvL,s and ψvU,s, respectively); moreover, ψv,s denotes the nominal value of the duration of stage s of signalized area v (see Fig. 2).
A. The Petri net representation
The trafﬁc system brieﬂy described in the previous section is represented by means of a Petri net. The whole Petri net can be viewed as the merging of some nets: a stochastictimed Petri net representing signalized intersections and roads, some deterministic-timed Petri nets representing the staging of signalized areas, some stochastic-timed Petri nets which solve (on the basis of turning rates and exit percentages) conﬂicts which are in the net representing signalized intersections and roads, and some further stochastic-timed Petri nets which recover deadlocks which may occur in the net representing signalized intersections and roads. In the following, the main features of such a Petri net-based representation are described making use of an example which refers to the representation of the two-stages isolated intersection of Fig. 1. It is worth noting that such a representation is new with respect to that proposed in the previous works of the authors.
In Fig. 3, the stochastic-timed Petri net representing the isolated intersection of Fig. 1 is illustrated. Stochastic transitions with exponential ﬁring rate t2, t4, t6, and t8 (together with places p9, p10, p11, and p12) model the entry of vehicles in the intersection. The queues of vehicles which wait for crossing the intersection are represented by places p2, p4, p6, and p8. A

772

t1 p1

t8

p12

p15

p8

t12

p13

t29

p17 T16

p16

t7 p7 t32 p32 T31

p30 p6 t6

t17

T13

t30 p29 T28

p28 t11 p31

p14

p9

t14 t15

t25

p11

t24

p24

p21

t9 p18

T18 p19 t20

T23

t27

t2

p2

T21

p26

T26 p27

t19

p23

p5 t5

p22
p20 t22

t10

p4

p25

p3

p10

t4

t3 Fig. 3. Petri net representation of the isolated intersection of Fig. 1.

vehicle may approach a crossing section if it is available. The availability of crossing sections is modelled by the presence of a token in places p15, p20, p25, and p30 (in Fig. 3, grey circles highlight places and transitions belonging to a certain crossing section). Trafﬁc movements inside a crossing section are separately represented. As an example, vehicles travelling through S1,2 from R2(1) to R3(1)/R5(1) are modelled by tokens which ﬂow towards p3/p5 through t9, p18, T18, p19, and t19/t20; instead, vehicles travelling through S1,2 from R8(1) to R3(1) are modelled by tokens which ﬂow towards p3 through t15, p21, T21, p22, and t22. Immediate transitions t1, t3, t5, and t7 model the leaving of vehicles from the intersection.

equal to 1/kλ2.
Queued vehicles can cross the intersection if the crossing section which they enter (for example, S1,2 is the relevant crossing section for vehicles queued in R2(1)) is available and also if they have green light. The staging of the whole intersection is modelled through the deterministic-timed Petri net in Fig. 5.

t9

t11

t10

t12

p37

p38

kλ

kλ

kλ

kλ

tj pi,1 tj,1 pi,2 tj,2

pi,k−1 tj,k−1

Fig. 4. Equivalent structure for Tj (modelling the ﬁring time according with an Erlang-k distribution having average 1/λ and variance 1/kλ2), being pi = •Tj .

Transitions depicted as double-bordered rectangles (and labelled as Tj) are stochastic transitions with ﬁring time in accordance with an Erlang-k distribution. In terms of Petri nets, such a kind of transitions may be modelled as a series of places and exponential transitions, as in Fig. 4. In order to guarantee an average equal to 1/λ, the ﬁring rate of each exponential transition must be kλ, which also means a variance

p33 t33 p34

t34

p35 t35 p36

t36

Fig. 5. Petri net representation of the staging of the isolated intersection.
In such a net, a token in p37 (resp., p38) allows (in case of availability of the relevant crossing section) the ﬁring of t9 and t11 (resp., t10 and t12), that is, it means green light for vehicles queued in R2(1) and R6(1) (resp., R4(1) and R8(1)) which corresponds to stage ψ1,1 (resp., ψ1,2). The two deterministictimed transitions t33 and t35 represent the durations of the two stages. These durations are the control variable when the performances of the trafﬁc network are optimized, and then the

773

ﬁring times of such transitions are not ﬁxed and their actual values are set by the control system, as described in Section III. However, it can be assumed that, in case of no optimization, the ﬁring time of a deterministic timed transition representing the duration of stage s of signalized area v is set equal to the nominal value ψv,s.
Several conﬂicts are present in the net of Fig. 3. They represent the possibility of a vehicle to take two or more directions. As an example, the conﬂict consisting of place p19 and the two transitions t19 and t20 represents the possibility of a vehicle in crossing section S1,2 and coming from R2(1) (token in p19), to go straight (t19) or turn right (t20).

p14 p41 p19 p45 p24 p49 p29 p53
t45 p55 t46
p21 p42 p26 p46 p31 p50 p16 p54 Fig. 7. Petri net which recovers the deadlock characterized by the simultaneous presence of a token in p14, p41, p19, p45, p24, p49, p29, and p53.

tj

pA

tA

tB

pB

pC

th

tk

pD

λA = 1 · 105

λB

=

βB βA

· 105

Fig. 6. Petri net which solves the conﬂict between th and tk.
The conﬂict between two generic immediate transitions th and tk (note that, only immediate transitions can be involved in conﬂicts) is structurally solved by means of the small stochastic-timed Petri net illustrated in Fig. 6 (one net for each conﬂict) which “decides” on the basis of the turning rates characterizing the involved movements. In particular, let βA and βB are the percentages of vehicles which take the direction represented by th and tk, respectively (obviously, it must be βA + βB = 1). Such turning rates are guaranteed by setting the ﬁring rates of the two exponential transitions tA and tB to 1 · 105 and (βB/βA) · 105, respectively. The scale factor 105 is necessary to take the decision very fast (more speciﬁcally, faster than the time necessary to travel through a crossing section). It is worth remarking that the solution of a conﬂict does not depend on the state of the trafﬁc system but only on turning rates; this is necessary to properly model the drivers’ behaviour which usually follow their predeﬁned path independently of the state of the system.
The last part of the whole Petri net representing the trafﬁc system consists of some stochastic-timed Petri nets which recover (circular wait) deadlocks which may occur in the net representing signalized intersections and roads, as explained at the beginning of Section II. As an example, consider again the isolated intersection of Fig. 1 and its Petri net representation. The deadlock described in Section II (each crossing section is occupied by a vehicle that want to go straight) is a classic circular wait deadlock in which each client of a system requires (and waits for) a resource which is occupied by

another client of the system. In terms of Petri net elements, this correspond to the simultaneous presence of a token in p14, p41, p19, p45, p24, p49, p29, and p53 (note that, places p41, p45, p49, and p53, as well as places p42, p46, p50, and p54, result from the Petri nets which solve conﬂicts). In the proposed new model, it is assumed that, after a certain time interval (whose length is stochastic in accordance with an exponential distribution) drivers resolve the deadlock autonomously and then each vehicle can proceed towards its destination. The stochastic-timed Petri nets in Fig. 7 actuates such a deadlock recovery strategy. In general, there is one of such nets for each deadlock which may occur in the trafﬁc system.

III. THE CONTROL SYSTEM
The ﬁnal target of this work is the minimization of queue lengths in the trafﬁc network through the optimization of stage durations. The inputs to the control system are the ﬂow rates in the road stretches entering the network, whereas the control variables are the durations of stages, namely ψv,s, v = 1, . . . V (V is the number of signalized areas), s = 1, . . . , Sv (Sv is the number of stages in the v-th signalized area). It is important to specify that in the optimization problem, which will be presented in the following subsections, the evolution of the system state is determined by means of the Petri net “fundamental equation” ( [20]), which provides the value of a reachable marking on the basis of the actual marking and of a ﬁnite sequence of allowed ﬁrings of transitions (token game). In other words, in the proposed trafﬁc signalling control strategy, the Petri net representation plays a key role, being the mathematical tool which provides the system state evolution.

A. Problem deﬁnition

Let ψ be the vector of positive real number gathering the

nS =

V v=1

Sv

durations

of

stages

in

the

considered

trafﬁc

network. Being the stage durations constrained between a

lower and an upper bound, let R ⊂ RnS be the nS-dimensional subspace which is obtained by constraints ψvL,s ≤ ψv,s ≤ ψvU,s
∀v = 1, . . . V and ∀s = 1, . . . , Sv. R may be thought of

as represented by a set of inequality constraints, which are

expressed by the matricial form

Aψ ≤ b

(1)

774

Then, ψ is the control vector and R is the solution admissibility set (ψ ∈ R). Moreover, let tMAX be the time horizon on which the cost function is computed (optimization horizon).
The cost function to be minimized is a weighted sum of a cost term relevant to the maximum lengths reached by the queues, and a cost term taking into accounts the mean lengths of queues. Such cost terms are deﬁned as follows.

• The sum of the maximum lengths of the nQ queues Qh(ψ, t), h = 1, . . . , nQ, in the interval [0, tMAX], namely

nQ

JM(ψ, t) =

max Qh(ψ, t);

(2)

h=1 t∈[0,tMAX]

• The sum of the mean lengths of the nQ queues Qh(ψ, t), h = 1, . . . , nQ, over the ﬁxed time interval [0, tMAX], namely

nQ 1

JL(ψ, t)

=

h=1

tMAX

l · Th(l),
l≥0

(3)

where Th(l) is the total time interval during which the queue h has length l.
Note that, with reference to the stochastic-time Petri net representing the trafﬁc system, the queue Qh is represented by a place pi of the net (as an example, the queue in road R2(1) of the isolated intersection of Fig. 1 is represented by place p2). Then, the length of queue Qh corresponds to the marking of place pi, being pi the place which represents the h-th queue, and Th(l) is the time interval during which the marking of place pi is l.
The optimization problem is deﬁned as follows. Problem 1:

min J(ψ, t) = αLJL(ψ, t) + αMJM(ψ, t),

(4)

ψ

where αL and αM are weighting coefﬁcients, and subject to

ψ ∈ R.

(5)

The above deﬁned problem needs to compute the state trajectories of the considered system. Then, while such a task can be faced by means of the formerly presented Petri net model, it is worth noting that, due to the nature of trafﬁc systems, many parameter (such as input trafﬁc ﬂows, crossing section delays, and so on) have to be considered to be stochastic variables, and the represented as stochastic timed PN transitions. Therefore, Problem 1 result to be a stochastic optimization problem.

B. The optimization algorithm

The above stochastic optimization problem is in general very hard to solve, since even the mere empirical evaluation of the expected value of the cost function needs to simulate the model many times, thus to guarantee a good evaluation of the real value of the cost function by means of the equation

E[Jˆ(ψ, ν)] = J(ψ, ν)

(6)

where Jˆ(ψ, ν) is an estimator of real value J(ψ, ν). To face such a challenge, a two-phases optimization approach is here proposed, based on an pseudo-gradient algorithm and on a quadratic programming problem. In detail, at each algorithm iteration k, it perform the two operations:
1) ﬁnd an approximation ψˆ(k) of the optimal solution ψ◦ without taking into account the problem constraints expressed by (5); this means that ψˆ(k) may be feasible or unfeasible. In this phase, the direction along with the cost function decreases is estimated;
2) ﬁnd the best admissible solution ψ(k) which satisﬁes the problem constraints but also minimizes the nonoptimality. Such a task is performed only when ψˆ(k) is not feasible, that is when ψˆ(k) ∈/ R.
INITIALIZATION
ψ = ψ0

STOP

no

FURTHER

IMPROVEMENT

POSSIBLE?

yes

COMPUTE NEXT OPTIMAL SOLUTION
APPROXIMATION

COMPUTE THE BEST SOLUTION
ADMISSIBLE

IS THE

yes

SOLUTION

ADMISSIBLE?

no
Fig. 8. The optimization algorithm.

The whole algorithm is represented in Fig. 8. In the following subsections, the two phases are described in detail.

C. Phase 1 – Find the optimal solution
The algorithm proposed for this phase allows to optimize an “empirical” version of the expectation

E[Jˆ(ψ,

ν)]

=

1 N

N

Ji(ψ, ν)

(7)

i=1

where uncertainty samples Ji(ψ, ν) come from the simulation of the proposed model, in which variables are taken into account. In particular, the solution approach via a Simultaneous Perturbations Stochastic Approximation (SPSA) approach (see, for instance, [25]) in which successive approximations of the optimal value

ψ◦ = arg min E(ψ)

(8)

ψ∈R

is proposed. In doing so, the samples J(ψ, ν) are considered to be “noisy” observations of the cost function in (4), neglecting that they come from simulations. As above mentioned, the recursion mimics a classical gradient descent method, in which

775

the gradient with respect to ψ of the functional Eˆ(ψ) is approximated at each iteration using only two noisy evaluations of the cost function.
Formally, let ψ(k) denote the k-th estimate of the minimum, and let {η(k)} be a random sequence of column random vectors

η(k) = η1(k) η2(k) . . . ηn(k) T

(9)

that are not necessary identically distributed. The two-sided SPSA algorithm to update ψ(k) is constructed as follows

ψˆ(k+1) = ψ(k) − α(k)∇˜ J

(10)

where α(k) is the step-size multiplier and ∇˜ J is an estimate of the cost function gradient, deﬁned as

∇˜ J

=

[η(k)]−1 Eˆ+(k) − Eˆ−(k) c(k)

(11)

in which c(k) a positive sequence converging to zero, [η(k)]−1
is the vector containing the inverses of the elements of η(k), and the values Eˆ±(k) represent the “empirical” cost function measures taken at parameter values ψ(k) ± c(k) · η(k), that is

E±(k) = J (ψ(k) ± c(k) · η(k)).

(12)

D. Phase 2 – Guarantee the feasibility of the solution
As previously mentioned, the estimate of the optimal solution ψˆ(k+1) computed at the iteration (k + 1) may be not feasible. In the proposed approach, the best admissible solution is determined by means of the solution of a quadratic programming problem (which is fast to solve from a computational point of view). In effect, the problem consists in ﬁnding the point ξ◦ on the line of gradient ∇˜ J passing in ψˆ(k) (and for construction in ψ(k+1)), with the minimum distance

d = ξ − ψˆ(k+1) ξ − ψˆ(k+1) T

with respect to ψˆ(k+1) and gathering to the set R.

d ψ2 ψ2max ≡ ξ2max

ψ(k)

ξ◦

ψˆ(k+1)

ψ2min ≡ ξ2min ψ1

ψ1min ≡ ξ1min

ψ1max ≡ ξ1max

Fig. 9. Second phase of each iteration.

Then, being the square root function monotonically increasing, the problem can be stated as

min ξ − ψˆ(k+1) ξ − ψˆ(k+1) T

(13)

ξ

subject to the constraint

AINξ ≤ bIN

(14)

which coincides with the whole problem constraint expressed in (1), and to constraint

AEQξ = bEQ

(15)

which is used to “force” the point ξ to be on the line of gradient ∇˜ J in ψˆ(k+1). The present line in Rn is described in
the parametric form by the equations

 ξ(1)

=

ψ(k)(1)

+

z

·

∇˜ J

(1)

 ξ(2)

=

ψ(k)(2)

+

z

·

∇˜ J

(2)

...

(16)



 ξ(n)

=

ψ(k)(n)

+

z

·

∇˜ J

(n)

where z ∈ R. By means of these n equations with n + 1 variables, the equality constraints (15) has be rewritten in the matricial form
AEQ · ξ(1) ξ(2) . . . ξ(n) z T = bEQ, (17)

in which

1 0 . . . 0 −∇J (1)

0 1 . . . 0 −∇J (2)

AEQ

=

  

...

...

...

...

...

 

,



(18)

0 0 . . . 1 −∇J (n)

and bEQ = ψˆ(k)(1) ψˆ(k)(2) . . . ψˆ(k)(n) T . (19)

TABLE I INCOMING FLOWS AT THE INTERSECTION OF FIG. 1 (VEH/H).

Time Interval (“period”) (seconds) (h = 1) [0, 300) min (h = 2) [300, 600) min (h = 3) [600, 900) min (h = 4) [900, 1200) min

fR2(1)
940 1210 1620 1560

fR4(1)
640 730 580 600

fR6(1)
1290 1440 1480 1610

fR8(1)
740 880 650 900

IV. CASE STUDY

In this section, some numerical results, relevant to the application of the proposed methodology to the single intersection of Fig. 1, are presented. An optimization horizon of 20 minutes has been considered, and the incoming ﬂows, measured every 5 minutes, are those reported in Table I. Then, each optimization “period” assumes vehicle interarrival times distributed as exponential random variables with rate

3600 λj(h) = fj(h)

[s−1],

(20)

being h = 1, . . . , 4 the index of the period and j ∈

{R2(1), R4(1), R6(1), R8(1)}, the incoming direction index. For what concerns the cost function in (4), in the considered

case study it has been chosen αL = 4 and αM = 1, that is

J(t) = 4JL(ψ, t) + JM(ψ, t),

(21)

thus to equalize the two term contributions.

776

p2 35
with optimisation without optimisation
30

25

20

15

10

5

0

0

2

4

6

8

10 12 14 16 18 20

minutes

Fig. 10. Queues at input roads R2(1) at the intersection of Fig. 1.

p4

20

with optimisation

18

without optimisation

16

14

12

10

8

6

4

2

0

0

2

4

6

8

10 12 14 16 18 20

minutes

Fig. 11. Queues at input roads R4(1) at the intersection of Fig. 1.

p6 70
with optimisation without optimisation
60

50

40

30

20

10

0

0

2

4

6

8

10 12 14 16 18 20

minutes

Fig. 12. Queues at input roads R6(1) at the intersection of Fig. 1.

p8

20

with optimisation

18

without optimisation

16

14

12

10

8

6

4

2

0

0

2

4

6

8

10 12 14 16 18 20

minutes

Fig. 13. Queues at input roads R8(1) at the intersection of Fig. 1.

A. Numerical Results
To the end of showing the capabilities of the proposed model and optimization algorithm, two scenarios for the considered intersection are taken into account:
1) in the ﬁrst scenario, the nominal values ψ of stage durations are considered during the 20 minutes (no optimization is performed);
2) in the second scenario, optimized stage durations ψ◦ are considered for each optimization period (time interval of 5 minutes).
The results (lengths of queues) of the ﬁrst scenario are depicted with dashed lines in Fig. 10 (which is relative to R2(1)/p2), Fig. 11 (R4(1)/p4), Fig. 12 (R6(1)/p6), and Fig. 13 (R8(1)/p8), whereas the results of the second scenario are depicted with solid lines. As it is easy to note, queue shapes are better when optimized stage durations are considered with respect to the non optimized ones.
An alternative way to evaluate the results of this case study is to compare the sample mean (computed by means of N = 1000 runs) of the value of the cost function in the ﬁrst scenario (µNON OPT) with that in the second scenario (µOPT). The two

means are

1N

µNON OPT = N

J(ψ , ν) = 227.4624,

(22)

i=1

and

1 µOPT = N

N

J(ψ◦, ν) = 126.3137.

(23)

i=1

Note that the comparison has to take into account the stochastic variable ν, thus leading to the need of computing the above means.
Finally, in Fig. 14, the values of the cost function, each of them computed for each iteration of two runs of the optimization algorithm, are reported, together with their shape. In such a ﬁgure, it is evident that the cost function non monotonically decreases “locally”, due to the stochasticity of the system and of the optimization algorithm, whereas it does “globally”. On the other hand, it signiﬁcantly increases at iteration 51, that corresponds to the beginning of a new optimization run caused by the change of the input ﬂows. Evidently, the optimal solution for the former ﬂows is not still good for the new ones.

777

Cost function at each step

50 Cost function Shpape of the cost funcioncle
45
40
35
30
25
20 10 20 30 40 50 60 70 80 90 100 step
Fig. 14. Example of cost function descent at each iteration.
V. CONCLUSION In this paper, signalized urban areas have been taken into account with the aim of optimizing the performances of the system (more speciﬁcally, the queue lengths) by means of a trafﬁc signalling control strategy which optimizes the durations of trafﬁc signal stages through a two-phases optimization algorithm based on a SPSA approach. The trafﬁc system model is represented by means of a stochastic-timed Petri net, which plays a very important role being the evolution of the system state in the control system driven by the Petri net. In the paper, the most important characteristics of the model and its representation have been presented; in particular, differences and improvements with respect to some previous works of the authors have been described. The paper includes some results about the application of the proposed model and control strategy to a single intersection whose trafﬁc lights consist of two stages. However, the proposed methodology can be applied to more complex intersections or networks of intersections which include, for example, left-turn movements and multi-lane roads. Actually, it has been successfully applied to a trafﬁc network consisting of 4 signalized intersections and 6 roads: the resulting Petri net representation is quite large (hundreds of places and transitions) and then such results cannot be included in the paper mainly due to the lack of space. Finally, the solutions obtained through the application of the proposed control strategy will be validated in the near future by means of their use within a commercial simulation tool.
REFERENCES
[1] R.B. Allsop. SIGCAP: A computer program for assessing the trafﬁc capacity of signal-controlled road junctions. Trafﬁc Eng. Control, 17:338–341, 1976.
[2] A. Correia, A.-J. Abbas-Turki, R. Bouyekhf, and A. El Moudni. Modelling urban intersections in diod algebra. WSEAS Transactions on Systems, 5(5):1223–1228, 2006.

[3] F. Di Cesare, P. Kulp, K. Gile, and G. List. The applications of Petri nets to the modeling analysis and control of intelligent urban trafﬁc networks. In Lecture Notes in Computer Science, volume 815. Springer-Verlag, 1994.
[4] A. Di Febbraro and D. Giglio. On representing signalized urban areas by means of deterministic-timed Petri nets. In Proc. IEEE ITSC’04, pages 372–377, 2004.
[5] A. Di Febbraro and D. Giglio. On adopting a Petri net-based switching modelling system to represent and control urban areas. In Proc. IEEE ITSC’05, pages 185–190, 2005.
[6] A. Di Febbraro and D. Giglio. Trafﬁc-responsive signalling control through a modular/switching model represented via DTPN. In Proc. IEEE ITSC’06, pages 1430–1435, 2006.
[7] A. Di Febbraro and D. Giglio. Urban trafﬁc control in modular/switching deterministic-timed Petri nets. In Proc. 11th IFAC Symposium on Control in Transportation Systems, 2006.
[8] A. Di Febbraro, D. Giglio, and N. Sacco. Modular representation of urban trafﬁc systems based on hybrid petri nets. In Proc. IEEE ITSC’01, pages 867–872, 2001.
[9] A. Di Febbraro, D. Giglio, and N. Sacco. Urban trafﬁc control structure based on hybrid Petri nets. IEEE Trans. on Intelligent Transportation Systems, 5(4):224–237, 2004.
[10] A. Di Febbraro and N. Sacco. On modelling urban transportation networks via hybrid Petri nets. Control Engineering Practice, 12(10):1225– 1239, 2004.
[11] M. Dotoli and M.P. Fanti. An urban trafﬁc network model via coloured timed Petri nets. Control Engineering Practice, 14(10):1213–1229, 2006.
[12] J.L. Gallego, J.L. Farges, and J.J. Henry. Design by Petri nets of an intersection signal controller. Transportation Research Part C, 4:231– 248, 1996.
[13] N.H. Gartner. OPAC: A demand-responsive strategy for trafﬁc signal control. Transp. Res. Record 906, U.S. Dept. Transp., Washington, DC, 1983.
[14] Y.-S. Huang and P.-J. Su. Modelling and analysis of trafﬁc light control systems. IET Control Theory and Applications, 3(3):340–350, 2009.
[15] P.B. Hunt, D.I. Robertson, and R.D. Bretherton. The SCOOT on-line trafﬁc signal optimization technique. Trafﬁc Eng. Control, 23:190–192, 1982.
[16] G. Improta and G.E. Cantarella. Control systems design for an individual signalised junction. Transp. Res. B, 18:147–167, 1984.
[17] H.E.M. Keller and A.D. May. Non-integer car-following models. Highway Research Record, (199):19–32, 1967.
[18] M.J. Lighthill and G.B. Whitham. On kinematic waves ii. a theory of trafﬁc ﬂow on long crowded roads. Proc. of the Royal Society London, A229:317–345, 1955.
[19] G.F. List and M. Cetin. Modeling trafﬁc signal control using Petri nets. IEEE Trans. on Intelligent Transportation Systems, 5(3):177–187, 2004.
[20] T. Murata. Petri nets: Properties, analysis and applications. Proc. of IEEE, 77(4):541–580, 1989.
[21] A. Nait-Sidi-Moh, M.-A. Manier, A. El Moudni, and H. Manier. Maxplus algebra modeling for a public transport system. Cybernetics and Systems, 36(2):165–180, 2005.
[22] M. Papageorgiou, C. Diakaki, V. Dinopoulou, A. Kotsialos, and Y. Wang. Review of Road Trafﬁc Control Strategies. Proceedings of the IEEE, 91(12):2043–2067, 2003.
[23] J.L. Peterson. Petri Net Theory and the Modeling of Systems. PrenticeHall, Inc., Englewood Cliffs (NJ), U.S.A., 1981.
[24] D.I. Robertson. TRANSYT method for area trafﬁc control. Trafﬁc Eng. Control, 10:276–281, 1969.
[25] J. C. Spall. Introduction to Sthocastic Search and Optimization: Estimation, Simulation and Control. Wiley, 3rd edition, April 2003.
[26] C. Tolba, D. Lefebvre, and P. Thomas. Continuous and timed Petri nets for the macroscopic and microscopic trafﬁc ﬂow modelling. Simulation Modelling Practice and Theory, 13(5):407–436, 2005.
[27] A. Tzes, S. Kim, and W.R. McShane. Applications of Petri networks to transportation network modelling. IEEE Trans. on Vehicular Technology, 45:391–400, 1996.
[28] J. Wang, Y. Deng, and C. Jin. Performance analysis of trafﬁc control systems based upon stochastic timed Petri net models. Int. J. of Software Engineering and Knowledge Engineering, 10(6):735–757, 2000.

778

