Efficient Caching for Delivery of Multimedia Information with Low Latency in ICN
Kamrul Hasan and Seong-Ho Jeong Dept. of Information and Communication Engineering
Hankuk University of Foreign Studies, Korea kamrul@hufs.ac.kr, shjeong@hufs.ac.kr

Abstract— Information-centric networking (ICN) is being recognized as a useful technology for efficient and fast content retrieval for multimedia applications and will accelerate the change from the traditional host-oriented network architecture to the content-oriented network architecture. In this paper, we propose an efficient content retrieval mechanism based on cluster-based caching in ICN. We provide a solution to the onpath and hash caching problems using the cluster-based ICN to increase the probability of content access and decrease the packet loss ratio. Simulation results are also presented to show that the content transfer time in our cluster-based approach is less than the existing caching mechanisms.
Keywords—ICN, Clustering, and Caching
I. INTRODUCTION
Content delivery from one device to another is increasing rapidly, and fast routing and cooperation between devices are becoming critical issues. The current Internet architecture based on Internet Protocol (IP) addresses depends on the fixed position of the content for delivery. Due to the rapid growth of the Internet and high volume of traffic, the current Internet faces some critical problems like network congestion, packet losses, low download speeds and so on. As a result, many new research efforts are going on to change the current IP-based addressing system. Information-centric networking (ICN) is a paradigm for the new Internet architecture that shifts the location-based communication to the name-based communication, which will significantly improve the network scalability and performance and reduce cost in content delivery services [1]. In ICN, contents are retrieved and delivered based on the content name instead of the content location.
Although, ICN is being popular for its numerous characteristics, e.g., in-network caching, naming, packet level content security, there are some issues to resolve, e.g., Interest flooding in the network, inefficient caching and content management. In this paper, we propose an efficient content retrieval mechanism based on clustering in ICN. We provide a solution to the on-path and hash caching problems using the cluster-based ICN to increase the probability of content access and decrease the packet loss ratio.
The rest of the paper is organized as follows. Section II describes related studies on ICN and recent work on content caching strategies and mechanisms. Section III proposes an efficient multimedia content retrieval mechanism based on clustering in ICN. The performance analysis is given in Section IV. Finally, we conclude the paper with a summary in Section V.
II. RELATED WORK
In ICN, in-networking caching schemes are mainly divided into three categories: on-path caching, off-path caching [3],

and hybrid techniques. In-networking caching is a very important feature for ICN. However, according to the concept of basic ICN, when a content provider gets a content request packet, e.g., Interest packet in Content-Centric Networking (CCN), a type of ICN, then it responds to the user with a content reply packet, e.g., Data packet in CCN on the reverse path of Interest packet traversing. All the reverse path routers store the incoming Data packets. As a result, this kind of caching creates many problems like memory losses, increases processing time and so on. There are various works already done, and many works are still ongoing regarding the content caching in ICN.
On-path caching schemes have been studied in [4] where the cache placement [5, 6] issue was discussed. Data packets in on-path caching schemes are saved in any on-path nodes or a subset of traversed nodes [7, 8] during traversing the reverse path of Interest forwarding. There are some other onpath routing schemes, e.g., Leave Copy Everywhere (LEC) [9], Leave Copy Down (LCD) [4], ProbCache [8], Centrality-based caching [7]. The problems of the popularity-driven content caching [10] and content location [11] attracted lots of attentions in the research communities. Although the scalability of all the on-path caching mechanism above is strong, it limits cache hits due to redundant caching of contents.
Data packets in a network using off-path caching are cached to the node according to the defined rules. Interests must be forwarded in the same rules, as Data packets are traveling the reverse ways of Interests. Generally, Interests are handled by nodes in network cooperatively [12, 13]. Rosensweig et al. [14] proposed a method named “Breadcrumbs”. They developed a content caching mechanism by additionally storing minimal information regarding caching history, and a routing system that adopts an implicit, transparent, and best-effort approach towards caching. Hash technologies are also studied for in-network caching of ICN. Saino et al. [14] designed five different hash-routing schemes which exploited in-network caches without requiring network routers to maintain per-content state information. A domain is considered as a whole by these five schemes. In contrast to on-path caching, off-path caching owns higher cache hits but has limited scalability due to per-content state required for routing.
Hybrid techniques of on-path caching and off-path caching were also explored. By exploiting nearby and multiple content copies for the efficient delivery, SCAN [15] exchanges the information of the cached contents using Bloom filter. Compared with IP routing, SCAN can offer reduced delivery latency, reduced traffic volume, and load balancing among links. Hybrid techniques are supposed to mix features of on-path and off-path techniques and balance the performance of scalability and cache hits.

978-1-7281-1340-1/19/$31.00 ©2019 IEEE

745

XXX-X-XXXX-XXXX-X/XX/$XX.00 ©20XX IEEE

ICUFN 2019

III. EFFICIENT CLUSTER-BASED CACHING IN ICN
We already described the in-network caching problems of ICN in Section II where we mentioned the problem of onpath caching and hash caching. This section describes in detail the solutions to those problems using the cluster-based caching in CCN, an instance of ICN. Figure 1 represents the problem of on-path caching.

To solve the problem with hash and on-path caching, we use a cluster-based approach where a cluster and a cluster head are established using the clustering techniques in [2]. From Figure 2, it is clearly shown that the cluster-based approach solves the on-path caching problem. If the cluster algorithm is applied to the network then a set of a clusters are returned as output. In Figure 2, we can see that Users 1 and 2 are connected to one cluster. In the cluster-based CCN, when User 1 sends the Interest packet, it goes to a connected router that is also a member router of the cluster. Therefore, according to the concept of cluster-based approach, Interest is directly forwarded to the Router 3. Then Router 3 responds to the Interest packet using the reverse path of incoming Interest packet. The yellow and violet lines represent the Interest and Data packets respectively.

(a)

(b)

Figure 1: Problem with on-path caching
From Figure 1 (a), we can see that, when User 2 sends an Interest packet to the neighboring router, it forwards the Interest packet based on the basic CCN forwarding strategies. The yellow line indicates the path of Interest forwarding. When the server gets the Interest packet, it responds to the user with Data packet on the reverse path. The violet line indicates the path of Data packet forwarding. During data transmission, Router 1 and Router 3 cache the incoming Data packets based on the on-path caching technique. However, from Figure 1 (b), we can see that, when User 1 sends the same Interest packet to the neighboring router, it forwards the Interest packet towards Router 1 instead of Router 3. It is desirable that the closer Router 3 responds to the Interest packet but it forwards the Interest packet to Router 1 which causes the waste of time and increases the network overhead. This strategy of on-path caching is really a concerned matter. Our cluster-based approach can solve this on-path caching problem.

Figure 3: Problem with hash caching
There is another cash placement algorithm which is a caching scheme that was proposed by [10]. Figure 3 represents the problem with hash caching. From Figure 3, we can see that a user sends an Interest packet toward the network. The content is placed into the server and cached into Router 2. According to the concept of hash caching, the Interest packet is forwarded towards Router 2 instead of the server. As a result, content transmission time is increased and the overhead of the network is also increased. But, this problem can be solved by the cluster-based approach.

Figure 2: Enhanced on-path caching

Figure 4: Enhanced hash caching
Figure 4 represents the solution to the hash caching using the cluster-based approach. From Figure 4, we can see that the cluster algorithm is applied to the network. When a user sends the Interest packet towards the neighboring Router 4, it fails to serve the Interest based on the Interest forwarding technique of a cluster. Router 4 sends the Interest packet to the server via Router 1 and it replies with the Data packet in the opposite path.
746

IV. PERFORMANCE ANALYSIS
The performance of the proposed solutions is evaluated in the Network Simulator-3 (NS-3) with Direct Code Execution (DCE) [2] environment. CCNx application [2] is used to apply the CCN concept in the simulation environment. DCE is used to apply the CCNx application in the NS-3 environment. The different module of CCNx application is used in the NS-3 environment by using different C++ classes and modules are used to make our clusters and integrate it with the CCNx application.
Figure 5 represents the comparison of content transfer time between on-path caching and cluster-based caching. This content transfer time is shown for a small video file that was used for both mechanism as multimedia traffice. Figure 5 shows that the cluster-based approach needs less transfer time than the on-path caching technique.

V. CONCLUSION
In this paper, we first investigated the limitation of on-path and hash caching mechanisms. We then showed both approaches deliver the content to the end users from a remote content caching store via simulations, and therefore the content transfer time was increased. We also showed that the proposed efficient caching mechanism solved the problem with both caching mechanisms using cluster-based caching, and as a result our solution reduced the content transfer time. The end users can access their expected contents from the nearest content providers instead of the remote content servers in a fast manner.
ACKNOWLEDGMENT
This research was financially supported by the Ministry of Trade, Industry and Energy (MOTIE) and Korea Institute for Advancement of Technology (KIAT) through the International Cooperative R&D program. This work was supported by Hankuk University of Foreign Studies Research Fund of 2019.

Figure 5: On-path caching and cluster-based caching Figure 6 shows the comparison of content transfer time between hash caching and cluster-based caching. In the previous section, Figures 3 and 4 illustrate the hash caching problem and solution. We simulated those two networks, and we found out that the cluster-based caching also needs less transfer time compared with the hash caching technique. The cluster-based approach needs less transfer time in both cases due to the proper management of content caching and welldesigned Interest forwarding techniques.
Figure 6: Hash caching and cluster-based caching

REFERENCES
[1] G. Xylomenos et al., "A Survey of Information-Centric Networking Research," in IEEE Communications Surveys & Tutorials, vol. 16, no. 2, pp. 1024-1049, Second Quarter 2014. doi: 10.1109/SURV.2013.070813.00063.
[2] Kamrul Hasan, “Cluster-based Content-Centric Networking in Core and Access Networks”, MS Thesis, December 2016.
[3] Saino L, Psaras I, Pavlou G. Hash-routing schemes for information centric networking[C]//Proceedings of the 3rd ACM SIGCOMM workshop on Information-centric networking. ACM, 2013: 27-32.
[4] N. Laoutaris, H. Che, and I. Stavrakakis. The lcd interconnection of lru caches and its analysis. Perform. Eval., 63(7), July 2006
[5] P. Krishnan, D. Raz, and Y. Shavitt. The cache location problem. IEEE/ACM Trans. Netw., 8(5), 2000.
[6] J. Wang. A survey of web caching schemes for the internet. SIGCOMM Comput. Commun. Rev., 29(5), Oct. 1999.
[7] Chai W K, He D, Psaras I, et al. Cache “less for more” in information-centric networks [M]//NETWORKING 2012. Springer Berlin Heidelberg, 2012: 27-40.
[8] I. Psaras, W. K. Chai, and G. Pavlou. Probabilistic in-network caching for information-centric networks. In Proceedings ICN Sigcomm workshop, pages 55–60, New York, NY, USA, 2012. ACM.
[9] L. Zhang, D. Estrin, J. Burke, V. Jacobson, J. Thornton, D. Smetters, B. Zhang, G. Tsudik, D. Massey, C. Papadopoulos, et al. Named data networking (ndn) project. NDN-0001, Xerox Palo Alto Research Center-PARC, 2010.
[10] J. Li and et al. Popularity-driven coordinated caching in named data networking. In Proceedings of ANCS, New York, NY, USA, 2012. ACM.
[11] G. Tyson and et al. A trace-driven analysis of caching in contentcentric networks. In Proc of ICCCN, 2012.
[12] R. Tewari, M. Dahlin, H. M. Vin, and J. S. Kay. Design considerations for distributed caching on the internet. In Proceedings of ICDCS, Washington, DC, USA, 1999.
[13] K. Katsaros, G. Xylomenos, and G. C. Polyzos. Multicache: An overlay architecture for information-centric networking. Comput. Netw., 55(4):936–947, Mar. 2011.
[14] Rosensweig E J, Kurose J. Breadcrumbs: Efficient, best-effort content location in cache networks[C]//INFOCOM 2009, IEEE. IEEE, 2009: 2631-2635.
[15] Lee M, Cho K, Park K, et al. Scan: Scalable content routing for content-aware networking[C]//Communications (ICC), 2011 IEEE International Conference on. IEEE, 2011: 1-5.

747

