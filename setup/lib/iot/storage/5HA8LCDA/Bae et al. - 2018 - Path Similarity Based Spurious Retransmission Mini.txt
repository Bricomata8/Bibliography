Path Similarity based Spurious Retransmission Minimization over Flooding based Routing in UWSN
Yeongjoon Bae, Sungwon Lee, Yonghwan Jeong, and Dongkyun Kim
School of Computer Science and Engineering Kyungpook National University Daegu, Korea
{ yjbae, swlee, yhjeong }@monet.knu.ac.kr, dongkyun@knu.ac.kr

Abstract‚Äî In Underwater Wireless Sensor Networks, we faced a lot of challenges such as long propagation delay, and high packet loss. However, a flooding based routing protocol can address these challenges with its multipath characteristics. If the network uses a flooding based routing protocol, not only DATA but also ACK messages are transmitted through multiple paths. Although the messages are transmitted through multiple paths, we cannot avoid the packet loss completely. So, in order to provide high reliability of delivering messages, we need a retransmission mechanism. Though, if the network uses conventional transport layer protocol such as TCP, it will cause a spurious retransmission problem because it was not designed for the multipath environment. To overcome this problem, we suggest Path Similarity based Spurious Retransmission Minimization over Flooding based Routing in UWSN. Through our simulations, we verified that our scheme achieves the performance improvements of 10% ~ 45% in terms of retransmission ratio and 20% ~ 36% in terms of throughput compared to the Jacobson‚Äôs RTO algorithm.
Keywords‚Äî Spurious Retransmission Problem; Retransmission Timeout; Path Similarity; Flooding based Routing Protocol; Underwater Wireless Sensor Networks;
I. INTRODUCTION
Since the propagation speed of the sound wave in the water is slower than the radio wave in the ground, the UWSN communication has a slower transmission rate than the terrestrial communication. Therefore, in order to reduce the time consumed in routing, underwater communication mainly uses a flooding-based routing protocol that does not require route searching procedure. In addition, underwater acoustic communication is characterized by a high error rate because it is easily interfered by multiple factors, i.e., surrounding creatures, ship engine sounds, etc. However, flooding-based routing protocols provide packet transmission reliability [1].
UWSNs have enabled researchers from both academia and industry to design various applications such as water temperature, water quality change surveillance, and coastal threat monitoring. In some applications, it may be necessary to transfer files between the sensor node and the sink node to update the sensor operation algorithm. File transfer requires high reliability as an error can result in the failure of the entire file transfer. However, due to the characteristics of UWSN with a high error rate, it is impossible to prevent the loss of the transmitted packet completely, even if the reliability of the packet transmission is increased through the multipath transmission. Therefore, it is imperative for the successful operation of the application that a function is designed that provides packet loss detection and retransmission.

Figure 1. Spurious Retransmission Problem In order to detect the packet loss, the destination node that receives the DATA transmits an ACK message, and the source node can use the retransmission technique if the ACK does not arrive before the RTO expires. However, in a network with a flooding-based routing protocol, not only DATA but also ACK messages are transmitted through multiple paths. Therefore, in order to use the retransmission technique in a network with a flooding-based routing protocol, it is necessary to consider that ACK can be received through multiple paths. However, according to the conventional operation of the transport layer retransmission protocol [2], the source node calculates the RTO by measuring the RTT as soon as one ACK is received. This can lead to the spurious retransmission problems. Figure 1 illustrates this scenario, where the ACK ( Ì†µÌ∞¥Ì†µÌ∞¥1, Ì†µÌ∞¥Ì†µÌ∞¥2 ) transmitted from the destination node (hereinafter referred to as Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑) traverse three paths to reach the source node (hereinafter referred to as Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü). Currently, Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü measures Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö1 through Ì†µÌ∞∑Ì†µÌ∞∑1 and Ì†µÌ∞¥Ì†µÌ∞¥1 and calculates Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö1. Then, in the transmission of Ì†µÌ∞∑Ì†µÌ∞∑2, Ì†µÌ∞∑Ì†µÌ∞∑2 successfully arrives at Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑, but one of Ì†µÌ∞¥Ì†µÌ∞¥2 transmitted from Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑ is lost. And since Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö1 has expired, the source node retransmits Ì†µÌ∞∑Ì†µÌ∞∑2. Hspouwrieovuesrr,eitfraÌ†µÌ±ÖÌ†µnÌ±ÖÌ†µÌ±ÖsÌ†µÌ±ÖÌ†µmÌ±ÖÌ†µÌ±Ö1iswsiaosnopnrloybalesmloonfguansne1c,eistswaroiluyldrehtraavnesmpriettvinengtÌ†µeÌ∞∑Ì†µdÌ∞∑2.the
To solve this problem, the RTO must be long enough to receive additional ACKs. However, if the RTO is set long, the retransmission may be delayed and the throughput of the network may be deteriorated. Therefore, the RTO must be calculated to be able to receive the ACK transmitted over multiple paths. However, since additional ACK may also be lost, it is necessary to select an ACK that is less likely to be lost among the ACKs transmitted through the multipath and reflect that ACK in the RTO calculation. In this paper, we propose a scheme that uses path similarity to distinguish ACK with a low probability of loss. Path similarity is defined as the ratio of the same nodes through which the two paths share, it is further explained in Chapter III.
The rest of the paper is as follows. Chapter II describes previous techniques related to the issues covered in this paper. In Chapter III the proposed techniques are explained. In Chapter IV, we verify and explain the proposed scheme through simulation. Finally, Chapter V concludes this paper.

978-1-5386-4646-5/18/$31.00 ¬©2018 IEEE

234

ICUFN 2018

II. RELATED WORK
Previously, there have been several attempts to solve the spurious retransmission problem. In TCP Performance Improvement Considering ACK Loss in Ad Hoc Networks[3], authors proposed TCPpgy to resolve the spurious retransmission problem caused by ACK loss over reactive routing protocol. And TCP and MPTCP Retransmission Timeout Control for Networks Supporting WLANs[4], authors proposed WLAN RTO(WRTO) algorithm to achieve the less spurious retransmission compared to existing schemes. But these schemes are designed for the terrestrial environment. However, there is a scheme to solve the spurious retransmission problem in the UWSNs that uses the flooding-based routing protocol. ACK Loss-aware RTO Calculation Algorithm over Flooding-based Routing[5] defines ACK Copies Waiting Time (Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥) for waiting for the arrival of additional ACK, and reduces spurious retransmission by waiting for Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥ after RTO
expires respectively

Ì†µÌ±òÌ†µÌ±òÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê

=

(Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö‚àíÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê) Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥

(1)

Ì†µÌ±òÌ†µÌ±ò = Œ≥ √ó Ì†µÌ±òÌ†µÌ±òÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê + (1 ‚àí Ì†µÌªæÌ†µÌªæ) √ó Ì†µÌ±òÌ†µÌ±òÌ†µÌ±ùÌ†µÌ±ùÌ†µÌ±ùÌ†µÌ±ù

(2)

Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥ = (Ì†µÌ±òÌ†µÌ±ò + 1) √ó Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥

(3)

First, Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü calculates the initial RTO using the Jacobson [6] method

when it receives the first arriving ACK. Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü then sends the data to be

sent in the next sequence and sets the timeout to RTO calculated

previously. If an ACK copy of the previous DATA is received by Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü

before the set RTO expires, the time difference between the

corresponding ACK copy and the immediately preceding ACK is

measured. Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü calculates the average time difference Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥ between the arriving ACK copies and the immediately preceding ACK by the

EWMA method while performing the packet transmission with this

operation. If it is determined that a reliable Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥ has been calculated, Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü uses Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥ to compute the expected number Ì†µÌ±òÌ†µÌ±ò of lost ACKs before receiving a successful ACK as in equation (1). Then, by multiplying

Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥ by a value obtained by adding 1 to the number of expected loss ACKs as in equation (3), the expected time Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥ for successfully

receiving one ACK can be calculated. Then Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü increases the timeout

by the Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥ calculated after the RTO expires.

For this RTO calculation method, it is necessary to determine the path similarity of each packet. The path similarity refers to the ratio of the total node through which a path has been traversed and the same node which both paths share. In order to calculate the path similarity, there is the general technique of storing IDs of all the nodes that have passed through the packet in the header of the packet. However, using this technique causes a problem that the size of the header increases. Therefore, in this paper, we propose a method to determine path similarity using bitmap operation to solve this problem.
B. Assumption and Definition
In this paper, we assume the following situation. (1) The network administrator sets up a specific area in which the node is to be installed. (2) All nodes of the network are randomly installed within a specific area. (3) Divide a specific area into Ì†µÌ±ÅÌ†µÌ±Å √ó Ì†µÌ±ÄÌ†µÌ±Ä lattices and assign a unique ID of integer type for each section. (4) Every node knows the information (section location, section ID, Ì†µÌ±ÅÌ†µÌ±Å, Ì†µÌ±ÄÌ†µÌ±Ä, etc.). (5) There may be no node in one section, and one or more nodes may exist. (6) All nodes know the location of the sink (Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑). (7) Ì†µÌ±ÅÌ†µÌ±Å √ó Ì†µÌ±ÄÌ†µÌ±Ä ‚àí bit Traveled Section () field is added to all routing headers to determine path similarity. (8) When the packet is first generated, the  field is all zero.
C. Path Similarity Calculation

III. PROPOSED SCHEME
A. Motivation The ACK Loss-aware RTO Calculation Algorithm over Flooding-
based Routing technique described above equally reflects all ACKs received in calculating Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥. However, if the path through the ACK is not taken into consideration, Ì†µÌ±òÌ†µÌ±òÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê may not be calculated as intended.

Figure 3. Network Topology and ACK Paths In this technique,  field of the packet header and the unique ID assigned to each section are used to measure the path of the packet. The Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü that generated the packet broadcasts the packet while the  field is 0. A node outside the flooding zone drops the packet when receive
the packet. However, the node in the flooding zone changes the bits of the  whose indexes are the same as those of the section ID to which the node belongs, to 1 before sending the packet. (if it is already 1, it
does not modify it). If this operation is continued until the packet reached to Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑, Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑ can know the path which the packet has been transmitted through the  field in the header. For example, the  field for Figure 3 (a) will be filled with 1 bits at 30, 21, 28, 19, and 10th bits in sequence, and will arrive at Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑ as shown in Figure 4.

Figure 2. Impact of Path Similarity Assuming the situation shown in Figure 2, the first, second, and third arriving ACKs for Ì†µÌ∞¥Ì†µÌ∞¥1 are defined as Ì†µÌ∞¥Ì†µÌ∞¥1‚àí1, Ì†µÌ∞¥Ì†µÌ∞¥1‚àí2, Ì†µÌ∞¥Ì†µÌ∞¥1‚àí3 , respectively. In addition, Ì†µÌ∞¥Ì†µÌ∞¥1‚àí1 and Ì†µÌ∞¥Ì†µÌ∞¥1‚àí2, as shown in the figure, share many nodes. And Ì†µÌ∞¥Ì†µÌ∞¥1‚àí3 is assumed to be transmitted in a different path from these paths. In this case, if Ì†µÌ∞¥Ì†µÌ∞¥2‚àí1 is lost, there is a loss at a certain node on the path through Ì†µÌ∞¥Ì†µÌ∞¥2‚àí1. Therefore, through similar path like Ì†µÌ∞¥Ì†µÌ∞¥2‚àí2 will also be lost. If all ACKs are equally reflected in the RTO calculation in this situation, spurious retransmission can occur as seen in the situation like Ì†µÌ∞¥Ì†µÌ∞¥2 in Figure 2. Therefore, this case also needs to be considered in the RTO calculation.

Figure 4. Traveled Section Field of Path (Ì†µÌ≤ÇÌ†µÌ≤Ç) Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü that transmitted Ì†µÌ∞∑Ì†µÌ∞∑1 stores the  field contained in the corresponding packet immediately after receiving the Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥1 message from Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑ . Then calculate the initial RTO Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ì and use it to transmission of Ì†µÌ∞∑Ì†µÌ∞∑2 . The initial RTO calculation equation is as follows[6].

235

Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö = Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±í + Ì†µÌªºÌ†µÌªº √ó Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö

(4)

Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±íÌ†µÌ±í = Ì†µÌªΩÌ†µÌªΩ √ó Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ùÌ†µÌ±ùÌ†µÌ±ùÌ†µÌ±ùÌ†µÌ±ùÌ†µÌ±ù + (1 ‚àí Ì†µÌªΩÌ†µÌªΩ) √ó Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê (5)

Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö = ‚àë|Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö ‚àí Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±éÌ†µÌ±é|/Ì†µÌ±ÅÌ†µÌ±Å

(6)

In equation (4, 5), Ì†µÌªºÌ†µÌªº and Ì†µÌªΩÌ†µÌªΩ are system parameters. Both values are set to 3.4 and 0.2 for the underwater environment [5]. And N is the
number of received ACK messages.

In Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü, if Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥1 is received again before Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ìÌ†µÌ±ì expires, Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü also determines whether to reflect the ACK in the RTO update based on the
path similarity with the first arriving ACK and selectively updates the RTO. The equation for determining the similarity (Path Similarity, Ì†µÌ±ÉÌ†µÌ±É) between two paths is shown in the following equation (7).

Ì†µÌ±ÉÌ†µÌ±É(Ì†µÌ±ìÌ†µÌ±ì,

Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê )

=

Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü(Ì†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ì,Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê) Ì†µÌ±ÄÌ†µÌ±ÄÌ†µÌ±ÄÌ†µÌ±Ä(Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ìÌ†µÌ±ì,Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê)

(7)

The Ì†µÌ±ÜÌ†µÌ±Ü (Section Count) means the number of intermediate sections through which the packet has been passed. This is calculated by the number of bits marked 1 in the  field.

Also, the Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü (Same Traveled Section Number) is the number of intermediate sections in which two packets are identically passed
through. This is calculated by the result of the AND operation of the two  fields.

For example, let us calculate the path similarity of (Ì†µÌ±éÌ†µÌ±é) and (Ì†µÌ±èÌ†µÌ±è) shown in Figure 3 using the above equations.

Figure 5. Result of AND operation between ()FSI(Ì†µÌ≤ÉÌ†µÌ≤É)

Ì†µÌ±ÉÌ†µÌ±É((),

(Ì†µÌ±èÌ†µÌ±è))

=

Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü((Ì†µÌ±éÌ†µÌ±é),(Ì†µÌ±èÌ†µÌ±è)) Ì†µÌ±ÄÌ†µÌ±ÄÌ†µÌ±ÄÌ†µÌ±Ä(Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü(Ì†µÌ±éÌ†µÌ±é),Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü(Ì†µÌ±èÌ†µÌ±è))

=

Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥((Ì†µÌ±éÌ†µÌ±é),(Ì†µÌ±èÌ†µÌ±è)) Ì†µÌ±ÄÌ†µÌ±ÄÌ†µÌ±ÄÌ†µÌ±Ä(5,4)

=

2 4

(10)

(Ì†µÌ±éÌ†µÌ±é) and (Ì†µÌ±èÌ†µÌ±è) pass the same two intermediate sections 21 and 30, so Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü((), (Ì†µÌ±èÌ†µÌ±è)) becomes 2, and Ì†µÌ±ÄÌ†µÌ±ÄÌ†µÌ±ÄÌ†µÌ±Ä(Ì†µÌ±ÜÌ†µÌ±Ü(), Ì†µÌ±ÜÌ†µÌ±Ü(Ì†µÌ±èÌ†µÌ±è)) becomes 4 and finally Ì†µÌ±ÉÌ†µÌ±É((), (Ì†µÌ±èÌ†µÌ±è)) is 0.5. In the same way, finding the path similarity of (Ì†µÌ±èÌ†µÌ±è) and () and the path similarity of () and (Ì†µÌ±éÌ†µÌ±é) yields a result of 0.25 and 0 in turn. As a result, it can be seen that the PS value becomes larger as the number of the same sections increases.

D. Path Similarity-based RTO Calculation
In Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü, after transmitting the DATA, the initial RTO is calculated using the first received ACK and the next DATA transmitted. If an additional ACK for the previous DATA is received before the RTO expires, it is determined whether the corresponding ACK is to be reflected in the RTO calculation using the path similarity determined by the C technique. The proposed RTO calculation algorithm for Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü is as follows.
Algorithm 1: The Algorithm of Path Similarity-based RTO Calculation
Current ACK: Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê , Current ACK‚Äôs TS: Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê , History of Received ACK‚Äôs TS: ‚ÑéÌ†µÌ±†Ì†µÌ±†Ì†µÌ±†Ì†µÌ±† , RTO calculated by First ACK: Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ìÌ†µÌ±ì, Maximum # of ACK to choose: Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö, Path Similarity Threshold: Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé
1: send DATA
2: Ì†µÌ±ñÌ†µÌ±ñ ‚Üê 0

3: if ACK arrives (Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê ‚Üê ACK) 4: if Ì†µÌ±ñÌ†µÌ±ñ = 0

5:

‚Ñé[Ì†µÌ±ñÌ†µÌ±ñ] ‚Üê Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê

6: Ì†µÌ±ñÌ†µÌ±ñ ‚Üê Ì†µÌ±ñÌ†µÌ±ñ + 1

7: update RTT & RTO with Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê

8: else if Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ìÌ†µÌ±ì <  and Ì†µÌ±ñÌ†µÌ±ñ < Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö

9: Ì†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ë ‚Üê Ì†µÌ≤ïÌ†µÌ≤ïÌ†µÌ≤ïÌ†µÌ≤ïÌ†µÌ≤ïÌ†µÌ≤ïÌ†µÌ≤ïÌ†µÌ≤ï

10: for(Ì†µÌ±óÌ†µÌ±ó = 0; Ì†µÌ±óÌ†µÌ±ó < Ì†µÌ±ñÌ†µÌ±ñ; Ì†µÌ±óÌ†µÌ±ó + +)

11:

if Ì†µÌ±ÉÌ†µÌ±É(‚Ñé[Ì†µÌ±óÌ†µÌ±ó], Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê) > Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé

12:

Ì†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ë ‚Üê Ì†µÌ≤áÌ†µÌ≤áÌ†µÌ≤áÌ†µÌ≤áÌ†µÌ≤áÌ†µÌ≤áÌ†µÌ≤áÌ†µÌ≤á

13: if (Ì†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ëÌ†µÌ±ë)

14:

Ì†µÌ±ñÌ†µÌ±ñ ‚Üê Ì†µÌ±ñÌ†µÌ±ñ + 1

15:

update RTT & RTO with Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê

16: else

17:

drop Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê

Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü transmits the DATA and initializes Ì†µÌ±ñÌ†µÌ±ñ (the number of ACKs reflected in RTO calculation) to 0 and waits for ACK reception. If an
ACK arrives at this time, the ACK is the first received ACK, so it is
selected as the ACK to be used for the RTO calculation independent to Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö (the maximum number of ACKs to reflect in the RTO calculation). Therefore, Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü add Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê (TS field of the currently received ACK) as an element of the ‚Ñé array (TS field of the all ACKs reflected in the RTO calculation). And the RTO is calculated using Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê (ACK currently received). Then, if another ACK arrives and Ì†µÌ±ñÌ†µÌ±ñ is less than Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö before Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ìÌ†µÌ±ì (RTO calculated by the first received ACK) expires, Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü calculates Ì†µÌ±ÉÌ†µÌ±É (Path similarity) of ‚Ñé and Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê . If the calculated Ì†µÌ±ÉÌ†µÌ±É is less than or equal to Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé (Path similarity threshold), add Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê as an element of the ‚Ñé and update the RTO using Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±êÌ†µÌ±êÌ†µÌ±êÌ†µÌ±ê . Also, if Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ìÌ†µÌ±ì has expired or Ì†µÌ±ñÌ†µÌ±ñ has reached Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö, then all ACKs received afterwards are discarded.

Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö used in the above operation is the maximum number of ACK to be reflected in the RTO calculation. The smaller Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö the faster the retransmission occurs and the faster the packet loss can be recovered, and the larger Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö, the more spurious retransmission can be reduced considering more ACKs to arrive through multipath. In addition, Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé is the threshold for the path similarity. As Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé is low, only the ACK arriving at the path with low similarity is reflected in the RTO calculation. When the Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé is high, the ACK arriving at the path with high similarity is also reflected. In this way, the network characteristics can be changed according to the value of the Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö and Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé , and the network characteristics need to be changed according to the needs of the application. Therefore, it is assumed that Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö and Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé are network parameters and are set according to the requirements of the application.

IV. EVALUATION
To observe the performance of the proposed method, experiments were conducted in Network Simulator (NS-2.34). The simulation environment is as follows. We generate a FTP traffic between source and destination node for simulating the retransmission ratio and throughput. Furthermore, the simulation results were obtained by averaging the results after running the simulations for 20 times. Table I contains the list of remaining simulation parameters.
We used the following quality metrics to evaluate the performance of the proposed scheme,

236

ÔÅ¨

Retransmission

ratio

is

the

#

# Ì†µÌ±úÌ†µÌ±úÌ†µÌ±úÌ†µÌ±ú Ì†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±ÖÌ†µÌ±Ö Ì†µÌ±úÌ†µÌ±úÌ†µÌ±úÌ†µÌ±ú Ì†µÌ±ÉÌ†µÌ±ÉÌ†µÌ±ÉÌ†µÌ±ÉÌ†µÌ±ÉÌ†µÌ±É  Ì†µÌ±èÌ†µÌ±èÌ†µÌ±èÌ†µÌ±è Ì†µÌ±ÜÌ†µÌ±Ü

ÔÅ¨ Throughput is the amount of the data per unit time successfully transmitted from Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü to Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑

TABLE I. Parameter Number of Nodes Network Size Topology Setting Transmission Range Bandwidth Payload Size Error Rate Routing Protocol Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé

SIMULATION ENVIRONMENT
Value 250 2000 * 1000 [m] Random Distribution 100 [m] 10 [kHz] 128 [KB] 10 [%] DBR[1]
2 0.25

Figure 7. The result of Throughput In addition, the increased network congestion results in failure to deliver the data. In such a situation, the performance gap between two schemes is reduced due to the longer RTO would cause the delay of retransmission that really needed.
V. CONCLUSION
In this paper, we aim to minimize the spurious retransmission problem over the flooding based routing protocol in UWSNs. We proposed a scheme which updates the RTO selectively by considering a path similarity of ACK among multiple ACK transmitted through different paths. To minimize a spurious retransmission, the RTO must be calculated such that the ACK transmitted over multiple paths can be received. Since additional ACK can be lost, it is necessary to select an ACK that is less likely to be lost among the ACKs transmitted through the multipath and reflect that ACK in the RTO calculation. To distinguish an ACK that is less likely to be lost, we considered a path similarity. Through our simulations, we verified that our proposed scheme achieves the performance improvements of 10% ~ 45% in terms of retransmission ratio and 20% ~ 36% in terms of throughput compared to the Jacobson‚Äôs RTO algorithm. In the future, we will further investigate the effect of Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ∞¥Ì†µÌ±öÌ†µÌ±ö and Ì†µÌ±ÉÌ†µÌ±É‚Ñé‚Ñé on the network performance.

Figure 6. The result of Retransmission Ratio First, we compared the retransmission ratio of the proposed scheme and conventional Jacobson‚Äôs RTO algorithm [6] with different number of flows. As shown in Figure 6, proposed scheme produces less retransmission than the Jacobson‚Äôs RTO algorithm regardless of the number of traffic. In the Jacobson‚Äôs RTO algorithm, Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü retransmits the data when its RTO is expired, even though the Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑Ì†µÌ∞∑ successfully received the data and an ACK copy is going to arrive at the Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü. On the other hand, in the proposed scheme, the Ì†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±ÜÌ†µÌ±Ü minimizes a spurious retransmission by updating RTO selectively.
However, as the number of traffics increases, the network is faced with congestion that causes packet losses. Due to the increment of packet loss, both schemes must retransmit the data which are lost. These retransmissions are not spurious retransmission, so both schemes performance gap is reduced.
Next, in Figure 7, we compared the average throughput of the proposed scheme and Jacobson‚Äôs RTO algorithm with a different number of flows. Jacobson‚Äôs RTO algorithm has lower throughput regardless of the number of traffic since it could not minimize the spurious retransmissions.

ACKNOWLEDGMENT
This research was supported by Basic Science Research Program through the National Research Foundation of Korea (NRF) funded by the Ministry of Education (2016R1D1A3B01015510).
REFERENCES
[1] H. Yan, Z. Shi, and J. H. Cui, "DBR: Depth-based routing for underwater sensor networks," IFIP Networking, pp. 72-86, 2008.
[2] V. Paxson, M. Allman, J. Chu, and M. Sargent, Computing TCP‚Äôs Retransmission Timer, RFC6298, 2011.
[3] D. Kim and H. Yoo, "TCP performance improvement considering ACK loss in ad hoc networks," in Journal of Communications and Networks, vol. 10, no. 1, pp. 98-107, March 2008.
[4] S. Shin, D. Han, H. Cho, J. M. Chung, I. Hwang and D. Ok, "TCP and MPTCP Retransmission Timeout Control for Networks Supporting WLANs," in IEEE Communications Letters, vol. 20, no. 5, pp. 994-997, May 2016.
[5] S. Lee, and D. Kim, ‚ÄúACK Loss-Aware RTO Calculation Algorithm over Flooding-Based Routing Protocols for UWSNs,‚Äù IEICE TRANSACTIONS on Information and Systems, 2014, pp. 2967-2970.
[6] V. Jacobson, ‚ÄúCongestion avoidance and control,‚Äù ACM SIGCOMM, Computer Communication Review, pp.314-329, 1988.

237

