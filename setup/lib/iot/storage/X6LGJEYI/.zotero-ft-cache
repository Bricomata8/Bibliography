Cloud-based microservices to decision support

Andrey S. Kondratyev Ural Federal University n. a. the first
President of Russia B.N. Yeltsin Yekaterinburg, Russia 620002
race.timo@gmail.com
Olga P. Aksyonova Ural Federal University n. a. the first
President of Russia B.N. Yeltsin Yekaterinburg, Russia 620002
bpsim.dss@gmail.com

Konstantin A. Aksyonov Ural Federal University n. a. the first
President of Russia B.N. Yeltsin Yekaterinburg, Russia 620002
bpsim.dss@gmail.com

Natalia A. Buravova Ural Federal University n. a. the first
President of Russia B.N. Yeltsin Yekaterinburg, Russia 620002
booooj444@gmail.com

Abstract— intelligent systems of imitation modeling become an inherent step in planning a work of companies and industries. But in most cases they are just desktop software. At the age of progressive technologies it is necessary to use durability, flexibility, availability and crossplatforming solution. In this paper the idea of working cloud based decision support system BPsim.Web is revealed and this one consists of some set of services and tools. The authors consider one of these services as well as imitation modeling also they review general terms associated with it. In the end an example with an illustrated set of experiments is given.
Keywords— simulation modeling, intellectual systems, artificial intelligence
I. INTRODUCTION
Currently, the topic of data analysis and machine learning is very popular [1-4]. Intellectual systems around the world solve many different complex problems. World companies use such systems to offer new unique services to search for new sectors of the market to make justified decisions. On these reasons we can see a serious increase in profits.
II. AUTOMATION AND SIMULATION FOR INTELLIGENT SYSTEMS
A. The problem of intelligent systems
First of all it is necessary to use quality data for creating intelligent systems. This problem is the most important and complex in data analysis. Sometimes there are too much data about a business process, in this case the problem will be the search for important data sets and their preparation. But sometimes it's the other way around there are very little or no data, in this case obtaining data or generating it will require a lot of financial and intellectual resources.
E.g. production process of a heavy metallurgy enterprise [56]. The company produces a huge number of different products. All kinds of these have own duration process of production. These processes require a lot of different resources and tools, and the optimization of such processes require a lot of financial investments. To solve this problem, it is necessary to conduct many complex economic studies and experiments. Each experiment can both positively and negatively affect current production processes.

B. Proposed solution
At first, should pay attention, that ways solved such problems exist. The first one is using simulation [7-8], which allows to describe a business process in the form of some logical constructions. This will help recreate our process in the form of a model and cause a further analysis and experiments with less investment resources and time. Simulating process changes does not destroy the real process [9-12].
III. BPSIM.WEB AND THE SERVICE OF SIMULATION
It should be noted that BPsim.Web is a student’s project with the main aim in creation a new platform for any services giving tools for simulation of processes. Each service must be executed according to the API First pattern - the services are integrated among themselves via a platform-independent API. Any external information system can integrate with any of these services directly.
The development of BPsim.Web is at a very early stage. We can’t directly say how it will be distributed, as a proprietary software or as an open source project. It is important to note that the development of one of the BPsim.Web services (the service of simulation) is being completed.
A. The concept of simulation service
At the heart of the service is the concept of a multi-agent simulation of resource conversion processes (MRCP). It represents the basis of a developing service. We will open a concept of it in a few words. Simulation models consist of nodes: "agents" and "operations" [9-10]. A model has some resources of different types, for example, an amount of raw materials in a warehouse.
An agent is an intelligent node that owns its own knowledge. The last is a set of rules that determines how the agent’s behavior changes in different situations. Knowledges allow the agent to respond to changes in the environment. The agent can redirect resource flows, generate or absorb resources.
An operation is a process that has duration. When it starts, it absorbs some resources, and when it is completed, it generates new ones. The start and end rules are specified in a special format.

978-1-53X8X6-X4-6X4-X6-X5X/1X8-/X$X3X1.X0-0X©/X2X0/$1X8XIE.0E0 E©20XX IEEE

389

ICUFN 2018

Generally, the resource conversion process decreases the amount of the input and increases the amount of the output. When the start condition initializes, input resources are getting consumed, and the tools are engaged. When the conversion completes, the amount of the output resource increases, and the tools are getting released.
The consumed resources (inputs) are the resources, which are used in the process only once. Depending on their role in the resource conversion process, the consumed resources can be divided into the direct, which immediately constitute the part of the final product and represent a part of it, and indirect, which only take part in the resource conversion process, but are not the component of the final product.
Tools are not consumed, but they are used during the conversion process. Their amount does not decrease during the process of their use. Depending on their use potential, may be used multiple times in the majority of cases. Tools may be separated into deteriorating and non-deteriorating, depending on whether their use potential decreases over time.
Outputs are generated as a result of the conversion processes. Outputs may be separated into the products and waste.
Models are simulated in cycles. Tact is a logical unit of time. Each cycle starts or ends operations and polls all agents. After that, the clock changes to the next and everything repeats.
The concept of MRCP may be used for modeling of production, economic, logistics and management processes.
Consider Figure 1, which shows the scheme of the service responsible only for simulation. This makes its structure very simple and isolated. Other tasks, for example, authorization and user authentication, are engaged in other services.
Fig. 1. A scheme of the simulation service.
The service stores information about simulation models. When it receives a special command, it starts the simulation process. During the simulation, the service generates reports.

Information about the actual simulation process and all reports are stored in the database.
The service stores three entities: the first one is model, the second one is a process of imitation and the last one is report. Each of the entities can be accessed through the service API. This is a set of simple HTTP interfaces that are tied to entities.
For example, you need to call: POST /api/v1/model
method to create a model. The request body must contain a model object in the JSON format. The object must match a specific schema. The service will check the object for compliance with the schema and store the data in the database. So the model receives a unique id that will return in response to a query made earlier.
A simulation of a model is started by the method:
POST /api/v1/model/{id}/task where “id” is the unique identifier of the model. As a result of this request the service will create the task. This task will be started when the simulator can take it to work. This means that the simulation in the service is asynchronous:
Fig. 2. A imitation process.
The simulation scheme is presented at figure 2. The first stage is a task queue. The simulator can simulate several tasks in parallel. The degree of the parallelism is not strictly defined. It can be configured for each instance of the service separately. It depends on the capacity of a hosting site. When the simulator is released, it can take a new task out of the queue. For each tact of simulation, a report of this tact and general information on the simulation process are recorded in the database. So the kernel of simulation of service is constructed.
The service use MongoDb to store data. This is a document-oriented DBMS. It does not require a description of the schema of the stored data. This is well suited to the entities of this service. The resulting object is stored in the database in almost the same form. This data storage structure allows you not to describe a complex scheme of decomposition of entities into several tables. The relational data schema for the service is not needed, because it does not implement complex aggregations. In addition, the MongoDb data storage format is convenient for object-oriented programming languages.

390

IV. EXPERIMENTS #1
Once again note, that the simulation service BPsim.Web is being developed, however, the degree of availability allows to simulate models on your local computer. The authors selected a simulation task, which simplified the conditions and structure.
A. Subject area
During the experiment, two shops with the names LPC-10 and LPC-5 were considered. LPC-10 is hot rolling shop. There is hot slabs are moved and burned. A slab is a semi-finished product, that looks like a long steel sheet of a certain thickness. LPC-5 is a cold rolling shop. There is cold slabs are moved and burned.

Fig. 4. A part of model description.

Fig. 3. Scheme of moving products between LPC-10 and LPC-5.
Figure 3 shows the flow of production between the shops. At the beginning of the process there is a stock of slabs. Every 60 minutes a certain number of new slabs enter to the stock. At the end of the processing of slabs in LPC-10, they are rolled up and taken to the roll stock. From the stock of rolls, a part of those is sent to other shops. The rest is transferred to LPC-5. In both workshops there are parallel operations.
The task of modeling is to find a minimum number of slabs in the modeling stock at the beginning of simulation so that any furnace of the LPC-10 shop isn’t idle. If this is not possible you should determine it. Simulating time is 3 working days for 24 hours.
B. The Model
The JSON object of the model is very large. Figure 4 shows part of this object. Here you can see the first nodes of the model, those are two operations "Slab store", "Batch generator" and the beginning of the description of the agent "In bake".

C. Experiments
To calculate the downtime of the furnaces, it is necessary to establish an information resource. The value of this resource will increase by one for each furnace in each clock cycle. Its final value is the output value of the task (B). Must to get a resource that is a number of slabs in the stock. It will be replenished every 60 minutes from its initial value that is the input value (A). It is necessary to find a minimum (A), so that B = 0. The initial value A = 300 slabs. This is the value of the original subject area.
Table 1 shows the results of all experiments. In the first experiment, B was 237 cycles. As a result of the first experiment, another 2 was planned. In both experiments, A increased by 50 (2 experiments A = 350, 3 experiments A = 400). These experiments evaluated a sensitivity of B to A.

TABLE I.

RESULTS OF EXPERIMENTS

#

The minimum number of slabs

1

300

Waiting time 237

2

350

136

3

400

68

4

420

64

5

440

47

6

480

21

7

500

13

8

520

0

9

540

0

The second and third experiments showed a strong change in B toward the target value. It was decided to reduce the step to 20 slabs. Thus, six more experiments were planned: 4 - A = 420, 5 - A = 440, 6 - A = 480, 7 - A = 500, 8 - A = 520 and 9 A = 540.

391

The results of experiments 4 - 9 showed that B = 0 in the model can be achieved. Experiments 8 and 9 reach the value B. But the best experiment of all presented is experiment 8 because here B = 0 and A is minimal.
By changing the value of A around the value of 520, a more accurate input value of the slabs can be found. But for our problem it was decided to stop at the accuracy obtained.
V. EXPERIMENTS #2
The second experiment is target to find “bottlenecks” in the production process of another enterprise.
If the technology contains operations that use the same type of equipment, with a large number of such operations, the lack of this type of equipment can lead to serious downtime. However, it is important to understand that not all are equally important piece of equipment for production. You must correctly identify the most critical equipment, not to carry out the extra cost.
Another type of "bottlenecks" associated with the work of staff in the division of the enterprise. At excessively high state appears too much free staff, which entails unnecessary expenditure. But a much more critical situation arises when there is a shortage of people in the business units. Lack of free staff to perform manufacturing operations entails discontinuity of production that affects both the performance units, and the overall performance of the enterprise.
A. Simulation task
Initially, you need to simulate the operation of the enterprise with the initial configuration and distribution strategy. Next, you need to evaluate the results and perform the following subtasks:
 Determine the "bottleneck" in the production process and product details, to propose measures for their elimination.
 Consider other ways of distribution of orders across the enterprise, to carry out experiments for each of them. According to simulate the result choose the most successful strategy.
It is necessary to carry out the simulation 408 hours (24,480 minutes) of the enterprise and determine the percentage of completion of orders.
B. Simple strategy
Initial orders distribution strategy is presented in the domain configuration is determined as follows: the incoming order assigned to one of the foundries shop (by subject area, the enterprise has two foundry shops). All items produced by a shop, directed to the assembly of products for this order. At the same time another shop can’t participate in carrying out the order assigned to the other shop.
Model simple distribution contains several high-level entities that encapsulates the logic simulation of business processes. These high-level entities represent the different

departments of the enterprise. It contains two foundries, machining shop and two assembly shops
The interaction between model’s nodes is carried out using a special mechanism MRCP called "order". It allows you to maintain communication between agents, control their behavior, and to share different information. Within the framework of a simple distribution model, each entity-order represented MRCP-order that can be captured by the agents and nodes of only one foundry. This logic support by behavioral model’s agents.
C. "Kanban" strategy
The first order of distribution strategy is based on a principle called "Kanban". This principle appeared in Japan and is used by Toyota.
In this approach, all the necessary details for the current phase and semi-finished products directly ordered from the previous stage. In other words, no one builds a large production plan month, six months, year, and so on - the required number of component parts for the current stage of production ordered in the previous stage by a certain date. Order is issued with a special card, which is called Kanban.
The card contains information about the exact number of each type of parts and specific delivery time. Under ideal conditions of production, the point in time when a specific stage of production will begin work on a particular product harvesting, he will have all the necessary parts, ordered them earlier.
This process of obtaining parts from previous production stages called "pulling". The final step in the preform production orders penultimate step, penultimate at an even earlier and so on. The result is a chain of requests from one another, which is generally similar to the pulling the last stage of the production of preforms from the first.
D. Needs-and-Means network strategy
Another strategy is based on Needs-and-Means networks (NM-network) [14-15]. Needs-and-Means network - concept of a distributed system that consists of a stand-alone entity, called holons. Each holon may have needs and opportunities. The interactions between holons because each holon is constantly looking for opportunities to others to meet their needs, while offering other opportunities. This process is called matching also - decided that, with some holon achieve contact.
Building on the approach of "Kanban" and NM-network two MRCP models were built that support the basic conceptual ideas of approaches. Model "Kanban / MRCP " simulates card interchange between the units of production, and the model of " NM-network / MRCP " uses a process mapping between the elements in the performance of manufacturing operations.
E. Experiments
Table II shows the comparative characteristics of the studied strategies in the initial configuration of the domain. The

392

initial configuration is considered to be the worst on the number of "bottlenecks".

TABLE II.
Feature
Total products
count % complete
order #1 % complete
order #2 % complete
order #3

COMPARISON OF EXPERIMENTS FOR THE INITIAL STATE

Comparison of experiments for the initial state

Simple

Kanban

NM-network

25

40

40

17.1

16.4

15.6

2.0

10.3

10.3

0

2.5

3.1

Even without eliminating the bottlenecks can get increased performance by almost 2 times. From this it can be concluded that the need for companies to optimize production processes, not only, but also others, for example, the order distribution process. Simulation will help predict the results.
Table III shows the results of three experiments with the best configuration. According to the results of our experiments, we can conclude that the best strategy for distribution of orders across the enterprise is a "Kanban". Regarding the initial state of the subject area of productivity growth has increased in 5.68 times.

TABLE III.
Feature
Total products
count % complete
order #1 % complete
order #2 % complete
order #3

COMPARISON OF EXPERIMENTS FOR THE BEST STATE

Comparison of experiments for the best state

Simple

Kanban

NM-network

91

142

140

43.7

51.6

49.2

24.1

37.2

37.2

0

13.9

14.5

If the company is willing to invest in the optimization of both production processes and distribution process orders between its divisions, it can get a huge increase in productivity and, as a consequence, significant increase in profits.

VI. CONCLUSION
This article showed that you can use simulation to generate data. It contains a description of the main steps and experiments of a simplified real-world problem. As a result of the experiments, it turned out to find the desired solution. All experiments were planned and conducted by authors. However, the simulation service and BPsim.Web develop so that another system will be easy integrating with them. In other words, BPsim.Web provides simulation as a service. Using this, authors plan to develop a decision-making service. A new service will plan and conduct experiments. It will analyze the

results of experiments and select parameters for a more accurate search for a solution to the problem.
VII. ACKNOWLEDGMENT
This work is supported by Act 211 Government of the Russian Federation, contract № 02.A03.21.0006.

REFERENCES

[1] A. Borodin, Y. Kiselev, S. Mirvoda, S. Porshnev, “On design of domainspecific query language for the metallurgical industry”, Proc. 11th International Conference BDAS: Beyond Databases, Architectures and Structures: Communications in Computer and Information Science, pp. 505–515, 2015.

[2] A. Borodin, S. Mirvoda, S. Porshnev, M. Bakhterev, M, “Improving penalty function of R-tree over generalized index search tree possible way to advance performance of PostgreSQL cube extension”, In Big Data Analysis (ICBDA), 2017 IEEE 2nd International Conference on Big Data Analysis, 130-133, 2017D. Z. Cheng, Controllability of switched bilinear systems, IEEE Trans. on Automatic Control, Vol.50, No.4, 2005, pp. 511-515.

[3] V. N. Zadorozhnyi, E. B. Yudin, “Growing network: models following nonlinear preferential attachment rule”, Physica A: Statistical Mechanics and its Applications, pp. 111-132, 2015.

[4] E. B. Yudin, M. N. Yudina, “Calculation of number of motifs on three nodes using random sampling of frames in networks with directed links”, 2017 Siberian Symposium on Data Science and Engineering (SSDSE), pp. 23–26, 2017.

[5] Aksyonov K., Bykov E., Aksyonova O. Real time simulation models integrated into the corporate information systems // 33rd Chinese Control Conference, CCC 2014; Nanjing; China; 28 July 2014 through 30 July 2014, Pages 6810-6813. WOS:000366482806175, DOI: 10.1109/ChiCC.2014.6896121

[6] Aksyonov K., Antonova A., Goncharova N. (2018) Analysis of the Electric Arc Furnace Workshop Logistic Processes Using Multiagent Simulation. In: Thampi S.M., Krishnan S., Corchado Rodriguez J.M., Das S., Wozniak M., Al-Jumeily D. (eds) Advances in Signal Processing and Intelligent Recognition Systems. SIRS 2017. Advances in Intelligent Systems and Computing, vol 678. Springer, Cham. DOI: 10.1007/978-3319-67934-1_35 Pages 390-397.

[7] Solovyeva I., Sokolov B., Ivanov D. Analysis of position optimization method applicability in supply chain management problem // 2015 International Conference "Stability and Control Processes" in Memory of V.I. Zubov (SCP) 2015. P. 498-500.

[8] Sokolov B.V., Pavlov A.N., Yusupov R.M., Ohtilev M.U., Potryasaev S.A. Theoretical and technological foundations of complex objects proactive monitoring management and control // Proceedings of the Symposium Automated Systems and Technologies Peter the Great St. Petersburg Polytechnic University, Leibniz Universität Hannover. 2015. P. 103-110.

[9] Aksyonov K., Bykov E., Aksyonova O., Goncharova N., Nevolina A. The architecture of the multi-agent resource conversion processes. UKSim-AMSS 11th European Modelling Symposium on Mathematical Modelling and Computer Simulation. Manchester, England, 20 - 22 November 2017. Pages 61-64. DOI 10.1109/EMS.2017.21

[10] Aksyonov K., Antonova A., Goncharova N. (2018) Choice of the Scheduling Technique Taking into Account the Subcontracting Optimization. In: Thampi S.M., Krishnan S., Corchado Rodriguez J.M., Das S., Wozniak M., Al-Jumeily D. (eds) Advances in Signal Processing and Intelligent Recognition Systems. SIRS 2017. Advances in Intelligent Systems and Computing, vol 678. Springer, Cham. DOI: 10.1007/978-3319-67934-1_26 pp. 297-304.

[11] Klebanov B., Antropov, T., Riabkina, E. The principles of multi-agent

models of development based on the needs of the agents 35th Chinese

Control Conference, CCC 2016 P. 7551-7555

DOI:

10.1109/ChiCC.2016.7554553, WOS:000400282203147

393

[12] Klebanov B., Antropov, T., Riabkina, E. Bases of imitation model of

artificial society construction accounting of the agents’ needs recursion.

16th International Multidisciplinary Scientific GeoConference SGEM

2016. Book2 Vol. 1, 101-108 pp.

DOI:

10.5593/SGEM2016/B21/S07.014, WOS:000395499400014.

[13] V. V. Alexandrov, S. V. Kuleshov, A. A. Zaytseva, “Active Data in Digital Software Defined Systems Based on SEMS Structures”, Logical Analysis of Data and Knowledge with Uncertainties in SEMS – Smart Electromechanical Systems, Studies in Systems, Decision and Control, pp. 61–69, 2016.

[14] Rzevski G., Himoff J., Skobelev P. MAGENTA Technology: A Family of Multi-Agent Intelligent Schedulers. International conference on multiagent systems . Proceedings of Workshop on Software Agents in Information Systems and Industrial Applications 2 (SAISIA). Fraunhofer IITB, Germany, 2006.
[15] Vittikh V. A., Skobelev P. O. Multi-agent Interaction Models for Constructing the Needs-and-Means Networks in Open Systems. Automation and Remote Control. Vol. 64, 2003, pp. 162-169.

394

