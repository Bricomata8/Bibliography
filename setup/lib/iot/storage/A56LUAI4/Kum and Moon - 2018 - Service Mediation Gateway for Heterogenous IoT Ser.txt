Service Mediation Gateway for Heterogenous IoT Services Harmonization

Seung Woo Kum, Jaewon Moon
Smart Media Research Center Korea Electronics Technology Institute
Sungnam, Republic of Korea {swkum, jwmoon }@keti.re.kr

Abstract—To populate IoT service, having remote control on a smart device is not enough. More complicated IoT services are needed by combining each IoT service, and enabling communication between independent services are essential to them. There are several solutions and services to provide interactivity between IoT services in the market such as IFTTT or Muzzley. However, most of these services are implemented on the cloud, which makes it difficult to get prompt response for application request. In this paper, a Service Mediation Gateway is proposed to improve connectivity between IoT services with less response time. The proposed gateway is located between IoT services and the application, just like an edge or fog device, and works as a data cache for IoT resources on the cloud. The proposed gateway can be implemented both on the cloud and on the edge, so that provide more prompt response to the application. The proposed gateway has been implemented with existing IoT services, and the comparison with existing cloud services is evaluated.
Keywords—IoT, IoT interaction, service mediation, edge computing.
I. INTRODUCTION
The IoT services utilize various network protocols [1] depending on the specific purpose of the IoT service being provided. Many platforms have been proposed and are being used for the IoT service for smart home, factory or smart farm. Those services are based on the cloud to provide the connectivity between devices and the application. By placing a service server on the cloud, any device or application can access each other with Internet-based protocols. However, these cloud-based services typically have more delay then conventional machine-to-machine protocols. To mediate the round-trip delay to the cloud service, edge or fog computing is getting more focuses these days. The approach of edge or fog computing is to place an edge device which can process data between a service and a device so that more prompt response can be generated on the edge. There are several researches related to the edge or fog computing applied to specific domain where prompt response matters. Condry et al. [2] proposed a structure to improve the security and extend the security in the IoT environment through edge devices. FAST [3] supports user context detection from the data collected from smart phone based on Fog computing. Stantchev et al. [4] present models and scenarios for implementing smart healthcare services as fog computing. EHOPES presents architectural models through

fog computing and presents performance comparisons with existing cloud services [5].
However, those researches are focusing on prompt response of multiple devices for a single service, and does not related to the interaction between multiple services. To populate IoT service, more complicated service interactions between independent services are needed. There are several products such as IFTTT or Muzzley which focuses on enabling interaction between independent IoT services, but they are still based on the cloud service only.
The author has already proposed a framework to harmonize heterogeneous IoT services [6]. The IoT Delegate framework is designed to provide connectivity and interactivity between various IoT services in the market. However, IoT Delegate on the previous work was located on the cloud, thus inducing more delay for interaction between IoT services. In this paper, a Service Mediation Gateway for heterogeneous IoT services is proposed. Based on its previous work, the newly proposed gateway is located between multiple service clouds and the application to improve performance of round-trip delay. In Section 2, detailed description of the proposed Service Mediation Gateway is given, and implementation and evaluation result is given on section 3. Final remarks are presented on section 4.
II. SERVICE MEDIATION GATEWAY
The previous work, IoT Delegate, is located on the cloud and works as a cloud-over-cloud service for IoT service harmonization. It is located between multiple IoT services to make them communicate and interact. The IoT Delegate provides a good platform to build a service which utilizes multiple IoT services, however, since it is located on the cloud itself, it induces much more delay than a single IoT service alone. The proposed Service Mediation Gateway in this paper improves delay induced by cloud service by locating IoT Delegate between the IoT service clouds and the application. The configuration for the proposed Service Mediation Gateway is depicted on Fig. 1.
As shown on Fig. 1, Service Mediation Gateway is located between IoT service clouds and the application, and processes messages from/to each one. This configuration is similar to the edge or fog computing architecture. In edge computing, edge is

This work was supported by Institute for Information & communications Technology Promotion (IITP) grant funded by the Korea government (MSIT) [2016-000286, Development of SW fused Wearable Device Module and Flexible SW Application Platform for the integrated Management of Human Activity].

978-1-5386-4646-5/18/$31.00 ©2018 IEEE

779

ICUFN 2018

located near the device, and in this configuration, Service Mediation Gateway is located near the application, so that more prompt response for the IoT service interaction can be made. To this purpose, the Service Mediation Gateway has two interfaces: one for the application and the other one for the cloud IoT service(s). The network interface for the application is on the same local network with the application. The other interface is connected to the Internet to provide connectivity with cloud scale IoT services. This configuration is depicted on Fig. 2.

of the Gateway. Fig. 3 depicts this processing of message between application, Gateway and the cloud.

Figure 1 Architecture for Service Mediation Gateway

Figure 2 Structure of Service Mediation Gateway
The proposed gateway has two internal components. The first one is a Bi-directional socket to transfer messages from one to the other, and the second one is a Subscription Manager which manages various event subscriptions from IoT services. The message processing between the application and IoT service on the Service Mediation Gateway can be described as follows: first, the Gateway access to the IoT clouds to read the IoT resource values and save them to the local storage of the Gateway. The IoT resource value can be any state of an IoT device such as power, sensor readings or current actuation status. It retrieves these IoT resource values from each IoT clouds periodically to maintain them up-to-date. When an application requests specific IoT resource values to the Gateway, first it looks up the requested data in its local storage. If it is there and up-to-date, the Gateway returns locally stored data to the application. If it is not stored in the local storage yet or the stored value is outdated, the Gateway forwards the request to the specific cloud and returns the value from the cloud to the application. The connection management and protocol harmonization is processed on those two components

Figure 3 Overall dealy of the proposed gateway
From the perspective of an application, the proposed Gateway is a data cache for IoT resources from various IoT services. If the request is a HIT, which means the requested data is stored on the Gateway, the response delay will be very short. If it is a MISS, the request will be forwarded to the specific cloud, so the round-trip delay will be same of the cloud application. The total delay of the proposed Gateway can be calculated with this HIT/ MISS ratio. Let’s assume that Gateway updates IoT resource status from the IoT cloud periodically with interval I for duration D, and assume that request of IoT resource at t0 is arrived to the Gateway at t. If t0 is smaller than the last updated time, this request is a HIT. And no message will be forwarded to the cloud. The Gateway will return its stored value to the application. In this case of HIT, delay for a request is Dα. If t0 is bigger, this request is a MISS, and the Gateway will forward the request to the appropriate cloud. In this case, delay becomes Dα + Dβ. Dtotal can be calculated with following equations regarding HIT/MISS ratio.

780

III. IMPLEMENTATION AND EVALUATION
The proposed Service Mediation Gateway is implemented with a testbed where three IoT devices are installed. The installed IoT devices are Phillips hue, Fitbit Force and SmartThings hub and doorlock. The Gateway is built on the Linux box with Intel i5, and implemented with PHP and node.js.
To evaluate the performance of the Gateway, round-trip delay and requested bandwidth are measured. The measured values are compared to the ones without Gateway. The round trip delay is calculated with the equation 1.
Table 1 shows the round trip delay with and without the Gateway for three IoT services. The delay was calculated with HIT/ MISS ratio. The first row shows average delay with all HIT messages, and the second row shows average delay with all MISS messages. The HIT/MISS ratio is on the fourth row of table 1, and the Dtotal is shown on the third row. The result shows delays with the Gateway for all three services are decreased from 18% to 97%, with respect to the HIT/MISS ratio. The high variance is from the characteristics of each underlying IoT Service. Services like Fitbit have no MISS messages since all the data from the cloud is always up-to-date. However, services like SmartThings and Hue have some MISS messages since they need to transmit control messages as well as data read. These control messages are considered as MISS since this message shall be delivered to the cloud.

TABLE 1 EFFECT OF AVERAGE ROUND TRIP DELAY USING SERVICE GATEWAY WITH IOT SERVICE.

SmartThings

Average Delay with HIT (in millisecond)
Average Delay with MISS (in millisecond)
Average Delay with vendor App
Average Miss Rate
Induced Delay from Gateway

10.94
1154.93 1143.99 43% 56% decrease

Hue 11.51
37.08 25.57 37% 18% decrease

Fitbit 14.95
537.13 522.18 0% 97% decrease

Table 2 shows measured bandwidth usage to keep data up-todate. IoT application needs to show up-to-date state of its device. The bandwidth overhead for the Gateway is measured with data packet count between the cloud and the Gateway. With the proposed Gateway, bandwidth overhead to keep data in sync with IoT service is same or decreased a little bit. It is decreased in SmartThings service, and this is due to the specific event which SmartThings supports. Usually, Application in the private network cannot receive that event and need polling of the resources. But the Gateway is at the edge, so it can process the event from the cloud and forward it to the application, which can reduce bandwidth used for polling.

TABLE 2 BANDWIDTH OVERHEAD TO KEEP DATA IN SYNC WITH IOT SERVICE.

Bandwidth overhead with Gateway
Bandwidth overhead without Gateway
Bandwidth overhead change

SmartThings 0 Byte
960Bytes Decrease

Hue 16,620Bytes
16,620 Bytes Same

Fitbit 61,120Bytes
61,120 Bytes Same

IV. CONCLUSION
In this paper, Service Mediation Gateway is proposed to manage different interfaces of multiple cloud-scale IoT services efficiently for heterogeneous IoT service application. Current IoT services are facing vertical silo problem, and the proposed Gateway uses concept of edge to manage interaction between the application and multiple IoT services. The proposed Gateway works as a data cache for IoT resources from each IoT service, and can process messages both from the private network and the Internet.
The proposed Gateway is implemented on the edge device, which is a PC-based Linux box, and evaluated with three real IoT services in the market. The performance evaluation is done for latency and bandwidth. The result showed at least 18% decrease of latency for IoT resource access and bandwidth usage decrease with Service Mediation Gateway for an IoT application. The evaluation result shows that the proposed Gateway can be used to improve heterogeneous IoT service application performance. In the future, more practical use case implementation with the proposed Gateway will be investigated.
REFERENCES
[1] A. Al-Fuqaha, M. Guizani, and M. Mohammadi, "Internet of things: A survey on enabling technologies, protocols, and applications," IEEE Commun. Surv. Tutorials, vol. 17, no. 4, pp. 2347-2376, 2015.
[2] M. W. Condry and C. B. Nelson, "Using Smart Edge IoT Devices for Safer, Rapid Response With Industry IoT Control Operations," in Proceedings of the IEEE, vol. 104, no. 5, pp. 938-946, May 2016.
[3] Y. Cao, S. Chen, P. Hou, and D. Brown, "FAST: A fog computing assisted distributed analytics system to monitor fall for stroke mitigation," Networking,Architecture and Storage (NAS), 2015 IEEE International Conference on, pp. 2-11, 2015.
[4] V. Stantchev, A. Barnawi, and S. Ghulam, "Smart Items, Fog and Cloud Computing as Enablers of Servitization in Healthcare," Sensors & Transducers, 2015.
[5] J. Li, J. Jin, D. Yuan, M. Palaniswami, and K. Moessner, "EHOPES: Data-centered Fog platform for smart living," Telecommunication Networks and Applications Conference (ITNAC), 2015 International, pp. 308-313, 2015.
[6] Seung Woo Kum, Mingoo Kang and Jong-Il Park, "IoT Delegate: Smart Home Framework for Heterogeneous IoT Service Collaboration," KSII Transactions on Internet and Information Systems, vol. 10, no. 8, pp. 3958-3971, 2016.

781

