Performance Evaluation of a Tree-Based Routing Protocol over a 3D Grid for UWSNs

Fatema Al Bahanta Department of Computer Science
Sultan Qaboos University Muscat, Oman
s114073@student.squ.edu.om

Khaled Day Department of Computer Science
Sultan Qaboos University Muscat, Oman
kday@squ.edu.om

Hussein Al-Maqbali Department of Computer Science International College of Eng. & Mgt
Muscat, Oman hussein@icem.edu.om

Nasser Alzeidi Department of Computer Science
Sultan Qaboos University Muscat, Oman
alzeidi@squ.edu.om

Abderezak Touzene Department of Computer Science
Sultan Qaboos University Muscat, Oman
touzene@squ.edu.om

Abstractâ€”Recently, a Tree-Based Routing (TBR) protocol for UWSNs has been proposed. It constructs shortest-path trees in a virtual 3D grid topology and uses them to obtain routing paths between sensor nodes and sink nodes. It has been claimed that due to the availability of these pre-constructed shortestpath trees, TBR is expected to outperform other protocols. In this work we investigate the validity of this claim by implementing TBR, evaluating its performance and comparing it to the well-known Vector-Based Forwarding (VBF) protocol by simulation. The delivery ratio and communication delay were measured under varying network density, node mobility and traffic load conditions. The obtained results show that TBR does outperform VBF (twice or more better) in terms of these measures. It was also observed from the simulation results that TBR performs better under low node mobility conditions. TBR consumes however more energy than VBF.
Keywordsâ€”underwater wireless sensor networks, routing protocol, performance evaluation, simulation
I. INTRODUCTION
Underwater Wireless Sensor Networks (UWSNs) are promising for exploring and exploiting the underwater environment. An UWSN consists of sensor nodes and sink nodes. Sensor nodes are small nodes anchored at the bottom of the ocean or floating underwater. Sink nodes are either static (installed offshore) or mobile at the surface. The sensor nodes sense data and forward it using acoustic signals to sink nodes which send it to other sink nodes and/or to base stations using radio signals.
UWSNs have attracted a lot of research attention in the last decade addressing several related problems. In particular, routing has been a challenging problem in UWSNs due to the difficult underwater conditions including dynamic topology, limited energy, low bandwidth and high propagation delay of acoustic signals used for underwater communication.
Not many quality routing protocols are available for UWSNs compared to terrestrial wireless sensor networks. A classification of UWSN protocols and an identification of some research issues that can be further pursued are reported in [8]. A more recent survey of currently available UWSN routing protocols can be found in [4]. The routing protocols are broadly divided into two categories: location-based and location-free protocols. The location-based protocols 4] [5] [10] require prior knowledge of the geographic location of the nodes and sinks in the network. The location-free protocols

[11] [12] do not require prior knowledge of the geographical location of the nodes and sinks.
A Tree-Based Routing (TBR) protocol has been recently proposed in [1]. It constructs shortest-path trees in a virtual 3D grid topology and uses them to obtain routing paths between sources and sink nodes. It is claimed in [1] that due to the availability of pre-constructed shortest-path trees, TBR offers high stability of the routing paths. Thus, the communication overhead is reduced (so energy consumption is also reduced) and the delivery ratio is increased. The aim of this work is to investigate the validity of this claim by evaluating the performance of the TBR routing protocol and comparing it with the performance of the well-known Vector-Based Forwarding (VBF) protocol through simulation. The delivery ratio and communication delay performance measures are used. The evaluation is conducted for varying network density, node mobility and traffic load.
II. THE TREE-BASED ROUTING PROTOCOL (TBR)
In TBR, we assume that the underwater region is viewed as a logical kÃ—kÃ—k 3D grid as shown in Fig. 1.

Sink

(3, 1, 4)

Z

G

I

H

(3, 0, 4)

(1, 0, 4) (0, 0, 4)

E F

(4, 0, 3)

(0, 0, 3)

D C

(3, 0, 2)

(1, 0, 2)

A

B

Y

(2, 0, 1)

(0, 0, 1)
cell (0, 0, 0)

X

Fig. 1. A Virtual 3D Grid View of the UWSN

978-1-7281-1340-1/19/$31.00 Â©2019 IEEE

426

ICUFN 2019

Each grid cell is a cube with three dimensions XYZ. All the cells in the network have the same volume d3, where d is the cell side length. Each cell is denoted with a unique cell id (Cid) which is obtained by mapping the cellâ€™s (x, y, z) coordinates to a linear id using the formula Cid = x+ky+k2z. We assume that the bottom left corner cell is the cell with coordinates (0, 0, 0) and therefore Cid 0. Each sensor node has a unique id (Nid). The sink node is a mobile node and initially fixed at the top middle cell. The other sensor nodes are of two types; some of them are mobile nodes moving with water currents and are deployed underwater at different depths with the help of surface buoys, while others are anchored at the bottom of the ocean. The sensor nodes communicate with the sink node using acoustic waves. The sink node communicates with terrestrial stations using radio waves or satellite communication. The location of each node is provided by a location service [19] [23].
The cell side length (d) is determined based on the transmission range R so that a node can communicate with a neighboring node within one hop. Two nodes are neighboring nodes if they reside in neighboring cells. Two cells are considered neighboring cells if they share a face, an edge, or a vertex. Hence, each cell has 26 neighboring cells. Fig. 2 illustrates the maximum distance between two neighboring nodes (located at diagonally apart corners of two neighboring cells). For such two neighboring nodes to be able to
communicate, we must have í µí±…í µí±… â‰¥ 2í µí±‘í µí±‘âˆš3.
The TBR protocol [1] consists of two layers, a proactive layer and a reactive layer. The proactive layer is for shortest path tree construction and for maintaining information related to tree construction such as the empty/non-empty status of the grid cells and the nodes movement (using proactive layer control packets). Whereas, the reactive layer is for forwarding the data packets (using cell based forwarding over the preconstructed routing tree path), and seeking the sink node location (using reactive control packets) when the source node has no information about the sink node. Each occupied cell in the network has a cell-head node, which acts as a gateway for forwarding the packets.
In the TBR protocol, each node maintains four tables: Node Table (NT), Occupied Cells Table (OCT), Gateway Table (GT) and Routing Table (RT). The Node Table contains for each node, the node id and the Cid of the cell where the node is located. The Occupied Cells Table contains the Cidâ€™s of all the occupied (non-empty) cells in the 3d grid. The Gateway Table contains all the neighboring Cids and for each neighboring cell, the ids of the nodes located in that neighboring cell. Whereas the Routing Table contains all the occupied cells Cids and the Cid of the next hop cell towards each occupied cell. The next hop cell ids are obtained by building a shortest path tree (routing tree).
A. Routing Tree Construction
In the TBR protocol, a packet is forwarded from the source node cell to the sink node cell over a pre-constructed routing tree path. The constructed routing tree is a breadth-first search tree rooted at the nodeâ€™s cell connecting it to all reachable occupied cells. The occupied cells are the vertices of the graph and two occupied cells are linked with an edge if they are neighboring cells in the 3D grid. The breadth-first search explores the graph in a layered order where it discovers the neighboring cells first, before moving to the next level neighboring cells.

Fig. 1, Fig. 2 and TABLE I show respectively an example of an UWSN viewed as a virtual 3D grid, a routing tree rooted at cell (2, 0, 1) of Fig. 1, and the representation of this tree in the form of a Routing Table (RT).
(3, 1, 4)

(3, 0, 4)

(1,0, 4)

(0, 0, 4)

(4, 0, 3)

(0, 0, 3)

(3, 0, 2)

(1, 0, 2)

(2, 0, 1)

(0, 0, 1)

Fig. 2. Shortest Path Tree Rooted at Cell (2, 0, 1)

TABLE I.

ROUTING TABLE (RT) AT NODE A

Cell (0,0,1) (2,0,1) (1,0,2) (3,0,2) (0,0,3) (4,0,3) (0,0,4) (1,0,4) (3,0,4) (3,1,4) Parent (1,0,2) NULL (2,0,1) (2,0,1) (1,0,2) (3,0,2) (0,0,3) (0,0,3) (4,0,3) (3,0,4) Next (1,0,2) (2,0,1) (1,0,2) (3,0,2) (1,0,2) (3,0,2) (1,0,2) (1,0,2) (3,0,2) (3,0,2)

Fig. 3 outlines the routing tree construction algorithm in TBR. At initialization, a FIFO queue is created and initialized to empty and the root cell A is set to the local cell. Every occupied neighboring cell Aâ€™ of A in the grid is inserted in the Routing Table (RT) with next hop equal to Aâ€™. For every cell Aâ€™ in the RT, cell Aâ€™ is queued in the queue. While the queue is not empty, dequeue one cell N. For each occupied neighboring cell Nâ€™ of N which is not inserted yet in the RT, insert Nâ€™ in RT with next hop equal to the next hop of N and enqueue Nâ€™ in the queue.
Routing Tree Construction Algorithm:
ï‚· create a FIFO queue Q and initialize it to empty ï‚· for every occupied cell C in the grid do
ïƒ˜ RTT[C].parent = NULL ï‚· Enqueue the root cell ï‚· While Queue is not empty
ïƒ˜ Dequeue one cell C from Q ïƒ˜ for each neighboring cell Câ€™ of C do
o If (RTT[Câ€™].occupied) and (RTT[Câ€™].parent = NULL) ï‚§ RTT[Câ€™].parent = C ï‚§ Enqueue Câ€™
ï‚· RTT[root cell].next = root cell ï‚· for every cell C other than the root cell do
ïƒ˜ if (C is a neighbor of root cell) then RTT[C].next = C ïƒ˜ else
o RTT[C].next = RTT[C].parent o while RTT[C].next is not a neighbor of root cell do
ï‚§ RTT[C].next = RTT[RTT[C].next].parent
Fig. 3. Routing Tree Construction Algorithm in TBR

427

B. Control Packets
The TBR protocol uses control packets to keep the four tables up to date and to guarantee consistency. Each layer has its associated control packets. The proactive layer control packets are related to cell occupancy and node location while the reactive layer control packets are related to locating the sink node and sharing it with all nodes in the network. The following are the proactive layer control packets and their processing is outlined in Fig. 4.
ï‚· Empty to Non-Empty (ENE): when a node moves to a new cell which was previously an empty cell, it sends an ENE control packet containing the new entered Cid to all the nodes in the 3d grid using cell-based broadcasting, indicating that the cell is now occupied.
ï‚· Non-Empty to Empty (NEE): when there is only one node in a cell and it exits from that cell leaving it empty, the node sends a NEE control packet containing the empty cell Cid to all the nodes in the 3D grid using cell-based broadcasting, indicating that the cell is now not occupied.
ï‚· Exit: when a node moves from its cell to a neighboring cell, it sends an exit control packet containing the new entered Cid to all the 26 neighboring cells so they can update their tables.
ï‚· Info: when a cell-head node receives an exit control packet with its local Cid, it replies with Info control packet containing its Gateway Table (GT) to the sender of the exit control packet. The sender of the exit packet updates its gateway table accordingly.
Processing of the Proactive Layer Control Packets
Empty to Non-Empty (ENE):
ï‚· When a node moves to an empty neighboring cell Cid, it does the following: ïƒ˜ Cell-based broadcast (ENE, Cid)
ï‚· Each node receiving the ENE control packet does the following: ïƒ˜ OCT. insert (Cid) ïƒ˜ Set RT_Valid to 0
Non-Empty to Empty (NEE):
ï‚· When a node exits from a cell Cid and it was the only node in that cell, it does the following: ïƒ˜ Cell-based broadcast (NEE, Cid )
ï‚· Each node receiving the ENE control packet does the following: ïƒ˜ OCT.delete (Cid). ïƒ˜ Set RT_Valid to 0.
Exit:
ï‚· When a node moves to a neighboring cell Cid, it does the following: ïƒ˜ Send (Exit, Cid) to neighboring cells ïƒ˜ Rebuild the RT table ïƒ˜ Rebuild the GT table based on the received GT in the Info packet
Info:
ï‚· When a cell-head node receives an Exit packet from a local node A (located in the same cell as the cell-head node) it does the following: ïƒ˜ Send (Info, GT) to node A.

C. Discovering the Location of the Sink Node
The reactive layer includes some mechanisms which are invoked during packet sending and forwarding. One of the reactive layer mechanisms is the discovery of the location of the sink node. If a node wants to send or forward a packet and it has no information about the location of the sink node, it uses some control packets to determine the location of the sink node as described below. The processing of these control packets is outlined in Fig. 5.
ï‚· Sink Location Request (SLQ): When a node needs to send a data packet to the sink but no information about the sink node location is available in its NT, it sends a Sink Location Request (SLQ) control packet to the sink node using cell-based broadcasting. Each node receiving the SLQ control packet updates its NT and GT with the previous forwarder node location information. In cell-based broadcasting of a packet only the cell-head nodes rebroadcast the packet.
ï‚· Sink Location Reply (SLR): When the sink receives the SLQ control packet it replies to the SLQ packet source node with a Sink Location Reply (SQR) control packet containing its location information through using cellbased broadcasting to allow the other nodes to also update their information about the sink node location. Each node receiving the SLR control packet updates its NT with the sink location information.
Processing of Sink Location Control Packets
Sink Location Request (SLQ): ï‚· When node A needs to route a packet and the sink node is
not available in its NT. ïƒ˜ Cell based broadcast (SLQ, Sink_id) ï‚· Each node receiving the SLQ packet ïƒ˜ Updates NT and GT with previous forwarder data.
Sink Location Replay (SLR): ï‚· When a sink node receives SLQ packet.
ïƒ˜ Cell based broadcast (SLR, Sink_loc) to node A ï‚· Each node receives SLR packet
ïƒ˜ Updates its NT with Sink data. ïƒ˜ If it is node A
o Rebuild the tree path o Send data packet
Fig. 5. Processing of Sink Location Control Packets
D. Cell-head (CH) Selection
The Cell Head (CH) node in each cell is responsible for forwarding the packets to the neighboring cells. Each node A has its own view regarding who is the cell-head in a neighboring cell C to whom to forward the packets that need to be routed through cell C. Node A considers the node in C from whom it received the most recent beacon as the CH in that cell C. This ensures that CH is alive. It also and reduces the cell-head selection overhead and avoids overloading a particular node with the cell-head responsibility which extends the sensors life time.

Fig. 4. TBR Proactive Layer Control Packets

428

III. PERFORMANCE EVALUATION OF TBR
A half-duplex underwater acoustic channel is assumed. The propagation model is underwater propagation, which simulates the underwater acoustic signal propagation in the underwater environment. Both the long propagation delay and the high attenuation ratio are considered in this model. The simulation parameters are listed in TABLE II.

TABLE II.

SIMULATION PARAMETERS

number of nodes in the network. This is justified by the fact that more nodes means more control packets (more traffic) hence higher chance for packet loss. In VBF, the packet delivery ratio is not affected much by the increase in the density compared to TBR. This can be justified by the fact that VBF does not use control packets like TBR. However, the work in [9] shows that the packet delivery ratio in VBF starts decreasing when the number of nodes exceeds a certain threshold (in VBF more nodes means more forwarders hence higher traffic and higher packet loss).

The adopted simulation type is the terminating state where each run lasted for 1000 seconds. Results from the first 150 seconds and the last 100 seconds are discarded to minimize the warm-up effect. The senor nodes are deployed randomly in the underwater region. Most underwater applications assume 2D horizontal movements of the sensor nodes [25]. Thus, the selected mobility model in this simulation is the 2D random walk [19]. The batch means method was used to collect simulation results where each point is obtained from the average of 30 simulation runs. In each run, 7% randomly selected sensor nodes were used to inject exponentially distributed traffic into the UWSN.
The performance of TBR is evaluated and compared with VBF [25] by measuring the following performance metrics: Packet Delivery Ratio and Average End-to-End Delay. These are measured while varying the following parameters: Network Density, Traffic Load, and Node Mibility.
The AquaSim simulator was used to evaluate the packet delivery ratio and average end to end delay of TBR under varying network density, traffic load, and node mobility speed. The results are compared with those of the VBF routing protocol [13].
A. Effect of the Network Density
The effect of the network density is studied for both TBR and VBF protocols by varying the number of nodes from 50 to 250. The nodes mobility speed is fixed to 0.02 m/sec. Between 7% and 14% randomly selected source nodes are used to inject traffic at a rate of 0.1 pkts/sec.
Fig. 6 shows the effect of the network density on the packet delivery ratio. It shows that TBR provides higher packet delivery ratio compared to VBF as TBR uses cell-head based packet forwarding along stable routing paths. In TBR, the packet delivery ratio decreases with the increase of the

Fig. 6. Effect of Network Density on Packet Delivery Ratio
Fig. 7 shows the effect of the network density on the average end to end delay. It shows that TBR provides lower average end to end delay compared to VBF. TBR uses cellbased packet forwarding along stable routing paths. In TBR, the average end to end delay increases with the increase of the number of nodes in the network. This can be justified by the fact that more nodes means more control packets, hence higher traffic and more queuing delays. In VBF on the other hand, the average end to end delay is not effected much by the increase in the density. VBF does not use control packets and packets are forwarded in the same routing pipe. But when the number of nodes grows high enough in VBF more nodes are in the pipe hence more forwarders causing higher traffic and more queueing delays.
Fig. 7. Effect of Network Density on Average Delay

429

B. Effect of Traffic Load
The effect of traffic load is assessed by varying the data packet generation rate from 0.05 to 0.2 packets per second. A total of 100 sensor nodes are randomly deployed in the area. The node mobility speed is set to 0.02 m/sec and 7% randomly selected source nodes inject the traffic.
Fig. 8 shows the effect of the traffic load on the packet delivery ratio. It is observed that TBR provides higher packet delivery ratio than VBF. This is due to the availability of the pre-constructed routing tree paths in TBR and to the fact that only cell-head nodes along these paths forward packets in TBR while in VBF all nodes in the routing pipes forward packets which increases traffic and hence increases the chance of packet loss in VBF. However, the packet delivery ratio decreases with the increase in the packet generation rate in TBR while it shows more stability in VBF. By increasing the packet generation rate in TBR, more control packets are propagated in the network and hence, more packets collide and get dropped. The authors in [9] show that VBF gets more effected by the traffic load in dense networks. It can be seen from the figure that TBR has doubled the packet delivery ratio compared to VBF for the simulate1d cases.

C. Effect of Node Mobility
The impact of node mobility is measured by varying the speed of the nodes from 0.02 m/sec to 2.5 m/sec. The number of nodes used in this experiment is 100 nodes. The nodes are deployed randomly in the network. A total of 7% randomly selected source nodes are used to inject the traffic. The data packet generation rate is set to 0.1 packet per second.
Fig. 10 shows the effect of node mobility on the packet delivery ratio. TBR shows higher packet delivery ratio with speeds under 1.8 m/sec compared to VBF. It is also observed that in TBR the packet delivery ratio is highly effected by the node mobility speed compared to VBF. This is because in TBR higher speed causes more control packets hence more traffic and higher chance of packets loss. While in VBF nodes continue to leave and enter the routing pipe and any node in the pipe can forward data packets hence the packet delivery ratio is not effected much by the node mobility speed. TBR has achieved better packet delivery ratio than VBF until the speed has reached 1.8 m/sec, after which VBF has shown slightly better packet delivery ratio than TBR.

Fig. 8. Effect of Traffic Load on Packet Delivery Ratio
Fig. 9 shows the effect of the traffic load on the average end-to-end delay. It shows that TBR provides lower average end to end delay compared to VBF. This is justified by the fact that TBR uses cell-based packet forwarding over stable routing paths. In both protocols, the average end-to-end delay is not effected much by the increase of traffic load as the studied network is sparse.

Fig. 10. Effect of Node Mobility on Packet Delivery Ratio
Fig. 11 shows the effect of the node mobility on the average end-to-end delay. TBR shows lower average end-toend delay with speeds under 1.4 m/sec compared to VBF. It is also observed that in TBR the average end-to-end delay is highly affected by the node mobility speed compared to VBF. This is because in TBR higher speed causes more control packets hence more queuing time. While in VBF nodes continue to leave and enter the routing pipe and any node in the pipe can forward data packets hence the average end-toend delay is not effected much by the node mobility speed.

Fig. 9. Effect of Traffic Load on Average Delay

Fig. 11. Effect of Node Mobility on Average Dealy

430

IV. CONCLUSION
We conducted a simulation based performance evaluation of the Tree-Based Routing (TBR) protocol over 3D grid for UWSNs using the Aqua-Sim simulator. The obtained results show that TBR outperforms VBF substantially in terms of packet delivery ratio and average end to end delay. It was also observed that TBR performs better under low mobility conditions. It was however observed from the simulations that TBR consumes more energy than VBF. A possible future work is to improve the design of TBR by reducing the use of control packets which is suspected to be the cause of the higher energy consumption.
REFERENCES
[1] Ayaz, M., Baig, I., Abdullah, A., & Faye, I. (2011). A survey on routing techniques in underwater wireless sensor networks. Journal of Network and Computer Applications, 34(6), 1908-1927.
[2] Khalid, M., Ullah, Z., Ahmad, N., Arshad, M., Jan, B., Cao, Y., & Adnan, A. (2017). A Survey of Routing Issues and Associated Protocols in Underwater Wireless Sensor Networks. Journal of Sensors, 2017.
[3] Akyildiz, I. F., Pompili, D., & Melodia, T. (2005). Underwater Acoustic Sensor Networks: Research Challenges. Ad hoc networks, 3(3), 257-279.
[4] Climent, S., Sanchez, A., Capella, J. V., Meratnia, N., & Serrano, J. J. (2014). Underwater Acoustic Wireless Sensor Networks: Advances and Future Trends in Physical, MAC and Routing Layers. Sensors, 14(1), 795-833.

[5] Yu, H., Yao, N., & Liu, J. (2015). An Adaptive Routing Protocol in Underwater Sparse Acoustic Sensor Networks. Ad Hoc Networks, 34, 121-143.
[6] Maalej, M., Cherif, S., & Besbes, H. (2013). QoS and Energy Aware Cooperative Routing Protocol for Wildfire Monitoring Wireless Sensor Networks. The Scientific World Journal, 13 (1), 351-358.
[7] Day, K., Al-Moqbali, H., Alzeidi, N., & Touzene, A. (2017). TBR: Tree-Based Routing over a 3D Grid for Underwater. Journal of Communications, 12(10), 579-584.
[8] Ilyas, N., Akbar, M., Ullah, R., Khalid, M., Arif, A., Hafeez, A., & Javaid, N. (2015). SEDG: Scalable and Efficient Data Gathering Routing Protocol for Underwater WSNs. Procedia Computer Science, 52, 584-591.
[9] Cheng, W., Teymorian, A. Y., Ma, L., Cheng, X., Lu, X., & Lu, Z. (2008, April). Underwater Localization in Sparse 3D Acoustic Sensor Networks. In INFOCOM 2008. The 27th Conference on Computer Communications, Phoenix, AZ, USA. 13-18 April, 236-240.
[10] Lessmann, J., Janacik, P., Lachev, L., & Orfanus, D. (2008, April). Comparative Study of Wireless Network Simulators. In ICN 2008, Seventh International Conference on Networking April 13-18, 2008 Cancun, Mexico. 517-523.
[11] Xie, P., Cui, J. H., & Lao, L. (2006, May). VBF: Vector-Based Forwarding Protocol for Underwater Sensor Networks. In the 2006 5th International IFIP-TC6 Networking Conference, Coimbra, Portugal, May 15-19, 1216-1221. Springer, Berlin, Heidelberg.
[12] Al-Salti, F., Alzeidi, N., & Arafeh, B. (2014, October). A New Multipath Grid-Based Geographic Routing Protocol for Underwater Wireless Sensor Networks. In the 2014 International Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery (CyberC), Shanghai, China, October 10-12, 331-336.

431

