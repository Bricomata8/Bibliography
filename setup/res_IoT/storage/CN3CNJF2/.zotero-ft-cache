2014 IEEE World Forum on Internet of Things (WF-IoT)

Semantic Open IoT Service Platform Technology

Dong-Hwan Park
IoT Convergence Research Department
ETRI Daejeon, Korea dhpark@etri.re.kr

Hyo-Chan Bang
IoT Convergence Research Department
ETRI Daejeon, Korea bangs@etri.re.kr

Cheol Sik Pyo
IoT Convergence Research Department
ETRI Daejeon, Korea cspyo@etri.re.kr

Soon-Ju Kang
College of IT Kyungpook National
University Daegu, Korea sjkang@ee.knu.ac.kr

Abstract—This paper focuses on how technologies contributes to improving interoperability between IoT devices, and making easily use of IoT devices. The proposed platform technology provides semantic-based IoT information services, and semantic interoperability of IoT devices. This service platform can be applicable to a lot of semantic IoT services: collecting invisible information in real environment by smart devices, providing smart life services by sharing, participating, distributing open sensing information.
Keywords—Internet of Things, semantic technology, service platform, semantic interoperability, service ontology
I. INTRODUCTION
Depending on the rapid adoption of wearable computing devices such like smart watch, smart glasses and wristbandtyped fitness tracker, we become able to enjoy a ‘IoT(Internet of Things) based smart life’ that can be connecting internet anywhere, anytime and any-device. Most smartphones have built in a variety of sensors such as ambient light sensor, proximity sensor, global positioning system, accelerometer, compass, and gyroscopic sensor. Especially, recent produced smartphones have contained more environmental sensors such as temperature, humidity and barometer. These sensors make things smarter and can help to make smarter apps such as healthcare apps, educational contents and augmented reality applications. Sensor is one of the most important technology elements to make “internet of things”, because of it monitor the state of things and can extend its functionality. More than nine billion devices around the world are currently connected to the Internet, including computers and smartphones. That number is expected to increase dramatically within the next decade, with estimates ranging from quintupling to 50 billion devices to reaching one trillion. The Internet of Things has the potential to create economic impact of $2.7 trillion to $6.2 trillion annually by 2025 [1].
Likewise, many tiny sensors and its applications are developing in order to meet the need of consumer who wants to know and share environmental information surrounding them. Sensor network and IoT(Internet of Things) are core technologies in environmental monitoring such as air/water quality, radiation and traffic noise. Useful information gathered from sensor network became an information silo because of sensor networks were so tightly coupled with sensor

application until now. Sensor data representation formats used in these sensor networks is various, and cannot understand the sensing value’s meaning in other applications except their private application. Therefore, sensing values and information must be shared and provided additional information for other applications.
To meet these requirements, this paper shows the open semantic IoT service platform technology that guarantees the semantic interoperability of sensors or things’ information and share of these resources. This technology allows sensor information portal service providers and general developers to develop more useful IoT based applications and services easily.
II. SEMANTIC OPEN IOT SERVICE PLATFORM Current IoT services require IoT applications to have knowledge of IoT middleware and sensors or sensor networks for accessing IoT resources. For example, heterogeneous IoT middleware are not easy to be accessed by applications since each IoT middleware has proprietary Application Programming Interface (APIs) and therefore it is not easy to access various IoT resources which directly attached to different IoT middleware. Even when the applications have access to multiple IoT middleware, applications have to search, collect, analyze and process the sensed data by themselves. These limits can be overcome by providing unified access method for IoT resources via heterogeneous IoT middleware. Figure 1 shows current IoT service platform and open IoT service platform.
Figure 1. Current IoT Service Framwork and Open IoT Service Platform
In the current IoT service platform, each application needs to know how to access heterogeneous IoT middleware and

This work was supported by the Industrial Strategic Technology Development Program funded by the Ministry of Science, ICT and Future Planning (MSIP Korea)[10038653, Development of Semantic based Open USN Service Platform]

978-1-4799-3459-1/14/$31.00 ©2014 IEEE

85

2014 IEEE World Forum on Internet of Things (WF-IoT)

which IoT resources should be accessed. In the open IoT service platform, each application does not need to know how to access heterogeneous IoT middleware nor which IoT resources should be accessed. In the open IoT service platform, IoT application only requests to open IoT service platform and remaining processing is done by the open IoT service platform. The open IoT platform converts request from applications into specific request for different IoT middleware. The ultimate goal of the open IoT service platform is to provide the application with the following services;
x easy access to and use of the global IoT resource and sensed data
x easy connection of IoT resources
x easy development and distribution of various applications
Figure 2 shows functional architecture of open USN service platform.
Application
Open USN service platform
Interface FE

Semantic query FE

LOD

LOD linking FE
Semantic inference FE

Semantic USN
repository FE

Resource management
FE

Adaptation FE1

Adaptation FE Adaptation FE2 ... Adaptation FEn

USN middleware1

USN middleware2 ... USN middleware3

Sensor or sensor network
Figure 2. Funtional Architecture of Semantic Open IoT Service Platform

The functional architecture of open USN service platform consists of open USN platform and heterogeneous USN middleware. The open USN platform consists of seven functional entities (FEs): interface FE, LOD linking FE, Semantic inference FE, Resource management FE, Semantic USN repository FE, Semantic query FE and Adaptation FE. The heterogeneous USN middleware are integrated into the open USN platform through the Adaptation FEs and USN resources and sensed data are shared with the other services through LOD linking FE.

A. Interface FE
Interface FE provides the functions which enables USN application to obtain open USN services and/or the sensed data from the open USN service platform. Also, it supports the functions which allow establishment or maintenance of

connections or disconnection according to the type of a request for data, and access control to handle access rights for user authentication and the use of services.
B. LOD Linking FE
LOD linking FE provides the functions which enable users to access the USN resources and sensed data in the world by opening the USN resources and sensed data generated from the open USN service platform to the LOD, and to provide link between external LOD data and the USN resources and sensed data from the open USN service platform. It also supports the interface for query about the USN resources and sensed data in the LOD, and the functions which allow the application and management of policies that include criteria about selection and publication of data to open to the LOD.
C. Semantic Inference FE
Semantic inference FE provides the inference functions based on the information descried in the ontology schema and users’ rules by using RDF data stored in the Semantic USN repository. Through the inference functions, the original raw data are processed into data with semantics such as context data. The inferred data are updated into the Semantic USN repository and utilized in other services. Furthermore, it provides the functions to compose different kinds of patterns and levels for inference.
D. Resource Management FE
Resource management FE provides the functions to issue and manage the identifier and URI of USN resource, and to manage mapping relations with the address of USN resource. Also, it supports the functions which enable USN resource to be automatically registered in the open USN service platform when USN resource is connected in the network such as Internet, and applications to obtain and utilize information about USN resource. It provides the functions which enable USN resource to actively register its own status and connection information. By using this information open USN service platform will support network connection and mobility of USN resource. Therefore, it can support plug and play functions which enable the open USN service platform to dynamically use USN resource as USN resource which automatically connects to the open USN service platform and registers its own status and property information. It provides the functions to search identifiers of USN resources for performing queries which can provide necessary information for requests from applications. In some cases, it can provide the functions to configure and manage a logical group on USN resource for satisfying applications’ service requests. It may perform the functions to create a resource group according to applications’ service request and to manage list of USN resource which belongs to the resource group. Also, it supports the functions to create, maintain and manage information such as the purpose of the resource group, makers, control with right and so on. It provides the functions to manage the lifecycle of each resource group according to the duration of service.

86

2014 IEEE World Forum on Internet of Things (WF-IoT)

E. Semantic USN Repository FE
Semantic USN repository FE stores metadata of USN resources and sensed data collected from USN middleware for a certain period of time as a physical repository. Also, it provides API functions to query for inserting new data, searching, querying, and deleting stored data. When metadata of USN resources and sensed data are stored in Semantic USN repository, semantic USN repository FE translates them into RDF form according to predefined rules.
F. Semantic Query FE
Semantic query FE performs the functions to handle queries to USN middleware and USN repository for providing responses to applications’ information requests. It consists of query analyser function, middleware query function and SPARQL query function. The query analyser function provides the functions to create queries by analysing intention of applications’ requests, to translate the results of query process according to applications’ message specifications, and to deliver the translated data to applications. It classifies requests from applications into query to middleware and query to USN repository. The query to middleware, which requests the sensed data from USN resource through USN middleware, is created according to APIs that USN middleware provides. The query to USN repository, which requests the USN resources and sensed data from the Semantic USN repository, is created by translating queries that applications request into SPARQL. The middleware query function performs the functions to send queries to USN middleware, and to collect the resulting data from USN middleware. It provides the functions to manage query status about lots of queries to USN middleware created from the query analyser function, and to deliver the data received temporarily or periodically from USN middleware to the Semantic USN repository FE. However, in some cases, like having a real-time sensed data request, the sensed data can be directly sent to the query analyser function. The SPARQL query function performs the functions to simultaneously handle lots of SPARQL queries created from the query analyser function, and to produce the outcome of query from the Semantic USN repository, and to deliver them to the query analyser function.

III. EXAMPLE: SEMATNC SLEEP MANAGEMENT SERVICE
Semantic-based sleep management service is described as an example service of the proposed semantic open IoT service platform. The semantic-based sleep management service architecture consists of two modules: the Sensor Data Collector and the Semantic Processor. The Sensor Data Collector is located in Adaptation FE and Semantic USN Repository FE, and Semantic Processor is located in Semantic Inference FE in the proposed platform. The Sensor Data Collector is the module for collecting sensor specification and sensor observation and translating sensor data(i.e., sensor data detected from healthcare sensors and environmental sensors) into semantic data(i.e., RDF, RDFS, and OWL). In detail, it has the Collector, which collect sensor data gathered from healthcare sensor networks(e.g., blood pressure, blood sugar, body temperature, snoring, sleep apnea) and environmental sensors(e.g., temperature, humidity, illumination, weather) and convert input data formatted the Sensor Web Enablement(SWE) O&M(Observation & Measurement) into JSON(JavaScript Object Notation) mainly used for exchanging information on Internet. Also, the Sensor Data Collector has the Semantic Translator, which performs translation jobs(i.e., semantic annotation) by annotating sensor data, using the sensor/event/context ontology model and the translation rules to provide more meaningful information. The Semantic Processor stores sensor observations in the Sensor DB based the HBaseTM which is a distributed, scalable, big data store and sensor specification translated by the Semantic Translator and private health information formatted the RDF in the Semantic Repository. It derive contextual knowledge from aggregated data, using the Context Reasoner which performs the ontology based inference. The service can query the derived contextual knowledge stored in the Semantic Repository, using the SPARQL(Sparql Protocol and RDF Query Language). Figure 3 shows an overall architecture of the sleep management service.

G. Adaptation FE
Adaptation FE provides the functions which handle the protocol and message for setting up connection with USN middleware and delivering queries and commands. It works as an interface for processing several types of data generated from heterogeneous USN middleware in the open USN service platform. It supports the message translation function to translate the generated data from heterogeneous USN middleware according to proper message specifications to deal with in the open USN service platform. It also provides the message routing function to deliver the translated data to corresponding FE (USN Semantic Repository FE, Resource management FE and Semantic query FE) of the open USN service platform in order to process requests.

Figure 3. The overall architecture of the sleep management service
A. Semantic Ontology for Sleep Management Service The sleep management service is composed of a real event
ontology and service domain ontology in the proposed platform. The real event ontology means a commonly applied ontology

87

2014 IEEE World Forum on Internet of Things (WF-IoT)

which is independent with specific service domain for description of sensor data itself and event data abstracted from sensor data and metadata. The service domain ontology is built to derive context data from sensor data and/or event data according to a specific service domain such as healthcare. The real event ontology consists of 5 sub-ontologies such as resource, time, space, weather, community. The service domain ontology also consists of 5 sub-ontologies such as agent, policy, event, context, service. Figure 4 shows the structure of each ontologies.

conceptual information. This sub-ontology extends quantitative time value into abstract time concepts(e.g., “winter”, “morning”, “noon”, “dawn”, etc). Also, Using the temporal reasoning[5], we create the relation between time concepts, such as “before”, “after”, “inside”. In Figure 6, this ontology store single time instant(e.g., “2013-09-09T13:32:23”), using owl:TimeInstant class and owl:DurationDescription of OWLTime ontology class and store single time interval(e.g., “interval_101 named “EarlyAutumnInterval” between 8 month 23 day and 9 month 23). In this case, we derive single inferred triple(e.g., “TMP-20130909133223 owl:insides Interval_101”), using Table 1 ‘s SWRL(Semantic Web Rule Language) rule.

Figure 4. The Structure of Semantic Ontology for Sleep Management Service
Resource sub-ontology based on Semantic Sensor Network of W3C Incubator Group contains specification of various sensor and real-time sensor observation received from the service. This sub-ontology is divided into 2 parts: “Object” class and “ObservationValue” class. The “Object” class represents the specification of sensors and the “ObservationValue” class represents real-time sensor observation. Also, it relates to space as sensor’s position, time as sensor observation’s sensing time, and event as information abstracted the sensor observation. Figure 5 shows the structure of resource ontology.

TABLE I.

OWL:INSIDE RELATIONSHIP DERIVING RULE (SWRL

owl:TimeInstant(?x) owl:hasDurationDescription(?x, ?d)  owl:Interval(?v) owl:hasBeginning(?v, ?b)  owl:hasDurationDescription(?b, ?bd) 
owl:months(?d, ?month) owl:days(?d, ?day)  owl:months(?bd, ?bm) owl:days(?bd, ?bd)  swrlb:greatThanOrEqual(?bm ,?month)  owl:hasEnding(?v, ?e)  owl:hasDurationDescription(?e, ?ed)  owl:months(?ed, ?em) owl:days(?ed, ?ed)  swrlb:lessThanOrEqual(?em ,?month) -> owl:inside(?x, ?v)

IV. CONCLUSION
In this paper, we introduces a semantic open IoT service platform which can support the semantic interoperability between various IoT devices, and The semantic-based sleep management service’s user application program was developed on Android smartphone. Each services offer the user with various services such as verifying sleep satisfaction, providing the aggregated sensor observations and analyzed sleep pattern. This service has shown that the semantic based sensor specification and observation has advantage in the sensor’s interoperability and service scalability on the proposed semantic open IoT service platform.

Figure 5. The Structure of Resource Ontology
Time sub-ontology based on OWL-Time ontology[4], which is standard ontology on time, expresses continuous time data received from sensor observation as discrete time-

REFERENCES
[1] James Manyika, Michael Chui, Jacques Bughin, and Richard Dobbs, Peter Bisson, and Alex Marrs, "Disruptive technologies: Advances that will transform life, business, and the global economy", McKinsey Global Institute, May 2013.
[2] Michael Comption, Payam Barnaghi, Luis Bermudez, Raul CarciaCastro, Oscar Corcho, Simon Cox, John Graybeal, Manfred Hauswirth, Cory Henson, Arthur Herzog, Vincent Huang, Krzysztof Janowicz, W. David Kelsey, Danh Le Phuoc, Laurent Lefort, Myriam Leggieri, Holger Neuhaus, Andriy Nikolov, Kevin Page, Alexandre Passant, Amit Sheth, Kerry Taylor, “The SSN ontology of the W3C semantic sensor network incubator group,” Journal of Web Semantics, 2012.
[3] Ian G Smith, Ovidiu Vermesan, Peter Friess, Anthony Furness, “The Internet of Things 2012 – New Horizens,” IERC, 2012.
[4] W3C, Time ontology in OWL(2006).Available online: http://www.w3.org/1005/TR/owl-time.
[5] James, F. Allen. Planning as Temporal Reasoning. In The second international conference on principles of knowledge Representation and Reasoning , 1991.

88

