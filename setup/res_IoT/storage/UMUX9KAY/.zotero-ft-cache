Multiple Access Class Barring factors Algorithm for M2M communications in LTE-Advanced Networks

Meriam Bouzouita

Yassine Hadjadj-Aoul

University of Rennes, Rennes, University of Rennes, Rennes,

France

France

SUP’COM, Ariana, Tunisia

yhadjadj@irisa.fr

mariem.bouzouita@supcom.tn

Nawel Zangar
Faculty of science of Tunis, University of el Manar, Tunisia
SUP’COM, Tunisia
nawel.zangar@insat.rnu.tn

Gerardo Rubino

Sami Tabbane

INRIA, Rennes

SUP’COM, Tunisia

Gerardo.Rubino@inria.fr Sami.Tabbane@insat.rnu.tn

ABSTRACT
The forecast dramatic growth, of the number of Machine-toMachine (M2M) communications, challenges the traditional networks of Mobile Network Operators (MNO). In fact, a large number of devices may attempt simultaneously to access the base station, which may result in severe congestions at the random-access channel (RACH) level. To alleviate such congestion while regulating the M2M devices’ opportunities to transmit, the Access Class Barring (ACB) process was proposed. In this article, we propose a novel implementation of the ACB mechanism in the context of multiple M2M traﬃc classes. Based on a scheduling algorithm, we have applied a PID controller to adjust dynamically multiple ACB factors related to each class category, guaranteeing a number of devices around an optimal value that maximizes the Random Access (RA) success probability. The obtained results demonstrate the eﬃciency of the proposed mechanism by increasing the success probability and minimizing radio resources’ underutilization with respect to each class priority.
Keywords
M2M; MTC; Access Class Barring; Congestion; Random Access.
1. INTRODUCTION
Machine Type Communications (MTC) or Machine-toMachine (M2M) communications are nowadays gaining a huge interest from the stakeholders, and particularly the Mobile Network Operators (MNO), and their customers. In fact, M2M communications are seen as one of the most important opportunities to face the revenue’s cuts for mobile operators while providing a plethora of services to the customers. These services can be declined in a wide range of
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for proﬁt or commercial advantage and that copies bear this notice and the full citation on the ﬁrst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior speciﬁc permission and/or a fee. Request permissions from permissions@acm.org. MSWiM’15 November 02-06, 2015, Cancun, Mexico. Copyright 2015 ACM 978-1-4503-3762-5/15/11 ...$15.00.

automated applications covering a large number of domains [4][10].
The huge number of M2M devices, which may attempt, at the same time, to access the base station, may result in severe congestions at the random-access channel (RACH) level [7]. In fact, a large number of devices may be triggered simultaneously and attempt to perform the Random Access (RA) in order to request for uplink radio resources. This congestion is even more aggravated when considering the class of event-driven communications, in which a large number of devices is activated during a very short period of time. These devices contend for a limited number of resources, called preambles. Indeed, if two or more MTC equipments choose the same preamble, the Evolved Node B (eNB) will be unable to identify the initiator of the RA and a collision will happen [2]. This may reduce the success access probability and may result in a performance degradation for MNO.
In this paper, our main concern is to design an eﬃcient mechanism to maximize the wireless resources’ utilization while guaranteeing the access priorities that may exist between the diﬀerent class of applications. Another important concern consists in protecting the M2M event-driven communications by prioritizing their access to the channel while adapting rapidly the ACB factors to absorb this type of traﬃc. To achieve this objective, we proposed both: (1) a Proportional Integral Derivative (PID) controller to make the number of M2M devices attempting the access procedure converge to the optimal one, and (2) a scheduling algorithm to ensure a weighted proportional fairness among M2M devices of the diﬀerent classes except the class of event-driven devices, which is prioritized.
The remainder of this article is organized as follows. Section 2 is dedicated to the description of the proposed mechanism. Section 3 portrays the simulation setup and discusses the obtained results. Finally, the paper concludes in Section 4 with a summary recapping the main advantages and achievements of the proposed scheme.
2. MULTIPLE ACCESS CLASS BARRING ALGORITHM
Many ACB-based algorithms were proposed in the literature [1]. However, most of them do not consider multi-class M2M devices. Thus, the obtained ACB factor is applied to

all classes of M2M devices, which might be harmful for MNO networks. The originality of our approach resides, ﬁrst, in considering devices belonging to diﬀerent classes. Second, in opposition to existing works, we propose to ﬁnd out the optimal number of devices and devising, then, an eﬃcient controller to make the number of devices attempting the RA converge to the optimal one.
2.1 System Model
In this paper, we consider the classical architecture described in [4]. We propose, in the following, to model the RA process, as described in [2]. Our model for M2M devices’ random access with multiple ACB factors (i.e. one factor per class) is inﬂuenced by the single-class system model that we proposed in [6]. The model is a ﬂuid one: the involved quantities, the whole numbers, are seen here as real quantities. The parameters used in the proposed system model are listed below:
• x1,i(t): the number of backlogged MTC devices from class i at time t, where i ∈ {1, 2, . . . , k}. The constant k represents the number of considered classes.
• x2(t): the number of MTC devices that pass the ACB check and wait to start RA attempt at time t.
• x3(t): the number of MTC devices that succeed RA procedure at time t.
• λi: the arrival rate of MTC devices from class i ∈ {1, 2, . . . , k}. Diﬀerent traﬃc patterns will be considered in the following, depending on the type of M2M application.
• θ1,i(x1,i): the rate of ACB failure for class i ∈ {1, 2, . . . , k}.

Now we are ready to describe the evolution of the states
x1,i with i ∈ {1, 2, . . . , k}, x2 and x3 based on the model described in Fig. 1. Let ﬁrst deﬁne C = {1, 2, . . . , k} as the set of classes. The system’s dynamics is described by the
following system of diﬀerential equations:

 dx1,i

  

dt

=

λi − pix1,i

− θ1,ix1,i,

for all i ∈ C,



 

dx2

 dt 

=

k
pix1,i − Rs(x2) − θ2x2,
i=1

(1)

  

dx3



dt

= Rs(x2) − µx3,

with the constraints that for all i ∈ C, x1,i, x2 and x3 should

be nonnegative.

The function Rs(x2) is represented by the expected num-

ber of MTC devices succeeding in the access process. This

number represents the number of preambles with only one

device.

Let’s deﬁne Ps as the probability that a given preamble is

chosen by one MTC device (i.e. probability of success). To

that purpose, we suppose that there are N available pream-

bles in each RA opportunity and x2 MTC devices contend-

ing for these resources. This is a typical “balls into bins’

problem”, in which Ps is given by:

Ps

=

x2 N

1− 1 N

x2 − 1 .

(2)

For a large N , this can be approximated by:

Ps

=

x2 N

− x2 − 1 eN

.

(3)

Therefore,

• θ2(x2): the rate of RA failures (i.e. collision and retransmission).
• µ(x3): the rate of MTC departure after performing the RA successfully.

− x2 − 1

Rs(x2) = x2e N .

(4)

The collision probability Pc can be derived using (3) and the idle probability (i.e. no user chooses a given preamble):

• pi(x1,i): the ACB factor for class i ∈ {1, 2, . . . , k}.
• N : indicates the total number of radio resources (preambles) available during one time slot. It is a constant

Pc

=

1

−

x2 N

x2 −
−
eN

1

−

− x2 eN

.

(5)

value.

2.2 Optimal number of M2M devices

• Rs(x2): denotes the number of MTC devices that transmitted their preambles successfully.
30

λ1 x1,1 θ1,1 x1,1

p1 x1,1

λ2

x1,2 p2x1,2

Rs(x2)

x2

x3

µ

θ1,2 x1,2

p3 x1,3

θ2x2

λ3 x1,3

Number of successful RA

25

20

15

10

5

0 20

40

60

80

100

120

140

Number of M2M devices in x2

Figure 2: Successful RA

θ1,3 x1,3 Figure 1: System description for k = 3

The main idea, in this section, is to derive an optimal number of contending M2M devices x2 in a way to be used by the proposed controller as an objective to achieve (i.e. targeted number of M2M devices).

All devices that have passed successfully the ACB test, will contend for the same radio resources (N ) as a way to access the network. The optimal value of devices, performing RA at the same time (i.e. xr2ef) and maximizing the success probability, is obtained based on Monte-Carlo simulations.
For the simulations, we vary the number of M2M devices between 1 and 150 devices. We evaluated the average and the variance on the number of successful RA. To validate the obtained results, many seeds were tested and the results, obtained in Fig. 2, were similar. The results, depicted in Fig. 2, show that the maximum number of successful RA is obtained when the number of M2M devices in x2 is equal to (N − 3). This number will be adopted as the optimal value (i.e. the targeted value) to generate the appropriate ACB factor in our scheduling algorithm.
2.3 PID feedback control on the access probability
In the proposed approach, the dynamic adjustment of the ACB factor (i.e. access probability) is achieved using a discrete Proportional Integral Derivative (PID) regulator [5]. The main idea, behind, is to make the total number of MTC devices, contending for the access, converges to the targeted value, which is deﬁned in the previous subsection.
The discrete PID regulator can be described by the following equation [5]:
n
Pacb(n) = Kpe(n) + Ki e(k) + Kd(e(n) − e(n − 1)) (6)
k=0
where n, Pacb, e, Kp, Ki and Kd represent respectively the instant, the controller output, the diﬀerence between the measured value and the set point value (i.e. the targeted value), the proportional gain, the integral gain and the derivative gain. In order to get the ideal response of the system, we considered the Ziegler-Nichols method [5] for the tuning of PID parameters.
As Pacb is a probability, a saturation block1 is added to bind the values within the interval [0, 1]. The probability calculated in (6) is general and do not concern a particular class of traﬃc. Thus, the probability Paicb for each class of service i ∈ C is derived from this value, as described in the next section. These values are broadcasted through a signaling channel to the diﬀerent classes of M2M applications.
2.4 Proposed algorithm
In this subsection, we describe in details the proposed algorithm, which is illustrated in the ﬁgure below, to compute multiple ACB factors for the diﬀerent classes of applications.
After a phase of initialization (at phase 1), the eNB estimates the error (i.e. e) to be used thereafter in the PID regulator (at phase 2). The error reﬂects the diﬀerence between the obtained value of the number of contending devices x2 at step n and the targeted value xr2ef. Therefore, the eNB estimates the number of successful ACB tests xˆ2 by estimating the states x1,i, for all i ∈ C (i.e. xˆ1,i, for all i ∈ C). These estimates can be easily obtained by a per-class counting of the number of devices that have passed successfully the ACB test and by averaging these obtained values using an Exponentially Weighted Moving Average (EWMA).
After that (at phase 3), the eNB uses the PID controller to adjust the ACB factor (i.e. Pacb) enabling to converge to-
1A component imposing higher and lower bounds.

(1) Init:
init k; xr2ef := N − 3; n := 1; pai cb := 1, ∀i ∈ C; init wi, ∀i ∈ C

(2) Estimate the error e: Estimate: xˆ1,i, ∀i ∈ C;
k
xˆ2 := pai cbxˆ1,i;
i=1
e(n) := xr2ef − xˆ2(n);

(3) Calculate x∗2:
n
Pacb := Kpe(n) + Ki e(k) + Kd(e(n) − e(n − 1));
k=0
Pacb := min (max (Pacb, 0) , 1);
k
x*2 := Pacb xˆ1,i;
i=1

yes

xˆ1,1 ≤ x∗2

no

(4.a) Calculate pai cb, ∀i ∈ C:

pa1cb f :=

:= 1;

x∗2 − xˆ1,1

k i=2

wi

;

pai cb

:=

wif xˆ1,i

,

∀i

∈

C − {1, 2};

pa2cb

:=

x∗2 − xˆ1,1 − xˆ1,2

k i=2

wif

;

(4.b) Calculate

pa1cb

:=

x∗2 xˆ1,1

;

pai cb,

∀i

∈

C:

pai cb := 0, ∀i ∈ C − {1};

n + +;
Figure 3: Scheduling Algorithm
wards the targeted number of contending devices (i.e. xr2ef). As the output of the PID controller should be a probability, in spite of considering Pacb, we consider only values within the interval [0, 1] by applying the: min(max(Pacb, 0), 1). The computation of the blocking probability Pacb allows generating an optimal number of equipments that should pass successfully the ACB process (i.e. x*2) based on the estimated xˆ1,i, for all i ∈ C (see phase 3).
In the proposed algorithm, we considered the ﬁrst class as the most prioritized by using an absolute priority access, as it is the case for some M2M applications such as emergency services. The access probabilities of the devices belonging to other classes are balanced using a weight factor wi, for all i ∈ C. Depending on the availability of preambles for the ﬁrst class, we pass by phase (4.a) or (4.b). Phase (4.b) is executed when there are not enough preambles to grant the access to all the devices of the ﬁrst class (i.e. x*2 is smaller than xˆ1,1). In this case the blocking probability for class 1 is calculated to have an optimal number of contending devices

for

this

class

p1acb

=

. x*2
xˆ1,1

The

devices

from

the

other

classes

are blocked. When there are enough preambles to grant the

access for all the devices in class 1, phase (4.a) is executed.

In this case, p1acb is equal to one (i.e. all the devices from the class are accepted), and the access is shared fairly between

the other classes depending on the weight of each class (i.e.

weighted fairness).

Once the ACB factors generation process is ﬁnished, it is

broadcasted through a signaling channel to all the equip-

ments, which should update their access probability and

start ACB check. Then, the operation is repeated from

phase 2, after incrementing the step variable n.

Note that the broadcasting of the access probabilities is

repeated for each frame, which represents a delay of 10ms.

Other delays might be considered for a less important ac-

curacy and reactivity. The considered delay is short but

represents a negligible overhead.

3. PERFORMANCE EVALUATION
3.1 Simulation parameters
Having described the details of the proposed algorithm to calculate a per-class ACB factor for heterogeneous M2M devices, we direct now our focus on evaluating its performance using the “Network Simulator (ns3)” environment [8]. The proposed model supports an unlimited and conﬁgurable number of types of M2M applications. However, for the simulations, we considered only the following classes:
• Emergency and prioritized applications (class 1): this category of applications must be processed with the highest rate of successful accesses. Emergency applications’ arrival follows a Beta-based traﬃc model [3].
• Applications for remote control and surveillance (class 2): this category represents M2M application with a good level of priority and continuous data transmission [9]. The model of arrival of corresponds here to a uniform process.
• Smart-grid-related applications (class 3): in this category a reasonably large amount of data is periodically transferred to eNB and, thus, causing RAN overload. Such applications have a very low priority of access with delay-tolerance and can be rejected in case of congestion. The periodic arrival of smart-grid related devices is also modeled with a uniform-based process.
The parameters’ settings are listed in Table 1. The duration of the simulation corresponds to the distribution period of the traﬃc of most critical traﬃc. More details on the trafﬁc patterns can be found in [3].
3.2 Simulation results
To validate the proposed model deﬁned in Figure 1, we present, in this subsection, the analytical values of success and collision probabilities against the ones obtained using simulation. Then, we will give the number of successful ACB tests compared with the targeted value (i.e. optimal value as found in section 2.2) to demonstrate the eﬀectiveness of our proposal. Finally, we show the eﬃciency of the proposed solution in prioritizing the diﬀerent M2M applications.
Figures 4 and 5 show the simulation results obtained respectively for the success probability and the collision probability against those obtained theoretically. It can be seen

Table 1: Simulation parameters

Parameters Simulation duration Total number of preambles Cell bandwidth Max. # of preamble retransmissions ac-BarringTime Total number of MTC devices # of devices in classes (1,2,3) Beta distribution time Beta function parameters

Values 10s 54 5MHz 10 4s 10000 (1000,3000,6000) 10s α = 3; β = 4

that the simulation results match very well the theoretical values, which allow validating the proposal model.
Simulation Analysis 40

20

0

0

2

4

6

8

10

Time (s)

Figure 4: Success Probability (%)

40 Simulation
Analysis 30

20

10

0

0

2

4

6

8

10

Time (s)

Figure 5: Collision Probability (%)

Figure 6 illustrates the instantaneous and the average (i.e. EWMA) number of successful ACB tests. We can easily see that even if the instantaneous values oscillate between 30 and 70, the average values remain very close to the targeted value (i.e. 51), which is the objective of our mechanism. This, clearly, demonstrates the eﬀectiveness of the PID controller as it helps in regulating the ACB factor dynamically according to the congestion level and the M2M application classes.
Note that values smaller than the target may lead to resources’ underutilization, while values bigger than the target

80 # of successful ACB tests target
60

40

Average successful ACB Successful ACB

20

0

2

4

6

8

10

Time (s)

Figure 6: Total successful ACB tests vs Setpoint

may lead to excessive collisions, which also lead to resources’ underutilization.
To see the eﬃciency of the proposed algorithm in prioritizing diﬀerent classes of M2M applications, let see the results obtained in Fig. 7. Figure 7 depicts the cumulative number of successful ACB tests for each class of M2M applications in ﬁgures (B) compared with the cumulative number of arrivals for each class in ﬁgures (A). It can be easily seen that the number of arrivals for class 1 is nearly equal to the number of successful ACB tests, which is in a complete conformance with the absolute constraint requirements for this category of traﬃc.

800 # of arrivals for class 1 (A)
600

800 # of success for class 1 (B)
600

400

400

200

200

0

0

0

2

4

6

8

10

0

2

4

6

8

10

Time (s)

Time (s)

800

800

# of arrivals for class 2 (A)

# of success for class 2 (B)

600

600

400

400

200

200

0

0

0

2

4

6

8

10

0

2

4

6

8

10

Time (s)

Time (s)

800

800

# of arrivals for class 3 (A)

# of success for class 3 (B)

600

600

400

400

200

200

0

0

0

2

4

6

8

10

0

2

4

6

8

10

Time (s)

Time (s)

Figure 7: (A) Cumulative number of arrivals per second, (B) Cumulative number of successful ACB tests per second

Another important observation, in Fig. 7, is that when the congestion is at its maximum (between seconds 2 and 8) the traﬃc of class 2 suﬀers from some degradation as some of the traﬃc is blocked. However, the blocking probability of this traﬃc class, which has a weight bigger than class 3, is low. This has direct consequences on the large number of

successful ACB tests for this class. On the other hand, the less prioritized class (i.e. class 3) suﬀer from the beginning from blocked traﬃc. The phenomenon is exacerbated when the congestion is at its peak, as it can be seen in Fig. 7. In fact, given that devices of class 3 have the lowest priority, they will be blocked in case of congestion, i.e. when arrivals of class 1 and class 2 are more important. Consequently, it results in reducing collision probability as it is observed in ﬁgure 5.
4. CONCLUSION
In this paper, the RAN overload issue caused by MTC in LTE-Advanced networks has been addressed. We have proposed a novel mechanism as a way to alleviate RAN congestion by eﬃciently managing the M2M devices’ random accesses. Using Monte-Carlo simulations, we ﬁnd out the optimal number of the MTC devices that should compete for the random access to maximize the number of devices succeeding in the ACB procedure. After that, in order to regulate adaptively the ACB factor guaranteeing a total number of devices around the targeted value, we used a discrete PID controller. Then, we applied a scheduling algorithm as a way to schedule diﬀerent M2M traﬃc classes. Simulation results show that the proposed mechanism can accurately predict congestion situations while signiﬁcantly reducing the collision probability.
5. REFERENCES
[1] 3GPP. Evolved universal terrestrial radio access (e-utra); radio resource control (rrc). Technical report, TS 36.331 V10.2.0, 06 2011.
[2] 3GPP. Medium access control (mac) protocol speciﬁcation. Technical report, TS 36.321 V10.2.0, 06 2011.
[3] 3GPP. Study on ran improvements for machine-type communications (release 11). Technical report, TR 37.868 V11.0.0, 09 2011.
[4] 3GPP. System improvements for machine-type communications, technical speciﬁcation group services and system aspects (release 11). Technical report, TR 23.888 V1.6.0, 2011.
[5] K. J. ˚Astr¨om and T. H¨agglund. Advanced PID control. ISA-The Instrumentation, Systems, and Automation Society, Research Triangle Park, NC, 2006.
[6] M. Bouzouita, Y. Hadjadj-Aoul, N. Zangar, S. Tabbane, and C. Viho. A random access model for M2M communications in LTE-advanced mobile networks. In Modeling and Simulation of Computer Networks and Systems, pages 577 – 599. Morgan Kaufmann, 2015.
[7] A. Ksentini, Y. Hadjadj-Aoul, and T. Taleb. Cellular-based machine-to-machine: overload control. Network, IEEE, 26(6):54–60, November 2012.
[8] ns3. http://www.nsnam.org/, 2015. [9] I. Petiz, P. Salvador, and A. N. Nogueira.
Characterization and modeling of m2m video surveillance traﬃc. In IARIA Int. Conf. on Advances in Future Internet - AFIN, August 2012. [10] G. Wu, S. Talwar, K. Johnsson, N. Himayat, and N. D. Johnson. M2M: from mobile to embedded internet. IEEE Communications Magazine, 49(4):36–43, 2011.

