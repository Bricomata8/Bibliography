
Processing math: 100%

Skip to Main Content

    IEEE.org
    IEEE Xplore Digital Library
    IEEE-SA
    IEEE Spectrum
    More Sites

    Cart (0)
    Create Account
    Personal Sign In
    Personal Sign In
    For IEEE to continue sending you helpful information on our products and services, please consent to our updated Privacy Policy.
    I have read and accepted the IEEE Privacy Policy .
    Accept & Sign In
    Email Address
    Password
    Sign In
    Forgot Password?

Access provided by:
UPMC - Universite Pierre et Marie Curie
Sign Out
X

    Browse
        Books
        Conferences
        Courses
        Journals & Magazines
        Standards
    My Settings
        Content Alerts
        Search Alerts
        MyXplore App
        Preferences
        Purchase History
        Search History
        What can I access?
    Get Help
        Feedback
        Technical Support
        Resources and Help

First Name / Given Name
Family Name / Last Name / Surname
Enter keyword or title
Enter keyword or title
Enter keyword or title
Enter keyword or title
Enter keyword or title
Publication Title
Volume
Issue
Start Page
Advanced Search
Other Search Options

    Command Search
    Citation Search
    Search Alerts
    Search History

Advertisement
Conferences > 2009 12th International IEEE ...
On using petri nets for representing and controlling signalized urban areas: New model and results
3
Author(s)
Angela Di Febbraro ; Nicola Sacco ; Davide Giglio
View All Authors
View Document
10
Paper
Citations
117
Full
Text Views

    Download Citation
    Email
    Export to Collabratec
    Alerts
    Alerts
    Manage Content Alerts
    Add to Citation Alerts

Abstract
Document Sections

    I.
    Introduction
    II.
    The new model
    III.
    The control system
    IV.
    Case study
    V.
    Conclusion

Authors
Figures
References
Citations
Keywords
Metrics
More Like This

    Download PDF
    Download Citation
    View References
    Email
    Request Permissions
    Export to Collabratec
    Alerts

Abstract: A microscopic model of signalized urban areas and its representation by means of stochastic-timed Petri nets are described in this paper, where a traffic-responsive contr... View more
Metadata
Abstract:
A microscopic model of signalized urban areas and its representation by means of stochastic-timed Petri nets are described in this paper, where a traffic-responsive control strategy, whose objective is the optimization of green duration of each stage, is also proposed. The Petri net representation here proposed is the new version of a previously proposed one, which was based on deterministic-timed Petri nets. The motivations of the need of proposing a new version and the differences between the two Petri net representations are clearly described. In addition, some results on the application of the proposed methodology to a single signalized intersection are included in the paper.
Published in: 2009 12th International IEEE Conference on Intelligent Transportation Systems
Date of Conference: 4-7 Oct. 2009
Date Added to IEEE Xplore : 06 November 2009
ISBN Information:
ISSN Information:
INSPEC Accession Number: 10964931
DOI: 10.1109/ITSC.2009.5309701
Publisher: IEEE
Conference Location: St. Louis, MO, USA
Advertisement
Contents
SECTION I.
Introduction

Signalized intersections within urban areas are considered in this paper with the objective of optimizing the duration of each stage. In traffic signalling control, changing the duration (or the relative duration) of each stage is one of the way to influence traffic conditions via traffic signals operations, according to the time-varying behaviour of traffic; other ways include the change of stage specification, the cycle time, and/or the offset between cycles in case of multiple intersections [22] . In general, control strategies employed for traffic signalling control are divided into fixed-time strategies and traffic-responsive strategies. Fixed-time strategies consider a given time of a specific day and determine the optimal splits, the optimal cycle time, or even the optimal staging, based on historical values about the traffic demand over the considered signalized urban area [1] , [16] , [24] ; on the other hand, traffic-responsive strategies make use of real-time measurements (typically acquired by means of inductive loops or pattern-recognition digital cameras) to calculate in realtime the suitable signal settings. In the last two decades, some tools have been developed in order to apply traffic-responsive strategies to signalized urban areas [13] , [15] . The control strategy proposed in this paper falls within the class of traffic-responsive strategies.

The proposed model belongs to the class of microscopic traffic representations [17] , [18] . In such a class of models, the behaviour of each vehicle is distinctly modelled in the traffic stream. In order to properly model traffic congestions, in the proposed model each intersection is divided into several crossing sections [4] , used by vehicles to approach the roads downstream with respect to the intersection itself. Moreover, an intersection includes a multi-stage traffic signal, whose stage matrix (i.e., the sequence of signal stages) is fixed. The proposed microscopic traffic model is represented by means of timed Petri nets, with the purpose of providing a suitable modelling tool for traffic management and signalling control. As a matter of fact, a network of traffic lights regulating the urban mobility can be viewed as a complex discrete-event system (DES), with such peculiar characteristics to require dedicated models and control methods. Among the many modelling formalisms proposed for DESs, Petri nets (PNs) [20] , [23] have been proved to be a valuable and powerful tool for design, analysis, and control of DESs, since they are able to capture the precedence relations and interactions among the concurrent and asynchronous events typical of such systems. The idea of applying PN capabilities to traffic modelling and control was introduced in [3] ; then, some other works have been published in the related literature [12] , [19] , [27] , [28] . In this context, specific class of Petri nets have been also adopted to model and control intersections (e.g., hybrid or continuous PNs [9] , [10] , [26] , coloured PNs [11] , [14] , diods/max-plus algebra [2] , [21] ).

The model considered in this paper and its representation by means of Petri nets are not totally new. As a matter of fact, deterministic-timed Petri nets were previously adopted by the authors to represent signalized urban areas [4] – [5] [6] [7] [8] . However, some tests on those nets and their application to some case studies showed that a completely deterministic model leads, in most cases, to undesired behaviours of the Petri net itself. In particular, the deterministic-timed Petri net representing signalized intersections and roads and all untimed Petri nets necessary to solve “structural conflicts” (see [4] for details) caused the occurrence of deadlock states which have no correspondence in the represented system. In the new model, proposed in this paper, stochastic times are considered to model interarrival times of vehicles entering the traffic area, the minimum time necessary to pass through a crossing section, and the minimum time necessary to travel along a road. Moreover, the timed Petri net (not deterministic but stochastic) representing signalized intersections and roads now considers separately all traffic streams involved in the intersections, thus preventing the occurrence of unreal deadlock states. Finally, structural conflicts are now solved making use of simpler nets (not untimed but stochastic-timed) which guarantee the turning rates characterizing the model.

It is worth finally observing that the proposed methodology falls in the class of coordinated strategies as it considers an urban zone, or even a whole network, and not only a single intersection. Moreover, the control strategy is applicable not only to undersaturated traffic conditions, but also to oversaturated traffic conditions, which represent a crucial aspect to be considered in traffic management (only few strategies in the literature are suitable for oversaturated traffic conditions). Basically, the undersaturated condition corresponds to low traffic in which queues that grow during the red phases are entirely drained during the green phases; on the contrary, under the oversaturated condition queues increase and in many cases reach the upstream intersections thus blocking the area.
SECTION II.
The new model

In this section, the main differences of this new model with respect to that initially proposed in [4] , and subsequently modified in [5] – [6] [7] , are described.

The basic components of the model of a signalized area are again the signalized intersections and the roads, as in the previous works. Intersections are divided into crossing sections in order to model the behaviour of vehicles when crossing an intersection (see Fig. 1 ). In the new model and in its representation by means of Petri nets, the different turning movements (which are followed according with the relevant turning rates \alpha_{j(k),l(h)}) are separately taken into account. This avoids the occurrence of deadlock states which have no correspondence in the represented system. However, “real” deadlock states (for example, with reference to Fig. 1 , a deadlock occurs when each crossing section is occupied by a vehicle that want to go straight) are correctly represented in the model, and a specific deadlock recovery strategy is embedded in the Petri net (in order to model the fact that, in a real situation, vehicles resolve the deadlock in some manner). A further consequence of separately considering turning movements is that there is no more the need of calculating specific turning rate values associated with crossing sections, as introduced in [4] (then, also the volume rate parameter in unnecessary).
Figure 1
Fig. 1. A two-stages isolated intersection.

View All

Another difference in the model of intersections regards time aspect. In the previous model all times associated with an intersection (interarrival times and travel times of crossing sections) were deterministic; now, stochastic times are considered: in particular, the interarrival times of vehicles in the traffic network is a stochastic value with exponential distribution and the time necessary to travel a crossing section is a stochastic value with Erlang distribution. This makes the new model more realistic. Roads, which connect intersections, are still mainly characterized by their capacity and, in case of multiple lanes, by the exit percentages \beta_{j(k)} . However, in the new model, the minimum travel time of a road is a stochastic value with Erlang distribution.
Figure 2
Fig. 2. Stage specification for the isolated intersection of Fig. 1 .

View All

An important difference is relevant to traffic signals. Cycle times were considered fixed in all previous works. In particular, it was assumed that a global cycle time did exist, and such a global cycle time was used to synchronize the three phases which characterized the old optimization algorithm. The optimization algorithm is now different (see Section III ) and then such a constraint has been removed. It is only assumed that the duration of stage s of signalized area v (it is recalled that, in the proposed model, traffic signals are grouped in V signalized areas, whose stage specifications can be easily obtained from the stage specifications of all traffic signals included in the signalized area), namely \psi_{v,s} , is constrained between a lower and an upper bound (\psi_{v,s}^{{\rm L}} and \psi_{v,s}^{{\rm U}} , respectively); moreover, \psi_{v,s}^{\star} denotes the nominal value of the duration of stage s of signalized area v (see Fig. 2 ).
A. The Petri net representation

The traffic system briefly described in the previous section is represented by means of a Petri net. The whole Petri net can be viewed as the merging of some nets: a stochastic-timed Petri net representing signalized intersections and roads, some deterministic-timed Petri nets representing the staging of signalized areas, some stochastic-timed Petri nets which solve (on the basis of turning rates and exit percentages) conflicts which are in the net representing signalized intersections and roads, and some further stochastic-timed Petri nets which recover deadlocks which may occur in the net representing signalized intersections and roads. In the following, the main features of such a Petri net-based representation are described making use of an example which refers to the representation of the two-stages isolated intersection of Fig. 1 . It is worth noting that such a representation is new with respect to that proposed in the previous works of the authors.

In Fig. 3 , the stochastic-timed Petri net representing the isolated intersection of Fig. 1 is illustrated. Stochastic transitions with exponential firing rate t_{2}, t_{4}, t_{6} , and t_{8} (together with places p_{9}, p_{10}, p_{11} , and p_{12} ) model the entry of vehicles in the intersection. The queues of vehicles which wait for crossing the intersection are represented by places p_{2}, p_{4}, p_{6} , and p_{8} . A vehicle may approach a crossing section if it is available. The availability of crossing sections is modelled by the presence of a token in places p_{15}, p_{20}, p_{25} , and p_{30} (in Fig. 3 , grey circles highlight places and transitions belonging to a certain crossing section). Traffic movements inside a crossing section are separately represented. As an example, vehicles travelling through S_{1,2} from R_{2(1)} to R_{3(1)}/R_{5(1)} are modelled by tokens which flow towards p_{3}/p_{5} through t_{9}, p_{18}, T_{18}, p_{19} , and t_{19}/t_{20} ; instead, vehicles travelling through S_{1,2} from R_{8(1)} , to R_{3(1)} are modelled by tokens which flow towards p_{3} through t_{15}, p_{21}, T_{21}, p_{22} , and t_{22} . Immediate transitions t_{1}, t_{3}, t_{5} , and t_{7} model the leaving of vehicles from the intersection.
Figure 3
Fig. 3. Petri net representation of the isolated intersection of Fig. 1 .

View All
Figure 4
Fig. 4. Equivalent structure for T_{j} (modelling the firing time according with an Erlang-k distribution having average 1/\lambda and variance 1/k\lambda^{2} ), being p_{i}=^{\bullet}T_{j} .

View All

Transitions depicted as double-bordered rectangles (and labelled as T_{j} ) are stochastic transitions with firing time in accordance with an Erlang-k distribution. In terms of Petri nets, such a kind of transitions may be modelled as a series of places and exponential transitions, as in Fig. 4 . In order to guarantee an average equal to 1/\lambda , the firing rate of each exponential transition must be k\lambda , which also means a variance equal to 1/k\lambda^{2} .

Queued vehicles can cross the intersection if the crossing section which they enter (for example, S_{1,2} is the relevant crossing section for vehicles queued in R_{2(1)} ) is available and also if they have green light. The staging of the whole intersection is modelled through the deterministic-timed Petri net in Fig. 5 .
Figure 5
Fig. 5. Petri net representation of the staging of the isolated intersection.

View All

In such a net, a token in p_{37} (resp., p_{38} ) allows (in case of availability of the relevant crossing section) the firing of t_{9} and t_{11} (resp., t_{10} and t_{12} ), that is, it means green light for vehicles queued in R_{2(1)} , and R_{6(1)} (resp., R_{4(1)} and R_{8(1)} ) which corresponds to stage \psi_{1,1} (resp., \psi_{1,2} ). The two deterministic-timed transitions t_{33} and t_{35} represent the durations of the two stages. These durations are the control variable when the performances of the traffic network are optimized, and then the firing times of such transitions are not fixed and their actual values are set by the control system, as described in Section III . However, it can be assumed that, in case of no optimization, the firing time of a deterministic timed transition representing the duration of stage s of signalized area v is set equal to the nominal value \psi_{v.s}^{\star} .

Several conflicts are present in the net of Fig. 3 . They represent the possibility of a vehicle to take two or more directions. As an example, the conflict consisting of place p_{19} and the two transitions t_{19} and t_{20} represents the possibility of a vehicle in crossing section S_{1,2} and coming from R_{2(1)} , (token in p_{19} ), to go straight (t_{19}) or turn right (t_{20}) .
Figure 6
Fig. 6. Petri net which solves the conflict between t_{h} and t_{k} .

View All

The conflict between two generic immediate transitions t_{h} and t_{k} (note that, only immediate transitions can be involved in conflicts) is structurally solved by means of the small stochastic-timed Petri net illustrated in Fig. 6 (one net for each conflict) which “decides” on the basis of the turning rates characterizing the involved movements. In particular, let \beta_{A} and \beta_{B} are the percentages of vehicles which take the direction represented by t_{h} and t_{k} , respectively (obviously, it must be \beta_{A}+\beta_{B}=1 ). Such turning rates are guaranteed by setting the firing rates of the two exponential transitions t_{A} and t_{B} to 1. 10^{5} and (\beta_{B}/\beta_{A})\cdot 10^{5} , respectively. The scale factor 10 5 is necessary to take the decision very fast (more specifically, faster than the time necessary to travel through a crossing section). It is worth remarking that the solution of a conflict does not depend on the state of the traffic system but only on turning rates; this is necessary to properly model the drivers' behaviour which usually follow their predefined path independently of the state of the system.

The last part of the whole Petri net representing the traffic system consists of some stochastic-timed Petri nets which recover (circular wait) deadlocks which may occur in the net representing signalized intersections and roads, as explained at the beginning of Section II . As an example, consider again the isolated intersection of Fig. 1 and its Petri net representation. The deadlock described in Section II (each crossing section is occupied by a vehicle that want to go straight) is a classic circular wait deadlock in which each client of a system requires (and waits for) a resource which is occupied by another client of the system. In terms of Petri net elements, this correspond to the simultaneous presence of a token in p_{14}, p_{41}, p_{19}, p_{45}, p_{24}, p_{49}, p_{29} , and p_{53} (note that, places p_{41}, p_{45}, p_{49} , and p_{53} , as well as places p_{42}, p_{46}, p_{50} , and p_{54} , result from the Petri nets which solve conflicts). In the proposed new model, it is assumed that, after a certain time interval (whose length is stochastic in accordance with an exponential distribution) drivers resolve the deadlock autonomously and then each vehicle can proceed towards its destination. The stochastic-timed Petri nets in Fig. 7 actuates such a deadlock recovery strategy. In general, there is one of such nets for each deadlock which may occur in the traffic system.
Figure 7
Fig. 7. Petri net which recovers the deadlock characterized by the simultaneous presence of a token in p_{14}, p_{41}, p_{19}, p_{45}, p_{24}, p_{49}, p_{29} , and p_{53} .

View All

SECTION III.
The control system

The final target of this work is the minimization of queue lengths in the traffic network through the optimization of stage durations. The inputs to the control system are the flow rates in the road stretches entering the network, whereas the control variables are the durations of stages, namely \psi_{v,s}, v=1, \ldots V ( V is the number of signalized areas), s=1, \ldots, S_{v}(S_{v} is the number of stages in the v -th signalized area). It is important to specify that in the optimization problem, which will be presented in the following subsections, the evolution of the system state is determined by means of the Petri net “fundamental equation” ( [20] ), which provides the value of a reachable marking on the basis of the actual marking and of a finite sequence of allowed firings of transitions (token game). In other words, in the proposed traffic signalling control strategy, the Petri net representation plays a key role, being the mathematical tool which provides the system state evolution.
A. Problem definition

Let \psi be the vector of positive real number gathering the n_{s}=\sum_{v=1}^{V}S_{v} durations of stages in the considered traffic network. Being the stage durations constrained between a lower and an upper bound, let {\cal R}\subset {\BBR}^{ns} be the n_{{\rm s}} -dimensional subspace which is obtained by constraints \psi_{v,s}^{{\rm L}}\leq\psi_{v,s}\leq\psi_{v,s}^{{\rm U}} \forall v=1, \ldots V and \forall s=1, \ldots, S_{v}. {\cal R} may be thought of as represented by a set of inequality constraints, which are expressed by the matricial form A\psi\leq b \eqno{\hbox{(1)}} View Source Right-click on figure for MathML and additional features. A\psi\leq b \eqno{\hbox{(1)}} Then, \psi is the control vector and {\cal R} is the solution admissibility set (\psi\in {\cal R}) . Moreover, let t_{{\rm MA}{\rm x}} be the time horizon on which the cost function is computed (optimization horizon).

The cost function to be minimized is a weighted sum of a cost term relevant to the maximum lengths reached by the queues, and a cost term taking into accounts the mean lengths of queues. Such cost terms are defined as follows.

    The sum of the maximum lengths of the n_{{\rm Q}} queues Q_{h}(\psi, t), h=1, \ldots, n_{{\rm Q}} , in the interval [0, t_{{\rm MA}{\rm X}}] , namely J_{{\rm M}}(\psi, t)=\sum_{h=1}^{n_{Q}} \max_{t\in[0,t_{MAX}]} Q_{h}(\psi, t); \eqno{\hbox{(2)}} View Source Right-click on figure for MathML and additional features. J_{{\rm M}}(\psi, t)=\sum_{h=1}^{n_{Q}} \max_{t\in[0,t_{MAX}]} Q_{h}(\psi, t); \eqno{\hbox{(2)}}

    The sum of the mean lengths of the n_{{\rm Q}} queues Q_{h}(\psi,t, h=1, \ldots, n_{{\rm Q}} , over the fixed time interval [0, t_{{\rm MA}{\rm X}}] , namely J_{{\rm L}}(\psi, t)=\sum_{h=1}^{n_{Q}}{1\over t_{{\rm MA}{\rm X}}} \sum_{l\geq 0}l\cdot T_{h}(l), \eqno{\hbox{(3)}} View Source Right-click on figure for MathML and additional features. J_{{\rm L}}(\psi, t)=\sum_{h=1}^{n_{Q}}{1\over t_{{\rm MA}{\rm X}}} \sum_{l\geq 0}l\cdot T_{h}(l), \eqno{\hbox{(3)}} where T_{h}(l) is the total time interval during which the queue h has length l .

Note that, with reference to the stochastic-time Petri net representing the traffic system, the queue Q_{h} is represented by a place p_{i} of the net (as an example, the queue in road R_{2(1)} of the isolated intersection of Fig. 1 is represented by place p_{2} ). Then, the length of queue Q_{h} corresponds to the marking of place p_{i} , being p_{i} the place which represents the h -th queue, and T_{h}(l) is the time interval during which the marking of place p_{i} is l .

The optimization problem is defined as follows.
Problem 1

\min_{\psi}J(\psi, t)=\alpha_{{\rm L}}J_{{\rm L}}(\psi, t)+\alpha_{{\rm M}}J_{{\rm M}}(\psi, t), \eqno{\hbox{(4)}} View Source Right-click on figure for MathML and additional features. \min_{\psi}J(\psi, t)=\alpha_{{\rm L}}J_{{\rm L}}(\psi, t)+\alpha_{{\rm M}}J_{{\rm M}}(\psi, t), \eqno{\hbox{(4)}} where \alpha_{{\rm L}} and \alpha_{{\rm M}} are weighting coefficients, and subject to \psi\in {\cal R}. \eqno{\hbox{(5)}} View Source Right-click on figure for MathML and additional features. \psi\in {\cal R}. \eqno{\hbox{(5)}}

The above defined problem needs to compute the state trajectories of the considered system. Then, while such a task can be faced by means of the formerly presented Petri net model, it is worth noting that, due to the nature of traffic systems, many parameter (such as input traffic flows, crossing section delays, and so on) have to be considered to be stochastic variables, and the represented as stochastic timed PN transitions. Therefore, Problem 1 result to be a stochastic optimization problem.
B. The optimization algorithm

The above stochastic optimization problem is in general very hard to solve, since even the mere empirical evaluation of the expected value of the cost function needs to simulate the model many times, thus to guarantee a good evaluation of the real value of the cost function by means of the equation E[\hat{J}(\psi, \nu)]=J(\psi, \nu) \eqno{\hbox{(6)}} View Source Right-click on figure for MathML and additional features. E[\hat{J}(\psi, \nu)]=J(\psi, \nu) \eqno{\hbox{(6)}} where \hat{J}(\psi, \nu) is an estimator of real value J(\psi, \nu) . To face such a challenge, a two-phases optimization approach is here proposed, based on an pseudo-gradient algorithm and on a quadratic programming problem. In detail, at each algorithm iteration k , it perform the two operations:

    find an approximation \hat{\psi}^{(k)} of the optimal solution \psi^{\circ} without taking into account the problem constraints expressed by (5) ; this means that \hat{\psi}^{(k)} may be feasible or unfeasible. In this phase, the direction along with the cost function decreases is estimated;

    find the best admissible solution \psi^{(k)} which satisfies the problem constraints but also minimizes the non-optimality. Such a task is performed only when \hat{\psi}^{(k)} is not feasible, that is when \hat{\psi}^{(k)}\not\in{\cal R} .

Figure 8
Fig. 8. The optimization algorithm.

View All

The whole algorithm is represented in Fig. 8 . In the following subsections, the two phases are described in detail.
C. Phase 1 – Find the optimal solution

The algorithm proposed for this phase allows to optimize an “empirical” version of the expectation E[\hat{J}(\psi, \nu)]={1\over N}\sum_{i=1}^{N}J_{i}(\psi, \nu) \eqno{\hbox{(7)}} View Source Right-click on figure for MathML and additional features. E[\hat{J}(\psi, \nu)]={1\over N}\sum_{i=1}^{N}J_{i}(\psi, \nu) \eqno{\hbox{(7)}} where uncertainty samples J_{i}(\psi, \nu) come from the simulation of the proposed model, in which variables are taken into account. In particular, the solution approach via a Simultaneous Perturbations Stochastic Approximation (SPSA) approach (see, for instance, [25] ) in which successive approximations of the optimal value \psi^{{\rm o}}=\arg\min_{\psi\in {\cal R}}E(\psi) \eqno{\hbox{(8)}} View Source Right-click on figure for MathML and additional features. \psi^{{\rm o}}=\arg\min_{\psi\in {\cal R}}E(\psi) \eqno{\hbox{(8)}} is proposed. In doing so, the samples J(\psi,\nu) are considered to be “noisy” observations of the cost function in (4) , neglecting that they come from simulations. As above mentioned, the recursion mimics a classical gradient descent method, in which the gradient with respect to \psi of the functional \hat{E}(\psi) is approximated at each iteration using only two noisy evaluations of the cost function.

Formally, let \psi^{(k)} denote the k -th estimate of the minimum, and let \{\eta(k)\} be a random sequence of column random vectors \eta(k)=[\eta_{1}(k)\quad \eta_{2}(k)\quad \cdots\quad \eta_{n}(k)]^{T} \eqno{\hbox{(9)}} View Source Right-click on figure for MathML and additional features. \eta(k)=[\eta_{1}(k)\quad \eta_{2}(k)\quad \cdots\quad \eta_{n}(k)]^{T} \eqno{\hbox{(9)}} that are not necessary identically distributed. The two-sided SPSA algorithm to update \psi(k ) is constructed as follows \hat{\psi}^{(k+1)}=[\psi^{(k)}-\alpha(k)\nabla_{J}] \eqno{\hbox{(10)}} View Source Right-click on figure for MathML and additional features. \hat{\psi}^{(k+1)}=[\psi^{(k)}-\alpha(k)\nabla_{J}] \eqno{\hbox{(10)}} where \alpha(k) is the step-size multiplier and \tilde{\nabla}_{J} is an estimate of the cost function gradient, defined as \nabla_{J}=[\eta(k)]^{-1}{\hat{E}_{+}(k)-\hat{E}_{-}(k)\over c(k)} \eqno{\hbox{(11)}} View Source Right-click on figure for MathML and additional features. \nabla_{J}=[\eta(k)]^{-1}{\hat{E}_{+}(k)-\hat{E}_{-}(k)\over c(k)} \eqno{\hbox{(11)}} in which c(k) a positive sequence converging to zero, [\eta(k)]^{-1} is the vector containing the inverses of the elements of \eta(k) , and the values \hat{E}_{\pm}(k) represent the “empirical” cost function measures taken at parameter values \psi^{(k)}\pm c(k)\cdot\eta(k) , that is E_{\pm}(k)=J(\psi^{(k)}\pm c(k)\cdot\eta(k)). \eqno{\hbox{(12)}} View Source Right-click on figure for MathML and additional features. E_{\pm}(k)=J(\psi^{(k)}\pm c(k)\cdot\eta(k)). \eqno{\hbox{(12)}}
D. Phase 2 – Guarantee the feasibility of the solution

As previously mentioned, the estimate of the optimal solution \hat{\psi}^{(k+1} computed at the iteration (k+1) may be not feasible. In the proposed approach, the best admissible solution is determined by means of the solution of a quadratic programming problem (which is fast to solve from a computational point of view). In effect, the problem consists in finding the point \xi^{{\rm o}} on the line of gradient \tilde{\nabla}_{J} passing in \hat{\psi}^{(k)} (and for construction in \psi^{(k+1)} ), with the minimum distance d=\sqrt{[\xi-\hat{\psi}^{(k+1)}][\xi-\hat{\psi}^{(k+1)}]^{T}} View Source Right-click on figure for MathML and additional features. d=\sqrt{[\xi-\hat{\psi}^{(k+1)}][\xi-\hat{\psi}^{(k+1)}]^{T}} with respect to \hat{\psi}^{(k+1)} and gathering to the set R .
Figure 9
Fig. 9. Second phase of each iteration.

View All

Then, being the square root function monotonically increasing, the problem can be stated as \min_{\xi}[\xi-\hat{\psi}^{(k+1)}][\xi-\hat{\psi}^{(k+1)}]^{T} \eqno{\hbox{(13)}} View Source Right-click on figure for MathML and additional features. \min_{\xi}[\xi-\hat{\psi}^{(k+1)}][\xi-\hat{\psi}^{(k+1)}]^{T} \eqno{\hbox{(13)}} subject to the constraint A_{{\rm IN}}\xi\leq b_{{\rm IN}} \eqno{\hbox{(14)}} View Source Right-click on figure for MathML and additional features. A_{{\rm IN}}\xi\leq b_{{\rm IN}} \eqno{\hbox{(14)}} which coincides with the whole problem constraint expressed in (1) , and to constraint A_{{\rm E}{\rm Q}}\xi=b_{{\rm EQ}} \eqno{\hbox{(15)}} View Source Right-click on figure for MathML and additional features. A_{{\rm E}{\rm Q}}\xi=b_{{\rm EQ}} \eqno{\hbox{(15)}} which is used to “force” the point \xi to be on the line of gradient \tilde{\nabla}_{J} in \hat{\psi}^{(k+1)} . The present line in {\BBR}^{n} is described in the parametric form by the equations \cases{ \xi(1)=\psi^{(k)}(1)+z\cdot\tilde{\nabla}_{J}(1)\cr \xi(2)=\psi^{(k)}(2)+z\cdot\tilde{\nabla}_{J}(2)\cr \vdots\cr \xi(n)=\psi^{(k)}(n)+z\cdot\tilde{\nabla}_{J}(n) }\eqno{\hbox{(16)}} View Source Right-click on figure for MathML and additional features. \cases{ \xi(1)=\psi^{(k)}(1)+z\cdot\tilde{\nabla}_{J}(1)\cr \xi(2)=\psi^{(k)}(2)+z\cdot\tilde{\nabla}_{J}(2)\cr \vdots\cr \xi(n)=\psi^{(k)}(n)+z\cdot\tilde{\nabla}_{J}(n) }\eqno{\hbox{(16)}} where z\in {\BBR} . By means of these n equations with n+1 variables, the equality constraints (15) has be rewritten in the matricial form A_{{\rm EQ}}\cdot[\xi(1)\ \ \xi(2)\quad \cdots\quad \xi(n)\quad z]^{T}=b_{{\rm EQ}}, \eqno{\hbox{(17)}} View Source Right-click on figure for MathML and additional features. A_{{\rm EQ}}\cdot[\xi(1)\ \ \xi(2)\quad \cdots\quad \xi(n)\quad z]^{T}=b_{{\rm EQ}}, \eqno{\hbox{(17)}} in which A_{{\rm EQ}}=\left[\matrix{ 1&0&\ldots&0&-\nabla_{J}(1)\cr 0&1&\ldots&0&\nabla_{J}(2)\cr \vdots&\vdots&\ddots&\vdots&\vdots\cr 0&0&\ldots&1&-\nabla_{J}(n) }\right], \eqno{\hbox{(18)}} View Source Right-click on figure for MathML and additional features. A_{{\rm EQ}}=\left[\matrix{ 1&0&\ldots&0&-\nabla_{J}(1)\cr 0&1&\ldots&0&\nabla_{J}(2)\cr \vdots&\vdots&\ddots&\vdots&\vdots\cr 0&0&\ldots&1&-\nabla_{J}(n) }\right], \eqno{\hbox{(18)}} and b_{{\rm EQ}}=[\hat{\psi}^{(k)}(1)\quad \hat{\psi}^{(k)}(2) \quad \cdots \quad \hat{\psi}^{(k)}(n)]^{T} \eqno{\hbox{(19)}} View Source Right-click on figure for MathML and additional features. b_{{\rm EQ}}=[\hat{\psi}^{(k)}(1)\quad \hat{\psi}^{(k)}(2) \quad \cdots \quad \hat{\psi}^{(k)}(n)]^{T} \eqno{\hbox{(19)}}
TABLE I Incoming flows at the intersection of Fig. 1 (veh/h).
Time Interval (“period”) (seconds) 	f_{R_{2(1}} 	f_{R_{4(1)}} 	f_{R_{6(1)}} 	f_{R_{8(1)}}
(h=1) [0, 300) min 	940 	640 	1290 	740
(h=2) [300, 600) min 	1210 	730 	1440 	880
(h=3) [600, 900) min 	1620 	580 	1480 	650
(h=4) [900, 1200) min 	1560 	600 	1610 	900

SECTION IV.
Case study

In this section, some numerical results, relevant to the application of the proposed methodology to the single intersection of Fig. 1 , are presented. An optimization horizon of 20 minutes has been considered, and the incoming flows, measured every 5 minutes, are those reported in Table I . Then, each optimization “period” assumes vehicle interarrival times distributed as exponential random variables with rate \lambda_{j}(h)={3600\over f_{j}(h)} [s^{-1}], \eqno{\hbox{(20)}} View Source Right-click on figure for MathML and additional features. \lambda_{j}(h)={3600\over f_{j}(h)} [s^{-1}], \eqno{\hbox{(20)}} being h = 1, \ldots, 4 the index of the period and j\quad \in \{R_{2(1)}, R_{4(1)}, R_{6(1)}, R_{8(1)}\} , the incoming direction index.

For what concerns the cost function in (4) , in the considered case study it has been chosen \alpha_{{\rm L}}=4 and \alpha_{{\rm M}}=1 , that is J(t)=4J_{{\rm L}}(\psi, t)+J_{{\rm M}}(\psi, t), \eqno{\hbox{(21)}} View Source Right-click on figure for MathML and additional features. J(t)=4J_{{\rm L}}(\psi, t)+J_{{\rm M}}(\psi, t), \eqno{\hbox{(21)}} thus to equalize the two term contributions.
Figure 10
Fig. 10. Queues at input roads R_{2(1)} at the intersection of Fig. 1 .

View All
Figure 11
Fig. 11. Queues at input roads R_{4(1)} at the intersection of Fig. 1 .

View All

A. Numerical Results

To the end of showing the capabilities of the proposed model and optimization algorithm, two scenarios for the considered intersection are taken into account:

    in the first scenario, the nominal values \psi^{\star} of stage durations are considered during the 20 minutes (no optimization is performed);

    in the second scenario, optimized stage durations \psi^{\circ} are considered for each optimization period (time interval of 5 minutes).

The results (lengths of queues) of the first scenario are depicted with dashed lines in Fig. 10 (which is relative to R_{2(1)}/p_{2} ), Fig. 11 (R_{4(1)}/p_{4}) , Fig. 12 (R_{6(1)}/p_{6}) , and Fig. 13 (R_{8(1)}/p_{8}) , whereas the results of the second scenario are depicted with solid lines. As it is easy to note, queue shapes are better when optimized stage durations are considered with respect to the non optimized ones.

An alternative way to evaluate the results of this case study is to compare the sample mean (computed by means of N= 1000 runs ) of the value of the cost function in the first scenario (\mu_{{\rm NO}{\rm N}\ {\rm OPT}}) with that in the second scenario (\mu_{{\rm oP}{\rm T}}) . The two means are \mu_{{\rm NO}{\rm NO}{\rm PT}}={1\over N}\sum_{i=1}^{N} J(\psi^{\star}, \nu)=227.4624, \eqno{\hbox{(22)}} View Source Right-click on figure for MathML and additional features. \mu_{{\rm NO}{\rm NO}{\rm PT}}={1\over N}\sum_{i=1}^{N} J(\psi^{\star}, \nu)=227.4624, \eqno{\hbox{(22)}} and \mu_{{\rm oP}{\rm T}}={1\over N} \sum_{i=1}^{N}J(\psi^{{\rm o}}, \nu)=126.3137. \eqno{\hbox{(23)}} View Source Right-click on figure for MathML and additional features. \mu_{{\rm oP}{\rm T}}={1\over N} \sum_{i=1}^{N}J(\psi^{{\rm o}}, \nu)=126.3137. \eqno{\hbox{(23)}} Note that the comparison has to take into account the stochastic variable \nu , thus leading to the need of computing the above means.
Figure 12
Fig. 12. Queues at input roads R_{6(1)} at the intersection of Fig. 1 .

View All
Figure 13
Fig. 13. Queues at input roads R_{8(1)} at the intersection of Fig. 1 .

View All

Finally, in Fig. 14 , the values of the cost function, each of them computed for each iteration of two runs of the optimization algorithm, are reported, together with their shape. In such a figure, it is evident that the cost function non monotonically decreases “locally”, due to the stochasticity of the system and of the optimization algorithm, whereas it does “globally”. On the other hand, it significantly increases at iteration 51, that corresponds to the beginning of a new optimization run caused by the change of the input flows. Evidently, the optimal solution for the former flows is not still good for the new ones.
Figure 14
Fig. 14. Example of cost function descent at each iteration.

View All

SECTION V.
Conclusion

In this paper, signalized urban areas have been taken into account with the aim of optimizing the performances of the system (more specifically, the queue lengths) by means of a traffic signalling control strategy which optimizes the durations of traffic signal stages through a two-phases optimization algorithm based on a SPSA approach. The traffic system model is represented by means of a stochastic-timed Petri net, which plays a very important role being the evolution of the system state in the control system driven by the Petri net. In the paper, the most important characteristics of the model and its representation have been presented; in particular, differences and improvements with respect to some previous works of the authors have been described.

The paper includes some results about the application of the proposed model and control strategy to a single intersection whose traffic lights consist of two stages. However, the proposed methodology can be applied to more complex intersections or networks of intersections which include, for example, left-turn movements and multi-lane roads. Actually, it has been successfully applied to a traffic network consisting of 4 signalized intersections and 6 roads: the resulting Petri net representation is quite large (hundreds of places and transitions) and then such results cannot be included in the paper mainly due to the lack of space. Finally, the solutions obtained through the application of the proposed control strategy will be validated in the near future by means of their use within a commercial simulation tool.

Authors
Figures
References
Citations
Keywords
Metrics
Advertisement
More Like This
Performance analysis of traffic control system based on stochastic timed Petri net models

Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032)

Published: 1999
Performance analysis of traffic networks based on Stochastic Timed Petri Net models

Proceedings Fifth IEEE International Conference on Engineering of Complex Computer Systems (ICECCS'99) (Cat. No.PR00434)

Published: 1999
View More
See the top organizations patenting in technologies mentioned in this article
Click to Expand
Advertisement
IEEE Account
Profile Information
Purchase Details
Need Help?
Other
A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.
© Copyright 2019 IEEE - All rights reserved. Use of this web site signifies your agreement to the terms and conditions.
US & Canada: +1 800 678 4333
Worldwide: +1 732 981 0060
IEEE Account

    Change Username/Password
    Update Address

Purchase Details

    Payment Options
    Order History
    View Purchased Documents

Profile Information

    Communications Preferences
    Profession and Education
    Technical Interests

Need Help?

    US & Canada: +1 800 678 4333
    Worldwide: +1 732 981 0060
    Contact & Support

    About IEEE Xplore
    Contact Us
    Help
    Accessibility
    Terms of Use
    Nondiscrimination Policy
    Sitemap
    Privacy & Opting Out of Cookies

A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.
© Copyright 2019 IEEE - All rights reserved. Use of this web site signifies your agreement to the terms and conditions.
