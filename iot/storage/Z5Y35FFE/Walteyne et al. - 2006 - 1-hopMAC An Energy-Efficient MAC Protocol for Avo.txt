1-hopMAC: An Energy-Efﬁcient MAC Protocol for
Avoiding 1-hop Neighborhood Knowledge
Thomas Watteyne1,2, Abdelmalik Bachir2, Mischa Dohler2, Dominique Barthel2 and Isabelle Augé-Blum1 1CITI Laboratory, INSA Lyon, France.
{thomas.watteyne, isabelle.auge-blum}@insa-lyon.fr 2France Télécom R&D, Meylan, France.
{thomas.watteyne, abdelmalik.bachir, mischa.dohler, dominique.barthel}@francetelecom.com

Abstract— Wireless Sensor Networks (WSNs) have witnessed a tremendous upsurge in recent years, both in academia and industry; this is mainly attributed to their unprecedented operating conditions and a variety of commercially viable applications. Because of their dependence on scarce battery power, communication protocols need to be energy efﬁcient. However, ﬁnding the optimal solution is challenging as it needs to consider the whole communication stack at once.
In this paper, we propose an approach that aims at optimizing jointly L2 (link) and L3 (routing) protocols. We design 1hopMAC, a communication architecture grouping MAC and routing layers which avoids 1-hop neighborhood knowledge. 1hopMAC can be combined, among others, with a geographic or gradient based routing protocols. We present an analytical study of energy consumption to point out the optimal conﬁguration of 1-hopMAC.
I. INTRODUCTION
Wireless Sensor Networks (WSNs) are used in many application areas, ranging from defense and surveillance to health and intelligent homes [1], [2]. WSNs are composed of small sensor nodes capable of doing three complementary tasks: measuring a physical value, processing that value and communicating with other nodes using wireless technology.
A possibly large number of sensors are deployed inside the area that needs to be covered. In an surveillance scenario, upon sensing a feared event (e.g. the start of a forest ﬁre) nodes send their alarms to a collecting node.
WSNs have witnessed a tremendous upsurge in recent years. From a networking point of view, these networks have very challenging constraints. First, there is no ﬁxed infrastructure (e.g. an access point). Without such a centralized controller, nodes need to cooperate in a distributed manner. Furthermore, topology is subject to changes. Even with static nodes, new nodes can enter the network, and others can disappear because of battery exhaustion or failure. Finally, nodes communicate in a multi-hop way. As transmission power is ﬁnite, transmission range is limited. Intermediate nodes between out-of-reach nodes will serve as relaying nodes. Besides, WSNs have speciﬁc limitations in terms of processing power, available bandwidth, memory and embedded energy, mainly.
Whereas energy harvesting solution are under investigation [3], current sensor nodes [4] are powered by embedded batteries. The number of nodes can reach thousands, and deployment area can be dangerous. Human intervention on the nodes can

therefore not be counted on. This is especially constraining regarding energy, as battery replacement is not possible.
Wireless sensors communicate in a multi-hop manner. Nodes use their local knowledge of the network to communicate globally with all nodes. Local knowledge typically refers to the knowledge of the nodes directly reachable by the node. If a node is directly reachable depends on the transmission range, which depends on several physical factors (distance, transmission power, antennas gains and radiation patterns, fading model and interferences, mainly). We call this set of nodes 1-hop neighbors; the 1-hop neighborhood also includes the node itself. Many routing protocols [5]–[8] have been designed to allow intermediate nodes to be used as relays for otherwise out-of-reach nodes to communicate. One important idea behind those protocols is the knowledge by any node of its 1-hop neighborhood.
1-one neighborhood knowledge traditionally involves periodic information exchange. These messages are called Hello packets. Using periodic Hello packets has two main drawbacks: (1) as the period between two consecutive Hello packets transmissions is not inﬁnitely small, this knowledge is periodically out-of-date — at most of one Hello packet period — and (2) periodic message exchange is very costly in terms of energy. With a Hello packet scheme, even without useful information exchanged, batteries are rapidly depleted. By tuning the Hello packet period, trade off between updating interval and energy consumption is achieved.
To forward a message, a node chooses one node from its 1-hop neighbors and sends it the message. The latter node does the same and relaying goes on until the message reaches destination. To choose the most suitable 1-hop neighbor, a node may use a proactive or a reactive approach. In a proactive approach, the node maintains, through periodic exchange of Hello messages, a list of all its 1-hop neighbors with their corresponding metric values. Then, the node has just to pick from this list the neighbor with the best value. In a reactive approach, the node avoids periodic exchange of Hello messages; it asks its neighbors to send their metric values each time it needs to choose a relaying neighbor.
In lightly loaded networks, reactive approaches save more energy than proactive ones as they avoid the overhead of periodic Hello exchange. We build our solution on top of a reactive approach to circumvent the two main drawbacks

1-4244-0626-9/06/$20.00 (C) 2006 IEEE.

639

of the Hello message scheme: (1) we have an on-demand solution where out-of-date information is avoided, and (2) no energy is used for periodic messages. We obtain an energy efﬁcient communication architecture by combining a three-way handshaking scheme with an energy-efﬁcient MAC (Medium Access Control) protocol.
The remainder of the paper is organized as follows: we provide an overview of related work in Section II. In Section III, we describe our proposed protocol and 3 variants to the basic scheme. We perform an analytical study of energy efﬁciency on the variants and propose a communication architecture in Section IV. We conclude this paper and present future work in Section V.
II. RELATED WORK
This work has two goals: (1) propose a MAC protocol which can be easily combined with a routing protocol and (2) energyefﬁciency.
In this paper, we use our election protocol in Geographic and Gradient Based Routing, which are promising routing schemes for WSNs. We point out that our election protocol has a broad range of applications (choosing the neighbor with most energy, with highest measured temperature . . . ).
A. Geographic and gradient based routing
In routing protocols involving some sort of geographic forwarding [6], [9], a node elects its neighbor closest to destination to be the next hop node. Some protocols use gradient based forwarding [5], [8], [10], [11]. In this scheme, a given metric is attached to each node, such as the number of hops it is from destination.
WSNs pose many challenges regarding routing. They have speciﬁc characteristics, different from wired or wireless network with a central controller (e.g. access point in 802.11) [7]. First of all, it is not suitable to build a global address scheme due to the large number of nodes. Such a scheme involves global control packets for avoiding duplicate addresses, which seems poorly compatible with low bandwidth, energy constrained multi-hop paths. This makes IP-based protocols unsuitable for WSNs. Second, contrary to the traditional oneto-one scheme, communications in most WSN applications are many-to-one. This is because of multiple sources sending messages (e.g. sensed data) to a particular node called sink. Third, multiple close nodes may sense the same phenomenon and thus generate similar messages at the same time, which results in localized congestion. To avoid such a congestion, data aggregation is needed. Fourth, wireless sensors are constrained in terms of computational power, amount of available memory, bandwidth and energy. Energy constraints are a main challenge for designing a WSN communication architecture.
In [6], the authors propose GPSR, a geographic routing protocol for WSNs. In GPSR, each node is supposed to know its geographical position and that of its 1-hop neighbors. The node knows the positions of its 1-hop neighbors from the Hello messages they periodically send. In this scheme, a node chooses the closest node to destination from its 1-hop

Fig. 1. Greedy forwarding fails at s. Right hand rule uses path s-y-z-d. Filled circle represents s’s communication range. Nodes outside the dotted circle are further from d than s. Edges connect nodes able to communicate.
neighborhood as next-hop node, and forwards its data to it. Euclidean distance is used as a closeness metric. This simple approach fails in the case no node is closer to destination than the current node (Fig. 1). GPSR uses the right-hand rule to circumnavigate the void: node s draws an imaginary line from itself to ﬁnal destination d, and rotates this line to the right, using itself as rotating center. The ﬁrst node encountered is elected next hop. This way, path to destination is s-y-z-d.
Geographic forwarding needs position awareness. This assumes GPS-enabled nodes, which is an expensive solution. To tackle this problem, Gradient Based Routing (GBR) [12] assigns a height to each node. This height can for example be the number of hops to the sink. This is done during a gradient setup phase before runtime: (1) the sink node sends out a message containing current height of 0, (2) each node hearing this message puts its height to current height+1 and rebroadcasts this message with its height as current height [8]. It is supposed that collisions are avoided by some MAC scheme. Nodes are supposed to know their height and that of their 1-hop neighbors. During runtime, messages are sent by each node to their lowest 1-hop neighbor. This greedy approach (i.e. messages ﬂow down the steepest slope) is very similar to greedy geographic forwarding. In this work, we address the problem of using the metrics once they have been set up. Studying energy-efﬁcient metric setup mechanisms is considered future work.
Both routing protocols are very promising for WSNs as they require only local information for choosing network wide paths. No explicit self-organization phase is needed in geographical forwarding and [8] proposes a localized protocol for adapting height to changing topologies (node mobility, nodes arriving or dying). Those protocols nevertheless rely on Hello packets for 1-hop neighborhood knowledge, leading to poor energy efﬁciency. We propose a protocol which avoids 1hop neighborhood knowledge, thus the use of periodic Hello packets.
B. Energy-efﬁcient MAC protocols
Sensor network applications usually generate low trafﬁc load so that the communication channel is expected to be idle most of the time. Therefore, idle listening is the most signiﬁcant source of energy dissipation. Indeed, without any speciﬁc energy management, nodes waste a considerable amount of energy as they keep their radios on for large

640

Fig. 2. Preamble sampling technique.

Fig. 3. MFP: avoiding reception of irrelevant preamble.

time intervals while listening to an idle channel. In energyefﬁcient MAC protocols for sensor networks, to mitigate idle listening, nodes sleep for long periods of time instead of being active permanently. These MAC protocols deﬁne a duty-cycle parameter to control the ratio of the activity period to the sleep period [13].
Duty cycles of 1% may substantially reduce energy consumption. However, if a node wakes up only at some chosen instants, there is a need for a method to detect transmissions of other nodes. There are two ways for making it possible for nodes to communicate without message loss due to a transmission to a node that is sleeping. The ﬁrst approach used in protocols like SMAC [13], TMAC [14] and others, nodes synchronize on a common sleep/wakeup schedule by exchanging synchronization messages to set their sleep/wakeup schedule. The second way used in protocols like WiseMAC [15] and BMAC [16], does not ﬁx a common schedule for sleep and wakeup periods to avoid synchronization overhead and to further reduce idle listening in low-rate data networks. Instead, each node chooses its own sleep/wakeup schedule independently of the others and a node transmits a preamble before each data frame which is long enough to make sure that all potential receivers will get their data. We call the second approach preamble sampling MAC (PS-MAC) [14].
Fig. 2 shows an example of a PS-MAC protocol operation. According to the duty-cycle parameter, nodes switch periodically their radios on to sample the channel. If a node ﬁnds the channel is idle, it goes back to sleep immediately. However, if it detects a preamble transmission on the channel, then it keeps its radio on until it receives the subsequent data frame. After receiving the data frame, the node goes back to sleep. To be effective, preamble transmission needs to be at least as long as the period between two consecutive instants of node wakeup. This way, a node makes sure that all potential receivers are awake during its preamble transmission and they get the subsequent data frame.
MFP [17] is a variant to PS-MAC which avoids receiving irrelevant preamble and data messages. The idea is to divide the preamble into a series of consecutive micro-frames. Each of these micro-frames contains the destination nodes address and the number of still to come micro frames before the actual data. After listening to a micro-frame, a node turns it radio off. Only if it is the destination for the data, the node turns its radio on again when the actual data is sent (see Fig. 3).
In [18], it is shown that preamble sampling techniques can yield ultra-low power MAC protocols and, under ideal conditions (scheduled message emissions, perfect synchronization),

Parameter
fX fmin fmax fﬁrst REQ
ACK
DATA
Ttype Pt Pr Pi
T RX ∆t N
fthresh

Value
value of metric f at node X minimum value of f maximum value of f smallest f among 1-hop neighbors request message acknowledgment for REQ actual data message duration, in seconds, of message of type type power consumed when radio in transmission state power consumed when radio in reception state power consumed when radio in idle state time for the radios to be on in variant X variation of backoff when f increases by 1 mean number of nodes in the 1-neighborhood, incl. sender threshold to switch to 1-hopMACvar3 (see IV)
TABLE I
VARIABLE USED THROUGHOUT THIS PAPER.

the resulting protocol is optimal regarding energy consumption. In this paper, we combine geographic and gradient based routing with a preamble sampling MAC protocol to obtain a energy-efﬁcient communication architecture.
III. PROPOSED PROTOCOL AND VARIANTS
It this section, we start by giving the assumptions and models used; then, we present the basic 1-hopMAC protocol, together with 3 variants. We will call these variants 1-hopMACbasic, 1-hopMACvar1, 1-hopMACvar2 and 1hopMACvar3, respectively.
A. Assumptions and model used
We consider that links may be unidirectional, and communication areas can be of any shape. We consider the nodes’ radios cannot detect collision in the sense that they are not able to make the difference between collisions and transmission errors. This assumption is based on the fact that detecting collision, albeit feasible, requires dedicated algorithms and, due to the wireless nature of the communication links, is not always reliable. For instance, current wireless sensor radio chips (such as Chipcon CC1000 or CC2420) do not inform upper layers of message collision. We also assume that each node knows the deployment-dependent network density, i.e. N , the average number of nodes in its 1-hop neighborhood. All variables used throughout this paper – including the ones not presented yet – are listed in Table I.
f is generic and can be of any kind: number of hops or geographical distance to destination, residual energy, etc. Multiple nodes can have the same metric, and we assume all

641

Fig. 4. The topology used during description.

Fig. 6. 1-hopMACbasic. Radio is in reception/transmission state when bloc appears under/above the line, respectively. When no bloc, the radio is in idle
state.

Fig. 7. 1-hopMACvar1: reduce S’s listening period.

Fig. 5. Without handshaking, successful relaying node election is only possible if A B and C are within each others transmission range, i.e. in A ∩ B ∩ C. Transmission ranges are presented here as colored circles.
metrics can only be inside [fmin,fmax]. We will use the topology depicted in Fig. 4 when describing our protocol. Node S wants to send out a message to node A which has the lowest metric fA. A is thus elected relaying node.
To extract our protocol’s energy efﬁciency, we use an energy model. In this model, each node has three states T x, Rx and idle, depending on whether the radio is in transmission, reception or idle state, respectively. We associate a power consumption to each state: Pt, Pr and Pi. We simplify this model by saying Pt = Pr and Pi = 0. This way, energy consumption is proportional to the time radio is in transmission or reception state (radio is on). On actual sensors, the radio accounts for more than 90% of the overall consumed power [4], so other energy consuming parts (sensing, and computing, mainly) are not modeled here.
B. Not using handshaking
As a starting point, using only the most basic approach, S sends out a request message. On hearing this message A, B and C trigger a timer proportional to their metric and answer when this timer elapses. To have only one relaying node, all timers are aborted upon hearing the ﬁrst reply. Nevertheless, nodes A, B and C may not hear each other. This could lead to three distinct relays. Successful timer abortion will only be possible if all nodes are within each others transmission range. Fig. 5 shows that this assumption is hard to reach. We therefore implement a protocol which involves handshaking.
C. 1-hopMACbasic
A node sends out a request message received by its 1-hop neighborhood. Each neighbor will answer this request after a time proportional to its metric. The requesting node can then elect the most suitable node based on when it has received the answers.

We here present the basic 1-hopMAC protocol.
(1) S sends out a request message. (2) A, B and C reply with an ACK message after a time
proportional to fA − fmin, fB − fmin and fC − fmin, respectively. ∆t is used here to convert a metric into a duration. Before sending out ACK, each node listens to the channel to make sure no other ACK is being sent. We hereby avoid collisions if nodes can hear each other’s ACKs. (3) S decides which node will be elected and sends out the message, including in its header the identiﬁer of the node that should receive it (here A).
The resulting communication diagram is presented in Fig. 6. S starts by sending out its request REQ. This is done using the micro-frame preamble sampling MAC described in [17]. Each micro-frame contains the instant at which backoff timers can be started. When a node wakes up, it samples the medium for the minimal duration d and it knows when it has to start its timer. All nodes are thus synchronized at the end of the REQ message (the ﬁrst vertical bar in Fig. 6). From this ﬁrst synchronization point on, S listens to possible acknowledgment ACK messages. As f is bounded, no ACK messages will be sent after ∆t · (fmax − fmin). As all nodes know fmax and fmin, there is a second synchronization point. Right after second synchronization, S sends out a small header containing the next hop node it has elected. All nodes listen to this message, and go to sleep, except the elected node – here A – which receives the DATA message.
D. 1-hopMACvar1: reduce S’s listening period
After hearing the ﬁrst ACK message, S knows which node will be elected as relaying node, so its radio can be turned off. This ﬁrst variant is presented in Fig. 7.
E. 1-hopMACvar2: avoid multiple ACK messages
After A’s ACK, B and C’s ACKs are useless. To avoid this, we can have S send out a "don’t answer anymore"

642

Fig. 8. 1-hopMACvar2: avoid multiple ACK messages.

Fig. 10. Avoiding collisions between multiple REQ messages.

IV. ANALYTICAL STUDY
We have four variants of our protocol: 1-hopMACbasic, 1hopMACvar1, 1-hopMACvar2, 1-hopMACvar3. In this section, by analytical study, we answer which variant is more suitable in which case ?

Fig. 9. 1-hopMACvar3: direct answer.
message from the moment it has received its ﬁrst ACK until the second synchronization point. As all nodes listen to the channel right before sending an ACK, useless ACK messages will be avoided. This variant is presented in Fig. 8.
This variant is beneﬁcial only when the extra power consumed by S to sent its "don’t answer anymore" message is smaller than the energy B and C would have used to send their ACK message. We will study this threshold in detail in Section IV.

A. Times for the radios to be on
As described in section III-A, we approximate energy consumption of variant X by T RX the cumulated time radios are on within the 1-hop neighborhood Eqs. (1)–(4). Remember that N is the number of nodes in the 1-hop neighborhood, including the sender, and that d is the minimal time needed by a node to sample the channel. For the sake of simplicity, we assume that the duration of the election message is equal to d the average duration of receiving one micro frame. In Eqs. (1)–(4), the items between square brackets correspond to the energy consumed by the sender, by the receiver, and by other nodes within sender’s 1-hop neighborhood, respectively.

F. 1-hopMACvar3: direct answer
As depicted in Fig. 9, it is beneﬁcial to send the DATA message during the "don’t answer anymore" message period. As with 1-hopMACvar2, nodes B and C do not send useless ACKs. After having sent an ACK, A needs to listen to the medium. Indeed, S announces it has elected A right after receiving its ACK. A needs to stay in reception state to receive the message.
G. Handling collisions
In case f values are close to each other’s, or equal, ACK messages can collide. Nevertheless, if nodes can hear each other ACK, collision is avoided as each node listens to the channel before sending an ACK. If not, collision probability is greater than 0. If f values are close to each other’s – but not equal – this probability drops while increasing ∆t. We tune ∆t depending on an acceptable collision probability. [19] shows that determining an analytical value of the collision probability is not trivial. An analytical study on collision probability versus ∆t will be presented in future work.
As with ACK messages, collisions between several REQ messages is possible. To minimize this probability, all nodes willing to send a message listen to the medium ﬁrst. This way, as depicted in Fig. 10, B will only send out its REQ message when transmission from S has ended.

T Rbasic = TREQ + (fmax − fmin) · ∆t + TACK +

d + TDATA

+ d + TACK + d + TDATA

+ (N − 2) d + TACK + d ,

(1)

T Rvar1 = TREQ + (fﬁrst − fmin) · ∆t + TACK +

d + TDATA

+ d + TACK + d + TDATA

+ (N − 2) d + TACK + d ,

(2)

T Rvar2 = TREQ + (fmax − fmin) · ∆t + d + TACK +

d + TDATA

+ d + d + TACK + d + TDATA

+ (N − 2) d + d ,

(3)

T Rvar3 = TREQ + (fﬁrst − fmin) · ∆t + d + TACK +

d + TDATA + max 0; (fmax − fmin) · ∆t

+d + TACK − (fﬁrst − fmin) · ∆t

−d − TACK − d − TDATA

+ d + d + TACK + d + TDATA

+ (N − 2) d + d .

(4)

643

B. Comparative analysis

We compare now above equations, looking for the protocol’s variant which consumes least energy. We extract the following rules:
Rule 1: As T Rbasic > T Rvar1, 1-hopMACvar1 should always be used instead of 1-hopMACbasic.
Rule 2: We study T Rvar2 − T Rvar1. 1-hopMACvar2 should be used instead of 1-hopMACvar1 only if:

fﬁrst

>

f max ·

∆t +

(2 − N )TACK ∆t

+

2d .

We call the right hand part of this inequality fthresh. Rule 3: As T Rvar2 ≥ T Rvar3, 1-hopMACvar3 should
always be used instead of 1-hopMACvar2.
We conclude that we should use 1-hopMACvar1 or 1hopMACvar3, depending on the value of fﬁrst.

C. Proposed communication architecture: 1-hopMAC
Swapping between 1-hopMACvar1 and 1-hopMACvar3 can be done dynamically. As all nodes know fmax, ∆t, N , TACK and d, they calculate fthresh. Any node with f higher than fthresh uses 1-hopMACvar3, others 1-hopMACvar1. For a neighbor node, the difference is that it has to listen to the channel after having transmitted its ACK. S starts using 1-hopMACvar1. If it receives the ﬁrst ACK after fthresh · ∆t, it switches to 1hopMACvar3.
Using this approach, we obtain a multi-mode protocol, where the decision on which mode to use is distributed and no signaling messages are necessary. By swapping between modes, we achieve energy efﬁciency.

V. CONCLUSION AND FUTURE WORK
This paper has presented a communication architecture grouping the MAC layer and some parts of the routing layer. Our proposition is easily usable with routing protocols such as geographic or gradient based routing, leading to an energyefﬁcient routing protocol. We took advantage of preamble sampling MAC layer techniques to make 1-hopMAC energy efﬁcient. Without 1-hop neighborhood knowledge, we avoid the outdated data and the perpetual energy consumption induced by a Hello packet approach.
In this paper, we have proposed a basic version of 1hopMAC, and three variants. An analytical study of energy consumption has lead to a communication architecture which dynamically switches between two variants, leading to energy efﬁciency.
As for future work, we plan to extract 1-hopMAC’s energy efﬁciency through simulation, and look into lifetime increase by comparing it to other communication schemes. Furthermore, we would like to propose a rule to tune the value of ∆t depending on the acceptable collision probability between ACK messages.

REFERENCES
[1] I. F. Akyildiz and I. Kasimoglu, “Wireless sensor and actor networks: research challenges,” in International Conference on Mobile Ad Hoc and Sensor Systems (MASS). Fort Lauderdale, Florida, USA: IEEE, December 2004.
[2] C. Dugas, “Conﬁguring and managing a large-scale monitoring network solving real world challenges for ultra-low powered and long-range wireless mesh networks,” International Journal of Network Management, vol. 15, pp. 269–282, 2005.
[3] X. Jiang, J. Polastre, and D. Culler, “Perpetual environmentally powered sensor networks,” in International Symposium on Information Processing in Sensor Networks (IPSN). Los Angeles, CA, USA: IEEE, April 2005, pp. 463–468.
[4] J. Polastre, R. Szewczyk, and D. Culler, “Telos: Enabling ultra-low power wireless research,” in International Conference on Information Processing in Sensor Networks: Special track on Platform Tools and Design Methods for Network Embedded Sensors (IPSN/SPOTS). Los Angeles, CA, USA: IEEE, April 2005.
[5] C. E. Perkins and E. M. Royer, “Ad hoc on-demand distance vector routing,” in Workshop on Mobile Computing Systems and Applications. New Orleans, USA: IEEE, February 1999, pp. 90–100.
[6] B. Karp and H. Kung, “Gpsr: Greedy perimeter stateless routing for wireless networks,” in Annual International Conference on Mobile Computing and Networking (Mobicom). ACM, August 2000, pp. 243– 254.
[7] K. Akkaya and M. Younis, “A survey on routing protocols for wireless sensor networks,” Ad Hoc Networks, vol. 3, no. 3, pp. 325–349, May 2005.
[8] K.-H. Han, Y.-B. Ko, and J.-H. Kim, “A novel gradient approach for efﬁcient data dissemination in wireless sensor networks,” in IEEE 2004 International Conference on Vehicular Technology Conference (VTC), Fall 2004. [Online]. Available: http://dmc.ajou.ac.kr/paper/hkh_vtc04f. pdf
[9] C. Lu, B. M. Blum, T. F. Abdelzaher, J. A. Stankovic, and T. He, “Rap: A real-time communication architecture for large-scale wireless sensor networks,” in Real-Time Technology and Application Symposium (RTAS). San Jose, CA, USA: IEEE, September 2002.
[10] D. B. Johnson, D. A. Maltz, and J. Broch, Ad Hoc Networking. Charles E. Perkins, 2001, ch. DSR: The Dynamic Source Routing Protocol for Multihop Wireless Ad Hoc Networks, pp. 139–172.
[11] J. Faruque, K. Psounis, and A. Helmy, “Analysis of gradient-based routing protocols in sensor networks,” in International Conference on Distributed Computing in Sensor Systems (DCOSS). Marina del Rey, CA, USA: IEEE/ACM, June 2005, pp. 258–275.
[12] J. Faruque and A. Helmy, “Gradient-based routing in sensor networks,” ACM SIGMOBILE Mobile Computing and Communications Review, Special feature on MOBICOM 2003 posters, vol. 4, no. 4, pp. 50–52, october 2003.
[13] W. Ye, J. Heidemann, and D. Estrin, “An energy-efﬁcient mac protocol for wireless sensor networks,” in Annual Joint Conference of the Computer and Communication Societies (INFOCOM), vol. 3. New York, NY, USA: IEEE, June 2002, pp. 1567–1576.
[14] T. Van Dam and K. Langendoen, “An adaptive energy-efﬁcient mac protocol for wireless sensor networks,” in ACM Sensys, Los Angeles, CA, USA, November 2003, pp. 171–180.
[15] A. El-Hoiydi, J.-D. Decotignie, and J. Hernandez, “Low power mac protocols for infrastructure wireless sensor networks,” in European Wireless Conference (EW), Barcelona, Spain, February 2004, pp. 563– 569.
[16] J. Polastre, J. Hill, and D. Culler, “Versatile low power media access for wireless sensor networks,” in Second ACM Conference on Embedded Networked Sensor Systems (SenSys). Baltimore, MD, USA: ACM Press, November 3-5 2004, pp. 95–107.
[17] A. Bachir, D. Barthel, M. Heusse, and A. Duda, “Micro-frame preamble mac for multihop wireless sensor networks,” in International Conference on Communications (ICC). Istanbul,Turkey: IEEE, 11-15 June 2006.
[18] W. Ye and J. Heidemann, “Ultra-low duty cycle mac with scheduled channel polling,” University of Southern California/Information Sciences Institute, Marina Del Rey, CA, USA, Tech. Rep. ISI-TR-2005-604, July 2005.
[19] A. Gkelias, “Performance analysis of random access schemes for wireless ad hoc networks,” Ph.D. dissertation, King’s College London, Centre for Telecommunications Research, september 2005.

644

