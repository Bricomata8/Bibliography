OM2M: Interoperable M2M service platform
Mahdi Ben Alaya Thierry Monteil Samir Medjiah
Khalil Drira
{ben.alaya, monteil, medjiah, drira}@laas.fr www.om2m.org
1

M2M world of connected services
2

M2M market fragmentation
• The current marketplace is extremely fragmented, which has increased the R&D cost in each specific domain.
• Current M2M silo model is not an efficient way to communicate, it is a barrier to further development.
• Many vertical M2M solutions have been designed independently and separately for different applications, which impedes large-scale M2M deployment.
3

Standards landscape for M2M
 143 organizations around the world are involved in M2M standardization according to the Global Standards Collaboration M2MTask Force.

Buildings Consumer

Industrial

M2M

Energy Health care

Retail

Security

Transportation

4

Standards for M2M service capabilities
Standards for vMe2rtMicaSleIrnvdicuestcraiepsabilities: aTaprpgleicta:teionnds-to end enablement across Tsearvgerts:,egnaatbelweainyste, droepveicreasblwei,tchostestfafincdieanrtdiSzeodlusteiornvisce interfaces.

M2M network

Source: ETSI M2M

5

Smart M2M standard (ETSI M2M)
 Provide a horizontal M2M service platform with a generic set of service capabilities to enable M2M interoperability in terms of communication and data.

 Define a Service Capability Layer (SCL) on top of connectivity layers:  SCL deployed in network server, gateways and devices.  SCL enables discovery, registration, authentication, data-transfer using containers, publish/subscribe, groups, access rights, security, etc.

 Interface with existing technologies:  Multiple communication protocol binding.  Re-use existing remote device management.  Interwork with vendorspecific and legacy devices.
 Facilitate innovation across industries by exposing data and providing services.

Invert The pipe

6
Source: ETSI M2M

OM2M is an open source implementation of the Smart M2M standard, and is a member of Eclipse IoT Working Group.

OM2M web site http://om2m.org

OM2M Interested parties

Eclipse IoT collaboration

OM2M users

7

OM2M architecture

End user devices

HTTP/CoAP

HTTP/CoAP

ZIGBEE

Data Analytic

M2M Server

M2M gateway

SCADA

Interface

Network domain

Device and Gateway domain

8

OM2M functional architecture
• OM2M provides a Service Capability Layer (SCL) including a set of common services for M2M interoperability.
• A SCL can be deployed on the Network domain, or on the Device and Gateway domain.
9

OM2M primitive procedures and resources

 OM2M implements a RESTful API.  All M2M communications are performed
based on simple primitive procedures.

OM2M Primitive procedures

SCL resource tree structure

• Each SCL data model is structured using a standardized resource tree.
• The resources can be simply triggered using basic CRUD requests.
10

OM2M resource tree example

Gateway

Applications

Smart_Meter_APP

HTTP/CoAP or
Interworking Proxy
Smart Meter

Containers

DESCRIPTOR ContentInstances DESCRIPTION_1
DATA ContentInstances

HTTP/CoAP

HTTP/CoAP

M2M server

End user

MEASUREMENT_3

MEASUREMENT_2

MEASUREMENT_1

M2M gateway

11

Binding to multiple communication protocols
Other Machine

HTTP client COAP client

Mapping CORE

Service Capability Layer (SCL)

Request

Protocol

• •

TargetID: resourceURI Method: RETRIEVE/ CREATE/

independent Request

UPDATE/ DELETE / EXECUTE

• RequestingEntity

username/password

• Representation: Object

Response
• Status: OK, CREATED/ NOT_FOUND, Etc.
• URI: location • Representation: Object

Protocol independent
Response

HTTP & CoAP binding

12

OM2M building blocks

 OM2M is a java platform running on top of an OSGi Equinox runtime which make it highly extensible via plugins.
 Each SCL includes required plugins and is build as an Eclipse product using maven and Tycho.

Generic Processing

Communication Protocol Binding

Interworking Proxy

Device Management

Security

Additional Services

CORE HTT P COAP MQTT ZIGBEE KNX 6LowPAN OMA-DM LightWeigth M2M TL S TLS-PSK Autonomic Computing Data Centric Routing Your plugin!

OSGi EQUINOX framework Java Runtime Environment
Operating System Hardware

OM2M main building blocks

13

M2M smart Metering Example 1

M2M smart Metering Example 1
DA

dIa ElectMeterDSCL
Applications

DSCL

mIa SmartMeteringNCSL
Applications

Scls

Scls

mId

NA NSCL

Smart Meter Device

Smart Metering
Server

A representation of the NSCL and DSCL along with their corresponding resource structure.

ElectMeterDSCL

M2M smart Metering Example 1

DA

ElectProcessingApp

dIa
DSCL

SmartMeteringNCSL

P O mIa S T

Applications

Applications

ElectProcessingApp

Scls

Scls

NA NSCL

mId

Smart Meter Device

Smart Metering
Server

Step 1- Network Application Registers to the NSCL

M2M smart Metering Example 1

DA

ElectProcessingApp

dIa ElectMeterDSCL

DSCL

mIa SmartMeteringNCSL

Applications

Applications

ElectProcessingApp

Scls

Scls

SmartMeteringNSCL mId

ElectMeterDCSL

POST

NA NSCL

Smart Meter Device

Smart Metering
Server

Step 3- The Smart Meter Registers to the NSCL

ElectMeterApp ElectMeterDSCL

M2M smart Metering Example 1

P O dIa S T

DA DSCL

ElectProcessingApp mIa
SmartMeteringNCSL

Applications

Applications

MeterDataApp

ElectProcessingApp

Scls

ElectMeterDCSL
mId Scls

SmartMeteringNSCL

NA NSCL

Smart Meter Device

Smart Metering
Server

Step 3- Device Application Registers to the DSCL

ElectMeterApp ElectMeterDSCL

M2M smart Metering Example 1

P O dIa S T

DA DSCL

ElectProcessingApp mIa
SmartMeteringNCSL

Applications

Applications

MeterDataApp

ElectProcessingApp

Containers

Scls

ElectData
mId Scls

ElectMeterDCSL

SmartMeteringNSCL

NA NSCL

Smart Meter Device

Smart Metering
Server

Step 4- Device Application Creates An ElectData container

ElectMeterApp ElectMeterDSCL

M2M smart Metering Example 1

P O dIa S T

DA DSCL

ElectProcessingApp mIa
SmartMeteringNCSL

Applications

Applications

MeterDataApp

ElectProcessingApp

Containers

Scls

ElectData

ContentInstances

mId

ElectMeterDCSL

Data

Scls

SmartMeteringNSCL

Smart Meter Device

Smart Metering
Server

Step 5- Device Application Creates a Data contentInstane

NA NSCL

M2M smart Metering Example 1

ElectMeterApp dIa
ElectMeterDSCL

DA DSCL

ElectProcessingApp

G E mIa T

SmartMeteringNCSL

Applications

Applications

MeterDataApp

ElectProcessingApp

Containers

Scls

ElectData

ContentInstances

mId

ElectMeterDCSL

Data

GET

Scls

SmartMeteringNSCL

Smart Meter Device

Smart Metering
Server

Step 5- Network Application Read Data content Instance

NA NSCL

ElectMeterApp ElectMeterDSCL

M2M smart Metering Example 1

DA
dIa
DSCL

ElectProcessingApp

P

O

mIa S

T

SmartMeteringNCSL

NA NSCL

Applications

Applications

MeterDataApp

ElectProcessingApp

Containers

Scls

ElectData

ContentInstances

mId

ElectMeterDCSL

Data

Subscriptions

ElecProcSub

POST

Scls

SmartMeteringNSCL
Smart Meter Device

Smart Metering
Server

Step 5’- Network Application Create Subscription on ElectData contetnInstances

M2M smart Metering Example 1

ElectMeterApp ElectMeterDSCL

P O dIa S T

DA DSCL

ElectProcessingApp mIa
SmartMeteringNCSL

Applications

Applications

MeterDataApp

ElectProcessingApp

Containers

Scls

ElectData

ContentInstances

mId

ElectMeterDCSL

Data Subscriptions

POST

ElecProcSub Scls

SmartMeteringNSCL
Smart Meter Device

Smart Metering
Server

Step 6’- Network Application receives notification

POST

NA NSCL

M2M smart Metering Example 2

M2M smart Metering Example 2
DA

dIa ElectMeterDSCL
Applications

DSCL

mIa SmartMeteringNCSL
Applications

Scls

Scls

mId

NA NSCL

Smart Meter Device

Smart Metering
Server

A representation of the NSCL and DSCL along with their corresponding resource structure.

M2M smart Metering Example 2

dIa ElectMeterDSCL

DA DSCL

ElectProcessingApp SmartMeteringNCSL

p o mIa s t

Applications

Applications

ElectProcessingApp

Scls

Scls

NA NSCL

mId

Smart Meter Device

Smart Metering
Server

Step 1- Network Application Registration to the NSCL

ElectMeterDSCL

M2M smart Metering Example 2

DA

ElectProcessingApp

dIa
DSCL

SmartMeteringNCSL

p o mIa s t

Applications

Applications

ElectProcessingApp

Scls

Scls

Subscriptions

mId

NewMeters

NA NSCL

Smart Meter Device

Smart Metering
Server

Step2- NA Subscribes for Registering Smart Meters

M2M smart Metering Example 2

DA

ElectProcessingApp

dIa ElectMeterDSCL

DSCL

mIa SmartMeteringNCSL

Applications

Applications

ElectProcessingApp

Scls

Scls

SmartMeteringNSCL mId

Subscriptions NewMeters

POST

ElectMeterDCSL

NA NSCL

Smart Meter Device

Smart Metering
Server

Step 3- The Smart Meter Registers to the NSCL

M2M smart Metering Example 2

DA

ElectProcessingApp

dIa ElectMeterDSCL

DSCL

mIa SmartMeteringNCSL

Applications

Applications

ElectProcessingApp

Scls

Scls

SmartMeteringNSCL mId

Subscriptions NewMeters

ElectMeterDCSL

POST

NA NSCL

Smart Meter Device

Smart Metering
Server

Step 4- Notifying the Network Application about a Registered Smart Meter

ElectMeterApp ElectMeterDSCL

M2M smart Metering Example 2

P O dIa S T

DA DSCL

ElectProcessingApp mIa
SmartMeteringNCSL

Applications

Applications

MeterDataApp

ElectProcessingApp

Scls

Scls

SmartMeteringNSCL mId

Subscriptions NewMeters

ElectMeterDCSL

NA NSCL

Smart Meter Device

Smart Metering
Server

Step 5- Device Application Registration to the DSCL

M2M smart Metering Example 2

ElectMeterApp ElectMeterDSCL

P O dIa S T

DA DSCL

ElectProcessingApp mIa
SmartMeteringNCSL

NA NSCL

Applications

Applications

MeterDataApp

ElectProcessingApp

Scls

Scls

SmartMeteringNSCL mId

Subscriptions NewMeters

POST

ElectMeterDCSL Applications

Elect Meter Device

ElectMeterApp
Smart Metering
Server

Step 6- Announcing a Registered DA to the NSCL

ElectMeterApp ElectMeterDSCL

M2M smart Metering Example 2

P O dIa S T

DA DSCL

ElectProcessingApp mIa
SmartMeteringNCSL

NA DSCL

Applications

Applications

MeterDataApp

ElectProcessingApp

Scls

Scls

SmartMeteringNSCL mId

Subscriptions NewMeters

POST

ElectMeterDCSL Applications

Smart Meter Device

ElectMeterApp

Smart Metering
Server

Containers ElectData

Step 7- Reporting Meter Data through the Use of Container Resource

Demonstration
33

Thank you for you attention
34

