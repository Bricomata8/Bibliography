Approximating Trafﬁc Simulation using Neural Networks and its Application in Trafﬁc Optimization

Paweł Gora
University of Warsaw p.gora@mimuw.edu.pl

Karol Kurach
University of Warsaw kk236085@mimuw.edu.pl

Abstract
We present an idea for approximating outcomes of trafﬁc simulation using neural networks, which might be especially useful in one of most difﬁcult trafﬁc optimization problems, the trafﬁc signal settings problem. Results of initial experiments show that such approximation may have a very good accuracy, which may lead to important applications in advanced trafﬁc management systems.
1 Introduction
Large trafﬁc congestion is a serious civilizational and commercial issue, causing waste of fuel/energy, drivers’ time and money, increasing noise and emission of fumes [1]. Thus, the problem of a proper trafﬁc management is of utmost importance for our society. There exist many approaches for improving urban trafﬁc, e.g.,
• reducing trafﬁc density by introducing fees (or bans), car-sharing / carpooling, extending public transport, building new roads,
• advanced traveler information systems (e.g., variable message signs, Google Maps), • adaptive trafﬁc signal control.
In the presented research, the focus is on the last approach: adaptive trafﬁc signal control. More precisely, we design algorithms for the trafﬁc signal setting optimization problem, which was proven to be NP-hard for very simple cases ([2]) and seems to be at least that hard for a more advanced trafﬁc models, e.g., microscopic trafﬁc simulation model based on a cellular automaton, which is used in our work [3]. However, we expect that the presented methodology may go far beyond that problem and may found applications in many other optimization problems related to complex processes.
In our approach, we evaluate trafﬁc control strategies using large-scale trafﬁc simulation and use metaheuristics (e.g., genetic algorithms) to search through a large space of possible settings, to ﬁnd the best one (or suboptimal). This approach alone may give quite good results ([4], [5]), but a large computational complexity prevents application of our method to a real-time trafﬁc management (however, the approach may be still very useful). Thus, one of major goals of our recent research was to speed up conducted experiments, in particular, to reduce time required for evaluating trafﬁc control strategies (i.e., computing values of the objective function).
We came up with an idea for applying neural networks to approximate outcomes of trafﬁc simulation, which may signiﬁcantly reduce time of computing values of the objective function. We implemented the idea and ran initial experiments, focusing on the trafﬁc signal setting problem. Our experiments gave promising and potentially very important results.
In Section 2 we present state of the art of trafﬁc optimization and identiﬁed issues of existing approaches. In Section 3 we describe the trafﬁc optimization problem that we tackle and outline our idea for a simulation-based trafﬁc management system. We also explain why the undertaken
30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.

research is so important and may have a signiﬁcant impact on the future of trafﬁc management. Section 4 summarizes our experiments related to approximation of simulation outcomes using neural networks. Finally, Section 5 concludes the paper.
2 Existing approaches to trafﬁc signal control
Some cites have already installed trafﬁc signal control systems such as SCATS ([6]), SCOOT ([7]), RHODES ([8]), OPAC ([9]), MARLIN ([10]). In many cases their quality is good and they are able to improve the trafﬁc, at least in typical, recurrent and predictable conditions, and in case of low travel demand and low number of cars. The problem usually arises in case of a heavy demand or atypical conditions, such as sudden road blockage (e.g., caused by a car accident [11]), changes in trafﬁc organization (e.g., because of mass events or roadworks), bad weather conditions.
We identiﬁed the following issues of existing trafﬁc management systems:
• reactiveness, but not proactiveness: reacting to past and present trafﬁc conditions (which might be sufﬁcient for regular, smooth, recurrent trafﬁc, but may not be sufﬁcient when major changes happen - the reaction might be inappropriate or just too late to prevent occurrence of a large trafﬁc jam), but not anticipating and preventing undesired trafﬁc states,
• lack of accurate evaluation of changes introduced to the trafﬁc control system, • relatively small space of possible modiﬁcations to the trafﬁc control system, • lack of scalability, questionable efﬁciency in case of large road networks.
A comprehensive review of existing trafﬁc management systems can be found in [12].
3 The idea for a simulation-based trafﬁc optimization
To solve problems related to existing trafﬁc management systems we develop a simulation-based trafﬁc management system evaluating many different trafﬁc control strategies using large-scale trafﬁc simulation. Also, metaheuristics (e.g., genetic algorithms) are used as the main optimization method, neural networks are used to approximate values of the objective function obtained from the simulation to speed up computations, along with cluster computing (e.g., Apache Spark framework), GPU and a cloud computing infrastructure, which may also ensure robustness, scalability and location-independence. The proposed system is composed of 4 main modules:
1. module for collecting real-world trafﬁc data, 2. module for building virtual trafﬁc model, 3. module for ﬁnding (sub)optimal trafﬁc management settings, 4. module for applying (sub)optimal settings to the real-world trafﬁc control.
We don’t go into technical details of the system, because it is beyond the scope of the paper (details can be found in the appended slides [13] and poster [14]), instead, we focus on the crucial component of the system, which is a module for ﬁnding (sub)optimal trafﬁc management settings for a given trafﬁc situation, represented as a virtual trafﬁc model (built based on collected trafﬁc data: positions, speeds and routes of all cars). Among possible trafﬁc control settings, which values could be altered to ﬁnd the optimum, we can distinguish, for example: trafﬁc signal settings, route assignments, parameters of algorithms of drive of self-driving cars. The focus of the presented research is on trafﬁc signal settings, namely, so called trafﬁc signal setting optimization problem:
Deﬁnition 3.1 Trafﬁc signal setting problem
• Given is a directed graph of a road network with trafﬁc signals located in some vertices. Trafﬁc signals are objects with attributes: duration of a red signal phase (TR), duration of a green signal phase (TG), offset (TS) - values of these attributes may be modiﬁed.
• Trafﬁc Signal Setting (TSS) - set of values (TG, TR, TS) for all signals in a road network.
2

• Given is a virtual trafﬁc model: cars with initial speeds, positions in some vertices of the road network graph, static routes, rules of drive on edges.
• Given is an objective function F which calculates the quality of a trafﬁc signal setting. • Goal: Find a trafﬁc signal setting for which value of F is (sub)optimal.
The presented optimization problem is nonconvex and in some cases was proven to be NP-hard ([2]).

3.1 The objective function

What should be the objective function F ? How its values should be calculated? Ideally, we would

like to have a function which for a given TSS (and initial trafﬁc conditions) returns some values

related

to

trafﬁc

efﬁciency,

e.g.,

the

total

waiting

time

(times

spent

with

a

speed

0

km h

,

summed

up

over

all

cars),

time

spent

with

a

low

speed

(e.g.,

below

20

km h

),

average

speed

of

all

cars,

delay

(wasted time, in comparison to the free ﬂow case), emission of fumes, fuel consumption, length of

queues at crossroads, number of stops. In case of a real-world trafﬁc, existing in an open environ-

ment, there is no such computable function (having such a computable function would mean that we

can deterministically simulate and predict the future). The only solution is to make approximations,

such as microscopic trafﬁc simulation models describing dynamics of cars. They can simulate the

trafﬁc, starting from a certain initial conditions, and compute positions and speeds of all cars in each

second, as well as values of the objective function (e.g., waiting times) of the optimization prob-

lem. However, ﬁnding an optimal trafﬁc control setting in a simulation scenario may not necessarily

mean that this setting will be also optimal in a real-world scenario, but there are reasonable chances

that it will be sufﬁciently good, e.g., it will prevent occurrences of trafﬁc jams and will be usually

better than most of other settings. To make it happen, it is important to have trafﬁc models and trafﬁc

simulators that have very good consistency with a real-world trafﬁc, at least with regard to values of

the objective function.

In the presented research, the authors chose to use the Trafﬁc Simulation Framework software (TSF, [3]), which employs realistic road network data of Warsaw, originating from the OpenStreetMap service [15], and implements a microscopic simulation model based on a cellular automaton. To make simulations realistic, the software was calibrated using population density data, origin-destination (OD) matrices and results of trafﬁc ﬂow measurements for Warsaw.

3.2 Trafﬁc optimization using genetic algorithms
For the presented optimization problem, since 2010 we have been running series of experiments with a genetic algorithm (GA) encoding set of trafﬁc offsets (values from the set {0, 1, 2, . . . , 119}) for the whole road network in Warsaw as genotypes (so far, we have been assuming that TR and TG were constant: TR = 62, TG = 58). In the ﬁrst try, in 2010, we achieved 3.11% reduction of waiting times (comparing to the best known setting in a randomly generated initial set) after only 10 iterations of the GA algorithm (details are described in [4]), but one of drawbacks was a signiﬁcant computational complexity - running a single trafﬁc signal setting evaluation (simulating 10 minutes of trafﬁc) took a few minutes on a standard machine. The consequence is that the method can’t be applied to the real-time adaptive trafﬁc management responding to dynamically changing trafﬁc conditions (however, it might be used to determine default optimal settings for each hour, based on historic data and patterns, and estimated OD matrices, but still it is important to compute values of the objective function relatively fast).
The later research on this topic was focused on speeding up computations of the objective function and the whole optimization process. The most signiﬁcant progress was achieved in 2015, when computations were run in a high-performance computing cluster and a microscopic simulation model was replaced by a mesoscopic model, in which travel times (and waiting times) of vehicles are just estimated based on default speeds of drive for each road segment - times of computing values of the objective function were signiﬁcantly reduced giving opportunity to evaluate much more trafﬁc signal settings. As a consequence, GA was able to ﬁnd settings reducing waiting times up to 18.12% on the whole road network of Warsaw, and even more (up to 51%) on a smaller region (Stara Ochota district - 15 crossroads with trafﬁc signals). Details can be found in [5].

3

4 Approximating values of the objective function using neural networks
In order to achieve greater speed up of computing values of the objective function, we trained neural networks to approximate outcomes of simulations in a microscopic model. In case of a sufﬁciently good accuracy of approximations, it would be possible to compute (approximate) values of the objective function using neural networks a few orders of magnitude faster than by using simulations.

4.1 Setup

We developed TensorTrafﬁc - a TensorFlow-based software for training neural networks to approx-

imate outcomes of trafﬁc simulations. Using this software, we ran many experiments aiming to

approximate

values

of

the

objective

function

-

the

total

time

spent

with

a

speed

0

km h

during

10

min-

utes of simulation, summed up over all vehicles travelling through a subregion of a Warsaw’s road

network (Stara Ochota district - 15 crossroads with trafﬁc signals). In the paper we focus only on

the most recent and valid results, but many initial experiments led us to useful conclusions which

we took into account while designing next experiments.

We performed our experiments on the data from the TSF’s microscopic model, running in a setting with 30000 cars initially and 20 new cars starting drive in each second. We randomly selected 117033 trafﬁc signal settings with a value of the objective function computed by the simulation. Each trafﬁc signal setting can be represented as a vector of 15 offsets - random integers between 0 and 119, which were the features of our model.

Then, we ran in TensorTrafﬁc a very small grid search (12 conﬁgurations) to optimize the network. Each time we randomly divided obtained set into a training set (80% of all settings) and a test set (20% of all settings) and applied a 5-fold cross validation on the train set. We trained the network using Adam optimizer [16] with a batch size of 100. The loss function was a mean square error. We considered 3 different values of a learning rate (0.001, 0.01, 0.1) and 4 different conﬁgurations of neurons: [100, 100] (2 layers with 100 neurons each), [100, 100, 100] (3 layers with 100 neurons), [200, 200] (2 layers with 200 neurons), [200] (1 layer with 200 neurons).

4.2 Results
In the best scenario, for learning_rate = 0.01, neurons = [100, 100, 100], we achieved an average relative error 1.56% and a maximal relative error 9.18%. A similar result was achieved for learning_rate = 0.1, neurons = [100, 100, 100]: an average relative error 1.74% and a maximal relative error 8.47%. We also found out that approximations are better for larger networks (more layers, more neurons). Details can be found in the appended slides.

5 Conclusions and future work
Generally, training neural networks (or other machine learning algorithms) to approximate outcomes of simulations of complex processes might have many important applications. Usually such simulations are time-consuming and it is not easy to speed them up or estimate their results, because complex systems are usually computationally irreducible [17].
The conducted research is preliminary, but results are very promising. We have started working on next experiments, in which we introduce additional parameters (and NN’s features) related to the number of cars and urban area on which the objective function is computed and initial results show that we can achieve even better approximation accuracy for a microscopic model.
From a practical point of view, it is important to train the neural network as fast as possible, so an interesting research question is how this process can be optimized. Another interesting question is how the accuracy of approximations depend on the size of the training set and how to design neural networks to minimize required size (in order to minimize the number of required simulations). We are planning to investigate these topics and employ cloud computing infrastructure and cluster computing frameworks (e.g., Apache Spark) to speed up required experiments.
4

References
[1] Urban Mobility Scorecard, http://mobility.tamu.edu/ums, 2015. [2] Yang, C. B.& Yeh, Y. J. „The model and properties of the trafﬁc light problem”, Proc. of Inter-
national Conference on Algorithms, Kaohsiung, Taiwan, pp. 19-26, 1996. [3] Gora, P., "Trafﬁc Simulation Framework - a Cellular Automaton based tool for simulating and
investigating real city trafﬁc", in "Recent Advances in Intelligent Information Systems", pp. 641653, ISBN: 978-83-60434-59-8, 2009. [4] Gora, P., "A genetic algorithm approach to optimization of vehicular trafﬁc in cities by means of conﬁguring trafﬁc lights", in "Emergent Intelligent Technologies in the Industry", 2011, pp. 1-10, ISBN: 978-3-642-22731-8, 2011. [5] Gora, P., Pardel, p., "Application of genetic algorithms and high-performance computing to the Trafﬁc Signal Setting problem", in "24th International Workshop, CS&P 2015, Vol. 1", Rzeszów, 2015, pp. 146-157, ISBN: 978-83-7996-181-8. [6] Lowrie, P.R., "The Sydney Co-ordinated Adaptive Trafﬁc System—Principles, Methodology, Algorithms", Proceedings of the International Conference on Road Trafﬁc Signaling, Institution of Electrical Engineers, London, U.K., Vol. 207, pp. 67–70, 1982. [7] Hunt, P.B., Robertson, D.I., Bretherton, R.D., and Winton, R.I., "SCOOT—A Trafﬁc Responsive Method of Coordinating Signals", Report TRRL 1014, Transport and Road Research Laboratory, Crowthorne, Berkshire, England, 1981. [8] Head, K.L., Mirchandani P.B., and Shepherd D., “A Hierarchical Framework for Real-Time Trafﬁc Control”, Transportation Research Record 1360, Transportation Research Board, National Research Council, Washington, D.C., 1992. [9] Gartner, N.H., "Demand-Responsive Decentralized Urban Trafﬁc Control", Report DOT/RSPA/DPB-50/81/24, U.S. Department of Transportation, Washington, D.C., 1982. [10] El-Tantawy, S., Abdulhai, B., "Multiagent Reinforcement Learning for Integrated Network of Adaptive Trafﬁc Signal Controllers (MARLIN-ATSC): Methodology and Large-Scale Application on Downtown Toronto", in "IEEE Conference on Intelligent Transportation Systems", vol. 14, issue 3, pp. 1140-1150, 2013. [11] Pan, B., Demiryurek, U., Shahabi, C., "Forecasting Spatiotemporal Impact of Trafﬁc Incidents on Road Networks", ICDM 2013, pp. 587-596. [12] "Adaptive Trafﬁc Control Systems: Domestic and Foreign State of Practice", NCHRP SYNTHESIS 403, Transportation Research Board, 2010. [13] Gora P., "Simulation-based trafﬁc management system for connected and autonomous vehicles", slides to be published in the "The Journal of Polish–Brazilian Science and Technology”. [14] Gora P., "Simulation-based trafﬁc management system for connected and autonomous vehicles", poster to be published in the "Automated Vehicles Symposium 2016 Proceedings". [15] OpenStreetMap service, http://openstreetmap.org, last accessed: 1.12.2016. [16] Kingma, D.P., Ba, J.L. "Adam: a method for stochastic optimization", International Conference on Learning Representations, pp. 1–13, 2015, https://arxiv.org/pdf/1412.6980v8. pdf. [17] Wolfram, S., “A New Kind of Science”, Wolfram Media, Inc., 2002.
5

